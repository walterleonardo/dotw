// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: genProto/Dotw_ProtoBuf.proto

#include "genProto/Dotw_ProtoBuf.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace protobuffer {
namespace dotwproto {
class PSFRequest_RoomOccupancyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PSFRequest_RoomOccupancy>
      _instance;
} _PSFRequest_RoomOccupancy_default_instance_;
class PSFRequest_HotelFiltersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PSFRequest_HotelFilters>
      _instance;
} _PSFRequest_HotelFilters_default_instance_;
class PSFRequest_RoomTypeFilters_RoomCategoryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PSFRequest_RoomTypeFilters_RoomCategory>
      _instance;
} _PSFRequest_RoomTypeFilters_RoomCategory_default_instance_;
class PSFRequest_RoomTypeFiltersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PSFRequest_RoomTypeFilters>
      _instance;
} _PSFRequest_RoomTypeFilters_default_instance_;
class PSFRequest_AdditionalFiltersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PSFRequest_AdditionalFilters>
      _instance;
} _PSFRequest_AdditionalFilters_default_instance_;
class PSFRequest_SearchPeriodCriteriaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PSFRequest_SearchPeriodCriteria>
      _instance;
} _PSFRequest_SearchPeriodCriteria_default_instance_;
class PSFRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PSFRequest>
      _instance;
} _PSFRequest_default_instance_;
class PSFReply_RoomDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PSFReply_RoomData>
      _instance;
} _PSFReply_RoomData_default_instance_;
class PSFReply_HotelCodeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PSFReply_HotelCode>
      _instance;
} _PSFReply_HotelCode_default_instance_;
class PSFReply_BookingChannelCodeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PSFReply_BookingChannelCode>
      _instance;
} _PSFReply_BookingChannelCode_default_instance_;
class PSFReply_RoomIndexDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PSFReply_RoomIndex>
      _instance;
} _PSFReply_RoomIndex_default_instance_;
class PSFReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PSFReply>
      _instance;
} _PSFReply_default_instance_;
class HDRequest_HotelIdsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HDRequest_HotelIds>
      _instance;
} _HDRequest_HotelIds_default_instance_;
class HDRequest_ReturnHotelStaticDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HDRequest_ReturnHotelStaticData>
      _instance;
} _HDRequest_ReturnHotelStaticData_default_instance_;
class HDRequest_ReturnRoomTypeStaticDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HDRequest_ReturnRoomTypeStaticData>
      _instance;
} _HDRequest_ReturnRoomTypeStaticData_default_instance_;
class HDRequest_ReturnRateDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HDRequest_ReturnRateData>
      _instance;
} _HDRequest_ReturnRateData_default_instance_;
class HDRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HDRequest>
      _instance;
} _HDRequest_default_instance_;
class HDReply_HotelStaticData_RoomTypeStaticData_SupplierRoomNameDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HDReply_HotelStaticData_RoomTypeStaticData_SupplierRoomName>
      _instance;
} _HDReply_HotelStaticData_RoomTypeStaticData_SupplierRoomName_default_instance_;
class HDReply_HotelStaticData_RoomTypeStaticData_RoomInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HDReply_HotelStaticData_RoomTypeStaticData_RoomInfo>
      _instance;
} _HDReply_HotelStaticData_RoomTypeStaticData_RoomInfo_default_instance_;
class HDReply_HotelStaticData_RoomTypeStaticData_RoomCategoryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HDReply_HotelStaticData_RoomTypeStaticData_RoomCategory>
      _instance;
} _HDReply_HotelStaticData_RoomTypeStaticData_RoomCategory_default_instance_;
class HDReply_HotelStaticData_RoomTypeStaticDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HDReply_HotelStaticData_RoomTypeStaticData>
      _instance;
} _HDReply_HotelStaticData_RoomTypeStaticData_default_instance_;
class HDReply_HotelStaticData_ImagesDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HDReply_HotelStaticData_ImagesData>
      _instance;
} _HDReply_HotelStaticData_ImagesData_default_instance_;
class HDReply_HotelStaticData_TransportationDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HDReply_HotelStaticData_TransportationData>
      _instance;
} _HDReply_HotelStaticData_TransportationData_default_instance_;
class HDReply_HotelStaticDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HDReply_HotelStaticData>
      _instance;
} _HDReply_HotelStaticData_default_instance_;
class HDReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HDReply>
      _instance;
} _HDReply_default_instance_;
}  // namespace dotwproto
}  // namespace protobuffer
namespace protobuf_genProto_2fDotw_5fProtoBuf_2eproto {
void InitDefaultsPSFRequest_RoomOccupancyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::protobuffer::dotwproto::_PSFRequest_RoomOccupancy_default_instance_;
    new (ptr) ::protobuffer::dotwproto::PSFRequest_RoomOccupancy();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protobuffer::dotwproto::PSFRequest_RoomOccupancy::InitAsDefaultInstance();
}

void InitDefaultsPSFRequest_RoomOccupancy() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPSFRequest_RoomOccupancyImpl);
}

void InitDefaultsPSFRequest_HotelFiltersImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::protobuffer::dotwproto::_PSFRequest_HotelFilters_default_instance_;
    new (ptr) ::protobuffer::dotwproto::PSFRequest_HotelFilters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protobuffer::dotwproto::PSFRequest_HotelFilters::InitAsDefaultInstance();
}

void InitDefaultsPSFRequest_HotelFilters() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPSFRequest_HotelFiltersImpl);
}

void InitDefaultsPSFRequest_RoomTypeFilters_RoomCategoryImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::protobuffer::dotwproto::_PSFRequest_RoomTypeFilters_RoomCategory_default_instance_;
    new (ptr) ::protobuffer::dotwproto::PSFRequest_RoomTypeFilters_RoomCategory();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protobuffer::dotwproto::PSFRequest_RoomTypeFilters_RoomCategory::InitAsDefaultInstance();
}

void InitDefaultsPSFRequest_RoomTypeFilters_RoomCategory() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPSFRequest_RoomTypeFilters_RoomCategoryImpl);
}

void InitDefaultsPSFRequest_RoomTypeFiltersImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_genProto_2fDotw_5fProtoBuf_2eproto::InitDefaultsPSFRequest_RoomTypeFilters_RoomCategory();
  {
    void* ptr = &::protobuffer::dotwproto::_PSFRequest_RoomTypeFilters_default_instance_;
    new (ptr) ::protobuffer::dotwproto::PSFRequest_RoomTypeFilters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protobuffer::dotwproto::PSFRequest_RoomTypeFilters::InitAsDefaultInstance();
}

void InitDefaultsPSFRequest_RoomTypeFilters() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPSFRequest_RoomTypeFiltersImpl);
}

void InitDefaultsPSFRequest_AdditionalFiltersImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::protobuffer::dotwproto::_PSFRequest_AdditionalFilters_default_instance_;
    new (ptr) ::protobuffer::dotwproto::PSFRequest_AdditionalFilters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protobuffer::dotwproto::PSFRequest_AdditionalFilters::InitAsDefaultInstance();
}

void InitDefaultsPSFRequest_AdditionalFilters() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPSFRequest_AdditionalFiltersImpl);
}

void InitDefaultsPSFRequest_SearchPeriodCriteriaImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::protobuffer::dotwproto::_PSFRequest_SearchPeriodCriteria_default_instance_;
    new (ptr) ::protobuffer::dotwproto::PSFRequest_SearchPeriodCriteria();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protobuffer::dotwproto::PSFRequest_SearchPeriodCriteria::InitAsDefaultInstance();
}

void InitDefaultsPSFRequest_SearchPeriodCriteria() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPSFRequest_SearchPeriodCriteriaImpl);
}

void InitDefaultsPSFRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_genProto_2fDotw_5fProtoBuf_2eproto::InitDefaultsPSFRequest_RoomOccupancy();
  protobuf_genProto_2fDotw_5fProtoBuf_2eproto::InitDefaultsPSFRequest_HotelFilters();
  protobuf_genProto_2fDotw_5fProtoBuf_2eproto::InitDefaultsPSFRequest_RoomTypeFilters();
  protobuf_genProto_2fDotw_5fProtoBuf_2eproto::InitDefaultsPSFRequest_AdditionalFilters();
  protobuf_genProto_2fDotw_5fProtoBuf_2eproto::InitDefaultsPSFRequest_SearchPeriodCriteria();
  {
    void* ptr = &::protobuffer::dotwproto::_PSFRequest_default_instance_;
    new (ptr) ::protobuffer::dotwproto::PSFRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protobuffer::dotwproto::PSFRequest::InitAsDefaultInstance();
}

void InitDefaultsPSFRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPSFRequestImpl);
}

void InitDefaultsPSFReply_RoomDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::protobuffer::dotwproto::_PSFReply_RoomData_default_instance_;
    new (ptr) ::protobuffer::dotwproto::PSFReply_RoomData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protobuffer::dotwproto::PSFReply_RoomData::InitAsDefaultInstance();
}

void InitDefaultsPSFReply_RoomData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPSFReply_RoomDataImpl);
}

void InitDefaultsPSFReply_HotelCodeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_genProto_2fDotw_5fProtoBuf_2eproto::InitDefaultsPSFReply_RoomData();
  {
    void* ptr = &::protobuffer::dotwproto::_PSFReply_HotelCode_default_instance_;
    new (ptr) ::protobuffer::dotwproto::PSFReply_HotelCode();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protobuffer::dotwproto::PSFReply_HotelCode::InitAsDefaultInstance();
}

void InitDefaultsPSFReply_HotelCode() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPSFReply_HotelCodeImpl);
}

void InitDefaultsPSFReply_BookingChannelCodeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_genProto_2fDotw_5fProtoBuf_2eproto::InitDefaultsPSFReply_HotelCode();
  {
    void* ptr = &::protobuffer::dotwproto::_PSFReply_BookingChannelCode_default_instance_;
    new (ptr) ::protobuffer::dotwproto::PSFReply_BookingChannelCode();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protobuffer::dotwproto::PSFReply_BookingChannelCode::InitAsDefaultInstance();
}

void InitDefaultsPSFReply_BookingChannelCode() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPSFReply_BookingChannelCodeImpl);
}

void InitDefaultsPSFReply_RoomIndexImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_genProto_2fDotw_5fProtoBuf_2eproto::InitDefaultsPSFReply_BookingChannelCode();
  {
    void* ptr = &::protobuffer::dotwproto::_PSFReply_RoomIndex_default_instance_;
    new (ptr) ::protobuffer::dotwproto::PSFReply_RoomIndex();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protobuffer::dotwproto::PSFReply_RoomIndex::InitAsDefaultInstance();
}

void InitDefaultsPSFReply_RoomIndex() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPSFReply_RoomIndexImpl);
}

void InitDefaultsPSFReplyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_genProto_2fDotw_5fProtoBuf_2eproto::InitDefaultsPSFReply_RoomIndex();
  {
    void* ptr = &::protobuffer::dotwproto::_PSFReply_default_instance_;
    new (ptr) ::protobuffer::dotwproto::PSFReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protobuffer::dotwproto::PSFReply::InitAsDefaultInstance();
}

void InitDefaultsPSFReply() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPSFReplyImpl);
}

void InitDefaultsHDRequest_HotelIdsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::protobuffer::dotwproto::_HDRequest_HotelIds_default_instance_;
    new (ptr) ::protobuffer::dotwproto::HDRequest_HotelIds();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protobuffer::dotwproto::HDRequest_HotelIds::InitAsDefaultInstance();
}

void InitDefaultsHDRequest_HotelIds() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsHDRequest_HotelIdsImpl);
}

void InitDefaultsHDRequest_ReturnHotelStaticDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::protobuffer::dotwproto::_HDRequest_ReturnHotelStaticData_default_instance_;
    new (ptr) ::protobuffer::dotwproto::HDRequest_ReturnHotelStaticData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protobuffer::dotwproto::HDRequest_ReturnHotelStaticData::InitAsDefaultInstance();
}

void InitDefaultsHDRequest_ReturnHotelStaticData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsHDRequest_ReturnHotelStaticDataImpl);
}

void InitDefaultsHDRequest_ReturnRoomTypeStaticDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::protobuffer::dotwproto::_HDRequest_ReturnRoomTypeStaticData_default_instance_;
    new (ptr) ::protobuffer::dotwproto::HDRequest_ReturnRoomTypeStaticData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protobuffer::dotwproto::HDRequest_ReturnRoomTypeStaticData::InitAsDefaultInstance();
}

void InitDefaultsHDRequest_ReturnRoomTypeStaticData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsHDRequest_ReturnRoomTypeStaticDataImpl);
}

void InitDefaultsHDRequest_ReturnRateDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::protobuffer::dotwproto::_HDRequest_ReturnRateData_default_instance_;
    new (ptr) ::protobuffer::dotwproto::HDRequest_ReturnRateData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protobuffer::dotwproto::HDRequest_ReturnRateData::InitAsDefaultInstance();
}

void InitDefaultsHDRequest_ReturnRateData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsHDRequest_ReturnRateDataImpl);
}

void InitDefaultsHDRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_genProto_2fDotw_5fProtoBuf_2eproto::InitDefaultsHDRequest_HotelIds();
  protobuf_genProto_2fDotw_5fProtoBuf_2eproto::InitDefaultsHDRequest_ReturnHotelStaticData();
  protobuf_genProto_2fDotw_5fProtoBuf_2eproto::InitDefaultsHDRequest_ReturnRoomTypeStaticData();
  protobuf_genProto_2fDotw_5fProtoBuf_2eproto::InitDefaultsHDRequest_ReturnRateData();
  {
    void* ptr = &::protobuffer::dotwproto::_HDRequest_default_instance_;
    new (ptr) ::protobuffer::dotwproto::HDRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protobuffer::dotwproto::HDRequest::InitAsDefaultInstance();
}

void InitDefaultsHDRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsHDRequestImpl);
}

void InitDefaultsHDReply_HotelStaticData_RoomTypeStaticData_SupplierRoomNameImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::protobuffer::dotwproto::_HDReply_HotelStaticData_RoomTypeStaticData_SupplierRoomName_default_instance_;
    new (ptr) ::protobuffer::dotwproto::HDReply_HotelStaticData_RoomTypeStaticData_SupplierRoomName();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protobuffer::dotwproto::HDReply_HotelStaticData_RoomTypeStaticData_SupplierRoomName::InitAsDefaultInstance();
}

void InitDefaultsHDReply_HotelStaticData_RoomTypeStaticData_SupplierRoomName() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsHDReply_HotelStaticData_RoomTypeStaticData_SupplierRoomNameImpl);
}

void InitDefaultsHDReply_HotelStaticData_RoomTypeStaticData_RoomInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::protobuffer::dotwproto::_HDReply_HotelStaticData_RoomTypeStaticData_RoomInfo_default_instance_;
    new (ptr) ::protobuffer::dotwproto::HDReply_HotelStaticData_RoomTypeStaticData_RoomInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protobuffer::dotwproto::HDReply_HotelStaticData_RoomTypeStaticData_RoomInfo::InitAsDefaultInstance();
}

void InitDefaultsHDReply_HotelStaticData_RoomTypeStaticData_RoomInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsHDReply_HotelStaticData_RoomTypeStaticData_RoomInfoImpl);
}

void InitDefaultsHDReply_HotelStaticData_RoomTypeStaticData_RoomCategoryImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::protobuffer::dotwproto::_HDReply_HotelStaticData_RoomTypeStaticData_RoomCategory_default_instance_;
    new (ptr) ::protobuffer::dotwproto::HDReply_HotelStaticData_RoomTypeStaticData_RoomCategory();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protobuffer::dotwproto::HDReply_HotelStaticData_RoomTypeStaticData_RoomCategory::InitAsDefaultInstance();
}

void InitDefaultsHDReply_HotelStaticData_RoomTypeStaticData_RoomCategory() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsHDReply_HotelStaticData_RoomTypeStaticData_RoomCategoryImpl);
}

void InitDefaultsHDReply_HotelStaticData_RoomTypeStaticDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_genProto_2fDotw_5fProtoBuf_2eproto::InitDefaultsHDReply_HotelStaticData_RoomTypeStaticData_SupplierRoomName();
  protobuf_genProto_2fDotw_5fProtoBuf_2eproto::InitDefaultsHDReply_HotelStaticData_RoomTypeStaticData_RoomInfo();
  protobuf_genProto_2fDotw_5fProtoBuf_2eproto::InitDefaultsHDReply_HotelStaticData_RoomTypeStaticData_RoomCategory();
  {
    void* ptr = &::protobuffer::dotwproto::_HDReply_HotelStaticData_RoomTypeStaticData_default_instance_;
    new (ptr) ::protobuffer::dotwproto::HDReply_HotelStaticData_RoomTypeStaticData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protobuffer::dotwproto::HDReply_HotelStaticData_RoomTypeStaticData::InitAsDefaultInstance();
}

void InitDefaultsHDReply_HotelStaticData_RoomTypeStaticData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsHDReply_HotelStaticData_RoomTypeStaticDataImpl);
}

void InitDefaultsHDReply_HotelStaticData_ImagesDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::protobuffer::dotwproto::_HDReply_HotelStaticData_ImagesData_default_instance_;
    new (ptr) ::protobuffer::dotwproto::HDReply_HotelStaticData_ImagesData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protobuffer::dotwproto::HDReply_HotelStaticData_ImagesData::InitAsDefaultInstance();
}

void InitDefaultsHDReply_HotelStaticData_ImagesData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsHDReply_HotelStaticData_ImagesDataImpl);
}

void InitDefaultsHDReply_HotelStaticData_TransportationDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::protobuffer::dotwproto::_HDReply_HotelStaticData_TransportationData_default_instance_;
    new (ptr) ::protobuffer::dotwproto::HDReply_HotelStaticData_TransportationData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protobuffer::dotwproto::HDReply_HotelStaticData_TransportationData::InitAsDefaultInstance();
}

void InitDefaultsHDReply_HotelStaticData_TransportationData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsHDReply_HotelStaticData_TransportationDataImpl);
}

void InitDefaultsHDReply_HotelStaticDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_genProto_2fDotw_5fProtoBuf_2eproto::InitDefaultsHDReply_HotelStaticData_RoomTypeStaticData();
  protobuf_genProto_2fDotw_5fProtoBuf_2eproto::InitDefaultsHDReply_HotelStaticData_ImagesData();
  protobuf_genProto_2fDotw_5fProtoBuf_2eproto::InitDefaultsHDReply_HotelStaticData_TransportationData();
  {
    void* ptr = &::protobuffer::dotwproto::_HDReply_HotelStaticData_default_instance_;
    new (ptr) ::protobuffer::dotwproto::HDReply_HotelStaticData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protobuffer::dotwproto::HDReply_HotelStaticData::InitAsDefaultInstance();
}

void InitDefaultsHDReply_HotelStaticData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsHDReply_HotelStaticDataImpl);
}

void InitDefaultsHDReplyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_genProto_2fDotw_5fProtoBuf_2eproto::InitDefaultsHDReply_HotelStaticData();
  {
    void* ptr = &::protobuffer::dotwproto::_HDReply_default_instance_;
    new (ptr) ::protobuffer::dotwproto::HDReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protobuffer::dotwproto::HDReply::InitAsDefaultInstance();
}

void InitDefaultsHDReply() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsHDReplyImpl);
}

::google::protobuf::Metadata file_level_metadata[25];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFRequest_RoomOccupancy, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFRequest_RoomOccupancy, adults_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFRequest_RoomOccupancy, children_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFRequest_RoomOccupancy, twin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFRequest_RoomOccupancy, extrabed_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFRequest_HotelFilters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFRequest_HotelFilters, rating_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFRequest_HotelFilters, luxury_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFRequest_HotelFilters, location_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFRequest_HotelFilters, locationid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFRequest_HotelFilters, amenitie_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFRequest_HotelFilters, leisure_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFRequest_HotelFilters, business_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFRequest_HotelFilters, hotelpreference_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFRequest_HotelFilters, chain_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFRequest_HotelFilters, attraction_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFRequest_HotelFilters, hotelname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFRequest_HotelFilters, builtyear_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFRequest_HotelFilters, renovationyear_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFRequest_HotelFilters, floors_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFRequest_HotelFilters, noofrooms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFRequest_HotelFilters, firesafety_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFRequest_HotelFilters, lastupdated_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFRequest_RoomTypeFilters_RoomCategory, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFRequest_RoomTypeFilters_RoomCategory, maincategory_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFRequest_RoomTypeFilters_RoomCategory, subcategory_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFRequest_RoomTypeFilters_RoomCategory, view_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFRequest_RoomTypeFilters_RoomCategory, beddingtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFRequest_RoomTypeFilters_RoomCategory, attribute1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFRequest_RoomTypeFilters_RoomCategory, attribute2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFRequest_RoomTypeFilters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFRequest_RoomTypeFilters, suite_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFRequest_RoomTypeFilters, roomamenitie_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFRequest_RoomTypeFilters, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFRequest_RoomTypeFilters, roomname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFRequest_RoomTypeFilters, roomcategories_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFRequest_AdditionalFilters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFRequest_SearchPeriodCriteria, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFRequest_SearchPeriodCriteria, travelfrom_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFRequest_SearchPeriodCriteria, travelto_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFRequest_SearchPeriodCriteria, bookingdatetime_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFRequest, psfilter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFRequest, customerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFRequest, environment_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFRequest, requestsource_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFRequest, exceptrestrictions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFRequest, passengernationalityorresidenceprovided_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFRequest, hotelids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFRequest, city_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFRequest, country_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFRequest, bookingchannelswithautomapping_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFRequest, bookingchanneltypes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFRequest, excludedbookingchannel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFRequest, activeforroomcategories_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFRequest, roomoccupancy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFRequest, hotelfilters_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFRequest, roomtypefilters_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFRequest, additionalfilters_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFRequest, searchperiodcriteria_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFReply_RoomData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFReply_RoomData, roomtypecode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFReply_HotelCode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFReply_HotelCode, hotelcodeoriginal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFReply_HotelCode, citycode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFReply_HotelCode, roomdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFReply_BookingChannelCode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFReply_BookingChannelCode, hotelcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFReply_RoomIndex, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFReply_RoomIndex, roomindex_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFReply, results_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFReply, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFReply, errorcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFReply, replystring_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::PSFReply, replystringint_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_HotelIds, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_HotelIds, hotelid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_HotelIds, roomtypecodes_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnHotelStaticData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnHotelStaticData, description1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnHotelStaticData, description2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnHotelStaticData, geopoint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnHotelStaticData, ratingdescription_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnHotelStaticData, images_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnHotelStaticData, direct_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnHotelStaticData, hotelpreference_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnHotelStaticData, builtyear_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnHotelStaticData, renovationyear_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnHotelStaticData, floors_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnHotelStaticData, noofrooms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnHotelStaticData, luxury_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnHotelStaticData, address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnHotelStaticData, zipcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnHotelStaticData, location_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnHotelStaticData, locationid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnHotelStaticData, location1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnHotelStaticData, location2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnHotelStaticData, location3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnHotelStaticData, statename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnHotelStaticData, statecode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnHotelStaticData, countryname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnHotelStaticData, regionname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnHotelStaticData, regioncode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnHotelStaticData, amenitie_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnHotelStaticData, leisure_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnHotelStaticData, business_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnHotelStaticData, transportation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnHotelStaticData, hotelphone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnHotelStaticData, hotelcheckin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnHotelStaticData, hotelcheckout_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnHotelStaticData, minage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnHotelStaticData, rating_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnHotelStaticData, firesafety_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnHotelStaticData, chain_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnHotelStaticData, lastupdated_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnHotelStaticData, transfermandatory_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnHotelStaticData, tariffnotes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnHotelStaticData, chainname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnHotelStaticData, hotelproperty_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnHotelStaticData, fulladdress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnHotelStaticData, exclusive_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnHotelStaticData, attraction_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnHotelStaticData, areacode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnHotelStaticData, areaname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnHotelStaticData, geolocations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnHotelStaticData, priority_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnRoomTypeStaticData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnRoomTypeStaticData, roomamenities_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnRoomTypeStaticData, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnRoomTypeStaticData, supplierroomname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnRoomTypeStaticData, twin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnRoomTypeStaticData, roominfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnRoomTypeStaticData, specials_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnRoomTypeStaticData, roomimages_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnRoomTypeStaticData, roomcategory_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnRateData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnRateData, occupancy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnRateData, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnRateData, ratetype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnRateData, paymentmode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnRateData, allowsextrameals_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnRateData, allowsspecialrequests_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnRateData, allowsbeddingpreference_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnRateData, allowsspecials_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnRateData, passengernamesrequiredforbooking_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnRateData, allocationdetails_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnRateData, minstay_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnRateData, dateapplyminstay_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnRateData, cancellationrules_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnRateData, withincancellationdeadline_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnRateData, tariffnotes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnRateData, isbookable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnRateData, onrequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnRateData, total_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnRateData, dates_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnRateData, freestay_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnRateData, discount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnRateData, dayonrequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnRateData, including_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnRateData, dailylefttosell_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnRateData, dailyminstay_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnRateData, lefttosell_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest_ReturnRateData, specials_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest, hoteldatarequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest, hotelids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest, returnhotelstaticdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest, returnroomtypestaticdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest, returnratedata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDRequest, languageid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData_RoomTypeStaticData_SupplierRoomName, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData_RoomTypeStaticData_SupplierRoomName, roomname_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData_RoomTypeStaticData_RoomInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData_RoomTypeStaticData_RoomInfo, maxoccupancy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData_RoomTypeStaticData_RoomInfo, maxadultwithchildren_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData_RoomTypeStaticData_RoomInfo, minchildage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData_RoomTypeStaticData_RoomInfo, maxchildage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData_RoomTypeStaticData_RoomInfo, maxadult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData_RoomTypeStaticData_RoomInfo, maxextrabed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData_RoomTypeStaticData_RoomInfo, maxchildren_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData_RoomTypeStaticData_RoomInfo, children_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData_RoomTypeStaticData_RoomCategory, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData_RoomTypeStaticData_RoomCategory, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData_RoomTypeStaticData_RoomCategory, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData_RoomTypeStaticData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData_RoomTypeStaticData, twin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData_RoomTypeStaticData, roomamenities_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData_RoomTypeStaticData, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData_RoomTypeStaticData, supplierroomname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData_RoomTypeStaticData, roominfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData_RoomTypeStaticData, roomcategory_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData_ImagesData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData_ImagesData, thumb_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData_ImagesData, alt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData_ImagesData, category_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData_ImagesData, url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData_ImagesData, roomtypeid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData_TransportationData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData_TransportationData, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData_TransportationData, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData_TransportationData, dist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData_TransportationData, distanceunit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData_TransportationData, disttime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData_TransportationData, directions_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData, roomtypestaticdatalist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData, description1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData, description2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData, geopoint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData, ratingdescription_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData, images_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData, direct_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData, hotelpreference_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData, preferred_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData, builtyear_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData, renovationyear_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData, floors_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData, noofrooms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData, luxury_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData, hotelname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData, address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData, zipcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData, location_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData, locationid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData, location1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData, location2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData, location3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData, cityname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData, citycode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData, statename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData, statecode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData, countryname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData, countrycode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData, regionname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData, regioncode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData, amenitie_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData, leisure_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData, business_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData, transportation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData, hotelphone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData, hotelcheckin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData, hotelcheckout_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData, minage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData, rating_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData, firesafety_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData, chain_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData, lastupdated_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData, transfermandatory_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData, tariffnotes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData, chainname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData, hotelproperty_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData, fulladdress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData, attraction_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply_HotelStaticData, exclusive_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply, hotelstaticdatalist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply, errorcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply, replystring_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuffer::dotwproto::HDReply, replystringint_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::protobuffer::dotwproto::PSFRequest_RoomOccupancy)},
  { 9, -1, sizeof(::protobuffer::dotwproto::PSFRequest_HotelFilters)},
  { 31, -1, sizeof(::protobuffer::dotwproto::PSFRequest_RoomTypeFilters_RoomCategory)},
  { 42, -1, sizeof(::protobuffer::dotwproto::PSFRequest_RoomTypeFilters)},
  { 52, -1, sizeof(::protobuffer::dotwproto::PSFRequest_AdditionalFilters)},
  { 57, -1, sizeof(::protobuffer::dotwproto::PSFRequest_SearchPeriodCriteria)},
  { 65, -1, sizeof(::protobuffer::dotwproto::PSFRequest)},
  { 88, -1, sizeof(::protobuffer::dotwproto::PSFReply_RoomData)},
  { 94, -1, sizeof(::protobuffer::dotwproto::PSFReply_HotelCode)},
  { 102, -1, sizeof(::protobuffer::dotwproto::PSFReply_BookingChannelCode)},
  { 108, -1, sizeof(::protobuffer::dotwproto::PSFReply_RoomIndex)},
  { 114, -1, sizeof(::protobuffer::dotwproto::PSFReply)},
  { 124, -1, sizeof(::protobuffer::dotwproto::HDRequest_HotelIds)},
  { 131, -1, sizeof(::protobuffer::dotwproto::HDRequest_ReturnHotelStaticData)},
  { 183, -1, sizeof(::protobuffer::dotwproto::HDRequest_ReturnRoomTypeStaticData)},
  { 196, -1, sizeof(::protobuffer::dotwproto::HDRequest_ReturnRateData)},
  { 228, -1, sizeof(::protobuffer::dotwproto::HDRequest)},
  { 239, -1, sizeof(::protobuffer::dotwproto::HDReply_HotelStaticData_RoomTypeStaticData_SupplierRoomName)},
  { 245, -1, sizeof(::protobuffer::dotwproto::HDReply_HotelStaticData_RoomTypeStaticData_RoomInfo)},
  { 258, -1, sizeof(::protobuffer::dotwproto::HDReply_HotelStaticData_RoomTypeStaticData_RoomCategory)},
  { 265, -1, sizeof(::protobuffer::dotwproto::HDReply_HotelStaticData_RoomTypeStaticData)},
  { 276, -1, sizeof(::protobuffer::dotwproto::HDReply_HotelStaticData_ImagesData)},
  { 286, -1, sizeof(::protobuffer::dotwproto::HDReply_HotelStaticData_TransportationData)},
  { 297, -1, sizeof(::protobuffer::dotwproto::HDReply_HotelStaticData)},
  { 351, -1, sizeof(::protobuffer::dotwproto::HDReply)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuffer::dotwproto::_PSFRequest_RoomOccupancy_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuffer::dotwproto::_PSFRequest_HotelFilters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuffer::dotwproto::_PSFRequest_RoomTypeFilters_RoomCategory_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuffer::dotwproto::_PSFRequest_RoomTypeFilters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuffer::dotwproto::_PSFRequest_AdditionalFilters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuffer::dotwproto::_PSFRequest_SearchPeriodCriteria_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuffer::dotwproto::_PSFRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuffer::dotwproto::_PSFReply_RoomData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuffer::dotwproto::_PSFReply_HotelCode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuffer::dotwproto::_PSFReply_BookingChannelCode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuffer::dotwproto::_PSFReply_RoomIndex_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuffer::dotwproto::_PSFReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuffer::dotwproto::_HDRequest_HotelIds_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuffer::dotwproto::_HDRequest_ReturnHotelStaticData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuffer::dotwproto::_HDRequest_ReturnRoomTypeStaticData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuffer::dotwproto::_HDRequest_ReturnRateData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuffer::dotwproto::_HDRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuffer::dotwproto::_HDReply_HotelStaticData_RoomTypeStaticData_SupplierRoomName_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuffer::dotwproto::_HDReply_HotelStaticData_RoomTypeStaticData_RoomInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuffer::dotwproto::_HDReply_HotelStaticData_RoomTypeStaticData_RoomCategory_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuffer::dotwproto::_HDReply_HotelStaticData_RoomTypeStaticData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuffer::dotwproto::_HDReply_HotelStaticData_ImagesData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuffer::dotwproto::_HDReply_HotelStaticData_TransportationData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuffer::dotwproto::_HDReply_HotelStaticData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuffer::dotwproto::_HDReply_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "genProto/Dotw_ProtoBuf.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 25);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\034genProto/Dotw_ProtoBuf.proto\022\025protobuf"
      "fer.dotwproto\"\255\014\n\nPSFRequest\022\020\n\010psfilter"
      "\030\001 \001(\t\022\022\n\ncustomerId\030\002 \001(\005\022\023\n\013environmen"
      "t\030\003 \001(\t\022\025\n\rrequestSource\030\004 \001(\005\022\032\n\022except"
      "Restrictions\030\005 \003(\005\022/\n\'passengerNationali"
      "tyOrResidenceProvided\030\006 \001(\010\022\020\n\010hotelIds\030"
      "\007 \003(\005\022\014\n\004city\030\010 \001(\t\022\017\n\007country\030\t \001(\005\022&\n\036"
      "bookingChannelsWithAutoMapping\030\n \003(\005\022\033\n\023"
      "bookingChannelTypes\030\013 \003(\005\022\036\n\026excludedBoo"
      "kingchannel\030\014 \003(\005\022\037\n\027activeForRoomCatego"
      "ries\030\r \001(\010\022F\n\rroomOccupancy\030\016 \003(\0132/.prot"
      "obuffer.dotwproto.PSFRequest.RoomOccupan"
      "cy\022D\n\014hotelFilters\030\017 \001(\0132..protobuffer.d"
      "otwproto.PSFRequest.HotelFilters\022J\n\017room"
      "TypeFilters\030\020 \001(\01321.protobuffer.dotwprot"
      "o.PSFRequest.RoomTypeFilters\022N\n\021addition"
      "alFilters\030\021 \001(\01323.protobuffer.dotwproto."
      "PSFRequest.AdditionalFilters\022T\n\024searchPe"
      "riodCriteria\030\022 \001(\01326.protobuffer.dotwpro"
      "to.PSFRequest.SearchPeriodCriteria\032Q\n\rRo"
      "omOccupancy\022\016\n\006adults\030\001 \001(\005\022\020\n\010children\030"
      "\002 \003(\005\022\014\n\004twin\030\003 \001(\010\022\020\n\010extraBed\030\004 \001(\010\032\317\002"
      "\n\014HotelFilters\022\016\n\006rating\030\001 \003(\005\022\016\n\006luxury"
      "\030\002 \001(\005\022\020\n\010location\030\003 \001(\t\022\022\n\nlocationId\030\004"
      " \003(\005\022\020\n\010amenitie\030\005 \003(\005\022\017\n\007leisure\030\006 \003(\005\022"
      "\020\n\010business\030\007 \003(\005\022\027\n\017hotelPreference\030\010 \003"
      "(\005\022\r\n\005chain\030\t \003(\005\022\022\n\nattraction\030\n \001(\t\022\021\n"
      "\thotelName\030\013 \001(\t\022\021\n\tbuiltYear\030\014 \001(\005\022\026\n\016r"
      "enovationYear\030\r \001(\005\022\016\n\006floors\030\016 \001(\005\022\021\n\tn"
      "oOfRooms\030\017 \001(\005\022\022\n\nfireSafety\030\020 \001(\005\022\023\n\013la"
      "stUpdated\030\021 \001(\t\032\267\002\n\017RoomTypeFilters\022\r\n\005s"
      "uite\030\001 \001(\005\022\024\n\014roomAmenitie\030\002 \003(\005\022\016\n\006room"
      "Id\030\003 \003(\005\022\020\n\010roomName\030\004 \001(\t\022V\n\016roomCatego"
      "ries\030\005 \003(\0132>.protobuffer.dotwproto.PSFRe"
      "quest.RoomTypeFilters.RoomCategory\032\204\001\n\014R"
      "oomCategory\022\024\n\014MainCategory\030\001 \001(\005\022\023\n\013Sub"
      "Category\030\002 \001(\005\022\014\n\004View\030\003 \001(\005\022\023\n\013BeddingT"
      "ype\030\004 \001(\005\022\022\n\nAttribute1\030\005 \001(\005\022\022\n\nAttribu"
      "te2\030\006 \001(\005\032\023\n\021AdditionalFilters\032U\n\024Search"
      "PeriodCriteria\022\022\n\ntravelFrom\030\001 \001(\005\022\020\n\010tr"
      "avelTo\030\002 \001(\005\022\027\n\017bookingDateTime\030\003 \001(\005\"\325\003"
      "\n\010PSFReply\022:\n\007Results\030\001 \003(\0132).protobuffe"
      "r.dotwproto.PSFReply.RoomIndex\022\r\n\005error\030"
      "\002 \001(\t\022\021\n\terrorCode\030\003 \001(\t\022\023\n\013replystring\030"
      "\004 \001(\t\022\026\n\016replystringInt\030\005 \001(\005\032 \n\010RoomDat"
      "a\022\024\n\014roomTypeCode\030\001 \001(\005\032t\n\tHotelCode\022\031\n\021"
      "hotelCodeOriginal\030\001 \001(\005\022\020\n\010cityCode\030\002 \001("
      "\t\022:\n\010roomData\030\003 \003(\0132(.protobuffer.dotwpr"
      "oto.PSFReply.RoomData\032R\n\022BookingChannelC"
      "ode\022<\n\thotelCode\030\001 \003(\0132).protobuffer.dot"
      "wproto.PSFReply.HotelCode\032R\n\tRoomIndex\022E"
      "\n\troomIndex\030\001 \003(\01322.protobuffer.dotwprot"
      "o.PSFReply.BookingChannelCode\"\217\021\n\tHDRequ"
      "est\022\030\n\020hotelDataRequest\030\001 \001(\t\022;\n\010hotelId"
      "s\030\002 \003(\0132).protobuffer.dotwproto.HDReques"
      "t.HotelIds\022U\n\025returnHotelStaticData\030\003 \001("
      "\01326.protobuffer.dotwproto.HDRequest.Retu"
      "rnHotelStaticData\022[\n\030returnRoomTypeStati"
      "cData\030\004 \001(\01329.protobuffer.dotwproto.HDRe"
      "quest.ReturnRoomTypeStaticData\022G\n\016return"
      "RateData\030\005 \001(\0132/.protobuffer.dotwproto.H"
      "DRequest.ReturnRateData\022\022\n\nlanguageId\030\006 "
      "\001(\005\0322\n\010HotelIds\022\017\n\007hotelId\030\001 \001(\005\022\025\n\rroom"
      "TypeCodes\030\002 \003(\005\032\263\007\n\025ReturnHotelStaticDat"
      "a\022\024\n\014description1\030\001 \001(\010\022\024\n\014description2\030"
      "\002 \001(\010\022\020\n\010geoPoint\030\003 \001(\010\022\031\n\021ratingDescrip"
      "tion\030\004 \001(\010\022\016\n\006images\030\005 \001(\010\022\016\n\006direct\030\006 \001"
      "(\010\022\027\n\017hotelPreference\030\007 \001(\010\022\021\n\tbuiltYear"
      "\030\010 \001(\010\022\026\n\016renovationYear\030\t \001(\010\022\016\n\006floors"
      "\030\n \001(\010\022\021\n\tnoOfRooms\030\013 \001(\010\022\016\n\006luxury\030\014 \001("
      "\010\022\017\n\007address\030\r \001(\010\022\017\n\007zipCode\030\016 \001(\010\022\020\n\010l"
      "ocation\030\017 \001(\010\022\022\n\nlocationId\030\020 \001(\010\022\021\n\tloc"
      "ation1\030\021 \001(\010\022\021\n\tlocation2\030\022 \001(\010\022\021\n\tlocat"
      "ion3\030\023 \001(\010\022\021\n\tstateName\030\024 \001(\010\022\021\n\tstateCo"
      "de\030\025 \001(\010\022\023\n\013countryName\030\026 \001(\010\022\022\n\nregionN"
      "ame\030\027 \001(\010\022\022\n\nregionCode\030\030 \001(\010\022\020\n\010ameniti"
      "e\030\031 \001(\010\022\017\n\007leisure\030\032 \001(\010\022\020\n\010business\030\033 \001"
      "(\010\022\026\n\016transportation\030\034 \001(\010\022\022\n\nhotelPhone"
      "\030\035 \001(\010\022\024\n\014hotelCheckIn\030\036 \001(\010\022\025\n\rhotelChe"
      "ckOut\030\037 \001(\010\022\016\n\006minAge\030  \001(\010\022\016\n\006rating\030! "
      "\001(\010\022\022\n\nfireSafety\030\" \001(\010\022\r\n\005chain\030# \001(\010\022\023"
      "\n\013lastUpdated\030$ \001(\010\022\031\n\021transferMandatory"
      "\030% \001(\010\022\023\n\013tariffNotes\030& \001(\010\022\021\n\tchainName"
      "\030\' \001(\010\022\025\n\rhotelProperty\030( \001(\010\022\023\n\013fullAdd"
      "ress\030) \001(\010\022\021\n\texclusive\030* \001(\010\022\022\n\nattract"
      "ion\030+ \001(\010\022\020\n\010areaCode\030, \001(\010\022\020\n\010areaName\030"
      "- \001(\010\022\024\n\014geoLocations\030. \001(\010\022\020\n\010priority\030"
      "/ \001(\010\032\265\001\n\030ReturnRoomTypeStaticData\022\025\n\rro"
      "omAmenities\030\001 \001(\010\022\014\n\004name\030\002 \001(\010\022\030\n\020suppl"
      "ierRoomName\030\003 \001(\010\022\014\n\004twin\030\004 \001(\010\022\020\n\010roomI"
      "nfo\030\005 \001(\010\022\020\n\010specials\030\006 \001(\010\022\022\n\nroomImage"
      "s\030\007 \001(\010\022\024\n\014roomCategory\030\010 \001(\010\032\367\004\n\016Return"
      "RateData\022\021\n\toccupancy\030\001 \001(\010\022\016\n\006status\030\002 "
      "\001(\010\022\020\n\010rateType\030\003 \001(\010\022\023\n\013paymentMode\030\004 \001"
      "(\010\022\030\n\020allowsExtraMeals\030\005 \001(\010\022\035\n\025allowsSp"
      "ecialRequests\030\006 \001(\010\022\037\n\027allowsBeddingPref"
      "erence\030\007 \001(\010\022\026\n\016allowsSpecials\030\010 \001(\010\022(\n "
      "passengerNamesRequiredForBooking\030\t \001(\010\022\031"
      "\n\021allocationDetails\030\n \001(\010\022\017\n\007minStay\030\013 \001"
      "(\010\022\030\n\020dateApplyMinStay\030\014 \001(\010\022\031\n\021cancella"
      "tionRules\030\r \001(\010\022\"\n\032withinCancellationDea"
      "dline\030\016 \001(\010\022\023\n\013tariffNotes\030\017 \001(\010\022\022\n\nisBo"
      "okable\030\020 \001(\010\022\021\n\tonRequest\030\021 \001(\010\022\r\n\005total"
      "\030\022 \001(\010\022\r\n\005dates\030\023 \001(\010\022\020\n\010freeStay\030\024 \001(\010\022"
      "\020\n\010discount\030\025 \001(\010\022\024\n\014dayOnRequest\030\026 \001(\010\022"
      "\021\n\tincluding\030\027 \001(\010\022\027\n\017dailyLeftToSell\030\030 "
      "\001(\010\022\024\n\014dailyMinStay\030\031 \001(\010\022\022\n\nleftToSell\030"
      "\032 \001(\010\022\020\n\010specials\030\033 \001(\010\"\251\021\n\007HDReply\022K\n\023h"
      "otelStaticDataList\030\001 \003(\0132..protobuffer.d"
      "otwproto.HDReply.HotelStaticData\022\r\n\005erro"
      "r\030\002 \001(\t\022\021\n\terrorCode\030\003 \001(\t\022\023\n\013replystrin"
      "g\030\004 \001(\t\022\026\n\016replystringInt\030\005 \001(\005\032\201\020\n\017Hote"
      "lStaticData\022a\n\026roomTypeStaticDataList\030\001 "
      "\003(\0132A.protobuffer.dotwproto.HDReply.Hote"
      "lStaticData.RoomTypeStaticData\022\024\n\014descri"
      "ption1\030\002 \001(\t\022\024\n\014description2\030\003 \001(\t\022\020\n\010ge"
      "oPoint\030\004 \003(\t\022\031\n\021ratingDescription\030\005 \001(\t\022"
      "I\n\006images\030\006 \003(\01329.protobuffer.dotwproto."
      "HDReply.HotelStaticData.ImagesData\022\016\n\006di"
      "rect\030\007 \001(\010\022\027\n\017hotelPreference\030\010 \003(\005\022\021\n\tp"
      "referred\030\t \001(\010\022\021\n\tbuiltYear\030\n \001(\005\022\026\n\016ren"
      "ovationYear\030\013 \001(\005\022\016\n\006floors\030\014 \001(\005\022\021\n\tnoO"
      "fRooms\030\r \001(\005\022\016\n\006luxury\030\016 \001(\010\022\021\n\thotelNam"
      "e\030\017 \001(\t\022\017\n\007address\030\020 \001(\t\022\017\n\007zipCode\030\021 \001("
      "\t\022\020\n\010location\030\022 \001(\t\022\022\n\nlocationId\030\023 \001(\005\022"
      "\021\n\tlocation1\030\024 \001(\t\022\021\n\tlocation2\030\025 \001(\t\022\021\n"
      "\tlocation3\030\026 \001(\t\022\020\n\010cityName\030\027 \001(\t\022\020\n\010ci"
      "tyCode\030\030 \001(\005\022\021\n\tstateName\030\031 \001(\t\022\021\n\tstate"
      "Code\030\032 \001(\005\022\023\n\013countryName\030\033 \001(\t\022\023\n\013count"
      "ryCode\030\034 \001(\005\022\022\n\nregionName\030\035 \001(\t\022\022\n\nregi"
      "onCode\030\036 \001(\005\022\020\n\010amenitie\030\037 \003(\t\022\017\n\007leisur"
      "e\030  \003(\t\022\020\n\010business\030! \003(\t\022Y\n\016transportat"
      "ion\030\" \003(\0132A.protobuffer.dotwproto.HDRepl"
      "y.HotelStaticData.TransportationData\022\022\n\n"
      "hotelPhone\030# \001(\t\022\024\n\014hotelCheckIn\030$ \001(\005\022\025"
      "\n\rhotelCheckOut\030% \001(\005\022\016\n\006minAge\030& \001(\005\022\016\n"
      "\006rating\030\' \001(\005\022\022\n\nfireSafety\030( \001(\010\022\r\n\005cha"
      "in\030) \001(\005\022\023\n\013lastUpdated\030* \001(\t\022\031\n\021transfe"
      "rMandatory\030+ \001(\005\022\023\n\013tariffNotes\030, \001(\t\022\021\n"
      "\tchainName\030- \001(\t\022\025\n\rhotelProperty\030. \001(\005\022"
      "\023\n\013fullAddress\030/ \001(\t\022\022\n\nattraction\0300 \001(\t"
      "\022\021\n\texclusive\0301 \001(\010\032\204\005\n\022RoomTypeStaticDa"
      "ta\022\014\n\004twin\030\001 \001(\010\022\025\n\rroomAmenities\030\002 \003(\t\022"
      "\014\n\004name\030\003 \001(\t\022l\n\020supplierRoomName\030\004 \003(\0132"
      "R.protobuffer.dotwproto.HDReply.HotelSta"
      "ticData.RoomTypeStaticData.SupplierRoomN"
      "ame\022\\\n\010roomInfo\030\005 \003(\0132J.protobuffer.dotw"
      "proto.HDReply.HotelStaticData.RoomTypeSt"
      "aticData.RoomInfo\022d\n\014roomCategory\030\006 \001(\0132"
      "N.protobuffer.dotwproto.HDReply.HotelSta"
      "ticData.RoomTypeStaticData.RoomCategory\032"
      "$\n\020SupplierRoomName\022\020\n\010roomName\030\001 \003(\005\032\266\001"
      "\n\010RoomInfo\022\024\n\014maxOccupancy\030\001 \001(\005\022\034\n\024maxA"
      "dultWithChildren\030\002 \001(\005\022\023\n\013minChildAge\030\003 "
      "\001(\005\022\023\n\013maxChildAge\030\004 \001(\005\022\020\n\010maxAdult\030\005 \001"
      "(\005\022\023\n\013maxExtraBed\030\006 \001(\010\022\023\n\013maxChildren\030\007"
      " \001(\005\022\020\n\010children\030\010 \001(\005\032*\n\014RoomCategory\022\014"
      "\n\004code\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\032[\n\nImagesData"
      "\022\r\n\005thumb\030\001 \001(\t\022\013\n\003alt\030\002 \001(\t\022\020\n\010category"
      "\030\003 \001(\t\022\013\n\003url\030\004 \001(\t\022\022\n\nroomTypeId\030\005 \001(\005\032"
      "z\n\022TransportationData\022\014\n\004type\030\001 \001(\t\022\014\n\004n"
      "ame\030\002 \001(\t\022\014\n\004dist\030\003 \001(\t\022\024\n\014distanceUnit\030"
      "\004 \001(\t\022\020\n\010distTime\030\005 \001(\t\022\022\n\ndirections\030\006 "
      "\001(\t2\275\001\n\nServerDotw\022W\n\017psfilterRequest\022!."
      "protobuffer.dotwproto.PSFRequest\032\037.proto"
      "buffer.dotwproto.PSFReply\"\000\022V\n\020hotelData"
      "Request\022 .protobuffer.dotwproto.HDReques"
      "t\032\036.protobuffer.dotwproto.HDReply\"\000b\006pro"
      "to3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 6723);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "genProto/Dotw_ProtoBuf.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_genProto_2fDotw_5fProtoBuf_2eproto
namespace protobuffer {
namespace dotwproto {

// ===================================================================

void PSFRequest_RoomOccupancy::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PSFRequest_RoomOccupancy::kAdultsFieldNumber;
const int PSFRequest_RoomOccupancy::kChildrenFieldNumber;
const int PSFRequest_RoomOccupancy::kTwinFieldNumber;
const int PSFRequest_RoomOccupancy::kExtraBedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PSFRequest_RoomOccupancy::PSFRequest_RoomOccupancy()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::InitDefaultsPSFRequest_RoomOccupancy();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuffer.dotwproto.PSFRequest.RoomOccupancy)
}
PSFRequest_RoomOccupancy::PSFRequest_RoomOccupancy(const PSFRequest_RoomOccupancy& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      children_(from.children_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&adults_, &from.adults_,
    static_cast<size_t>(reinterpret_cast<char*>(&extrabed_) -
    reinterpret_cast<char*>(&adults_)) + sizeof(extrabed_));
  // @@protoc_insertion_point(copy_constructor:protobuffer.dotwproto.PSFRequest.RoomOccupancy)
}

void PSFRequest_RoomOccupancy::SharedCtor() {
  ::memset(&adults_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&extrabed_) -
      reinterpret_cast<char*>(&adults_)) + sizeof(extrabed_));
  _cached_size_ = 0;
}

PSFRequest_RoomOccupancy::~PSFRequest_RoomOccupancy() {
  // @@protoc_insertion_point(destructor:protobuffer.dotwproto.PSFRequest.RoomOccupancy)
  SharedDtor();
}

void PSFRequest_RoomOccupancy::SharedDtor() {
}

void PSFRequest_RoomOccupancy::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PSFRequest_RoomOccupancy::descriptor() {
  ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PSFRequest_RoomOccupancy& PSFRequest_RoomOccupancy::default_instance() {
  ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::InitDefaultsPSFRequest_RoomOccupancy();
  return *internal_default_instance();
}

PSFRequest_RoomOccupancy* PSFRequest_RoomOccupancy::New(::google::protobuf::Arena* arena) const {
  PSFRequest_RoomOccupancy* n = new PSFRequest_RoomOccupancy;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PSFRequest_RoomOccupancy::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuffer.dotwproto.PSFRequest.RoomOccupancy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  children_.Clear();
  ::memset(&adults_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&extrabed_) -
      reinterpret_cast<char*>(&adults_)) + sizeof(extrabed_));
  _internal_metadata_.Clear();
}

bool PSFRequest_RoomOccupancy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuffer.dotwproto.PSFRequest.RoomOccupancy)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 adults = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &adults_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 children = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_children())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 18u, input, this->mutable_children())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool twin = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &twin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool extraBed = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &extrabed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuffer.dotwproto.PSFRequest.RoomOccupancy)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuffer.dotwproto.PSFRequest.RoomOccupancy)
  return false;
#undef DO_
}

void PSFRequest_RoomOccupancy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuffer.dotwproto.PSFRequest.RoomOccupancy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 adults = 1;
  if (this->adults() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->adults(), output);
  }

  // repeated int32 children = 2;
  if (this->children_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _children_cached_byte_size_));
  }
  for (int i = 0, n = this->children_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->children(i), output);
  }

  // bool twin = 3;
  if (this->twin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->twin(), output);
  }

  // bool extraBed = 4;
  if (this->extrabed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->extrabed(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuffer.dotwproto.PSFRequest.RoomOccupancy)
}

::google::protobuf::uint8* PSFRequest_RoomOccupancy::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuffer.dotwproto.PSFRequest.RoomOccupancy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 adults = 1;
  if (this->adults() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->adults(), target);
  }

  // repeated int32 children = 2;
  if (this->children_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _children_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->children_, target);
  }

  // bool twin = 3;
  if (this->twin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->twin(), target);
  }

  // bool extraBed = 4;
  if (this->extrabed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->extrabed(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuffer.dotwproto.PSFRequest.RoomOccupancy)
  return target;
}

size_t PSFRequest_RoomOccupancy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuffer.dotwproto.PSFRequest.RoomOccupancy)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 children = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->children_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _children_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // int32 adults = 1;
  if (this->adults() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->adults());
  }

  // bool twin = 3;
  if (this->twin() != 0) {
    total_size += 1 + 1;
  }

  // bool extraBed = 4;
  if (this->extrabed() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PSFRequest_RoomOccupancy::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuffer.dotwproto.PSFRequest.RoomOccupancy)
  GOOGLE_DCHECK_NE(&from, this);
  const PSFRequest_RoomOccupancy* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PSFRequest_RoomOccupancy>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuffer.dotwproto.PSFRequest.RoomOccupancy)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuffer.dotwproto.PSFRequest.RoomOccupancy)
    MergeFrom(*source);
  }
}

void PSFRequest_RoomOccupancy::MergeFrom(const PSFRequest_RoomOccupancy& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuffer.dotwproto.PSFRequest.RoomOccupancy)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  children_.MergeFrom(from.children_);
  if (from.adults() != 0) {
    set_adults(from.adults());
  }
  if (from.twin() != 0) {
    set_twin(from.twin());
  }
  if (from.extrabed() != 0) {
    set_extrabed(from.extrabed());
  }
}

void PSFRequest_RoomOccupancy::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuffer.dotwproto.PSFRequest.RoomOccupancy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PSFRequest_RoomOccupancy::CopyFrom(const PSFRequest_RoomOccupancy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuffer.dotwproto.PSFRequest.RoomOccupancy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PSFRequest_RoomOccupancy::IsInitialized() const {
  return true;
}

void PSFRequest_RoomOccupancy::Swap(PSFRequest_RoomOccupancy* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PSFRequest_RoomOccupancy::InternalSwap(PSFRequest_RoomOccupancy* other) {
  using std::swap;
  children_.InternalSwap(&other->children_);
  swap(adults_, other->adults_);
  swap(twin_, other->twin_);
  swap(extrabed_, other->extrabed_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PSFRequest_RoomOccupancy::GetMetadata() const {
  protobuf_genProto_2fDotw_5fProtoBuf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PSFRequest_HotelFilters::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PSFRequest_HotelFilters::kRatingFieldNumber;
const int PSFRequest_HotelFilters::kLuxuryFieldNumber;
const int PSFRequest_HotelFilters::kLocationFieldNumber;
const int PSFRequest_HotelFilters::kLocationIdFieldNumber;
const int PSFRequest_HotelFilters::kAmenitieFieldNumber;
const int PSFRequest_HotelFilters::kLeisureFieldNumber;
const int PSFRequest_HotelFilters::kBusinessFieldNumber;
const int PSFRequest_HotelFilters::kHotelPreferenceFieldNumber;
const int PSFRequest_HotelFilters::kChainFieldNumber;
const int PSFRequest_HotelFilters::kAttractionFieldNumber;
const int PSFRequest_HotelFilters::kHotelNameFieldNumber;
const int PSFRequest_HotelFilters::kBuiltYearFieldNumber;
const int PSFRequest_HotelFilters::kRenovationYearFieldNumber;
const int PSFRequest_HotelFilters::kFloorsFieldNumber;
const int PSFRequest_HotelFilters::kNoOfRoomsFieldNumber;
const int PSFRequest_HotelFilters::kFireSafetyFieldNumber;
const int PSFRequest_HotelFilters::kLastUpdatedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PSFRequest_HotelFilters::PSFRequest_HotelFilters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::InitDefaultsPSFRequest_HotelFilters();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuffer.dotwproto.PSFRequest.HotelFilters)
}
PSFRequest_HotelFilters::PSFRequest_HotelFilters(const PSFRequest_HotelFilters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      rating_(from.rating_),
      locationid_(from.locationid_),
      amenitie_(from.amenitie_),
      leisure_(from.leisure_),
      business_(from.business_),
      hotelpreference_(from.hotelpreference_),
      chain_(from.chain_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  location_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.location().size() > 0) {
    location_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_);
  }
  attraction_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.attraction().size() > 0) {
    attraction_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attraction_);
  }
  hotelname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hotelname().size() > 0) {
    hotelname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hotelname_);
  }
  lastupdated_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.lastupdated().size() > 0) {
    lastupdated_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lastupdated_);
  }
  ::memcpy(&luxury_, &from.luxury_,
    static_cast<size_t>(reinterpret_cast<char*>(&firesafety_) -
    reinterpret_cast<char*>(&luxury_)) + sizeof(firesafety_));
  // @@protoc_insertion_point(copy_constructor:protobuffer.dotwproto.PSFRequest.HotelFilters)
}

void PSFRequest_HotelFilters::SharedCtor() {
  location_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attraction_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hotelname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lastupdated_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&luxury_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&firesafety_) -
      reinterpret_cast<char*>(&luxury_)) + sizeof(firesafety_));
  _cached_size_ = 0;
}

PSFRequest_HotelFilters::~PSFRequest_HotelFilters() {
  // @@protoc_insertion_point(destructor:protobuffer.dotwproto.PSFRequest.HotelFilters)
  SharedDtor();
}

void PSFRequest_HotelFilters::SharedDtor() {
  location_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attraction_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hotelname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lastupdated_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PSFRequest_HotelFilters::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PSFRequest_HotelFilters::descriptor() {
  ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PSFRequest_HotelFilters& PSFRequest_HotelFilters::default_instance() {
  ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::InitDefaultsPSFRequest_HotelFilters();
  return *internal_default_instance();
}

PSFRequest_HotelFilters* PSFRequest_HotelFilters::New(::google::protobuf::Arena* arena) const {
  PSFRequest_HotelFilters* n = new PSFRequest_HotelFilters;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PSFRequest_HotelFilters::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuffer.dotwproto.PSFRequest.HotelFilters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rating_.Clear();
  locationid_.Clear();
  amenitie_.Clear();
  leisure_.Clear();
  business_.Clear();
  hotelpreference_.Clear();
  chain_.Clear();
  location_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attraction_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hotelname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lastupdated_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&luxury_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&firesafety_) -
      reinterpret_cast<char*>(&luxury_)) + sizeof(firesafety_));
  _internal_metadata_.Clear();
}

bool PSFRequest_HotelFilters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuffer.dotwproto.PSFRequest.HotelFilters)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 rating = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_rating())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10u, input, this->mutable_rating())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 luxury = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &luxury_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string location = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_location()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->location().data(), static_cast<int>(this->location().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuffer.dotwproto.PSFRequest.HotelFilters.location"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 locationId = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_locationid())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 34u, input, this->mutable_locationid())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 amenitie = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_amenitie())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 42u, input, this->mutable_amenitie())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 leisure = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_leisure())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 50u, input, this->mutable_leisure())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 business = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_business())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 58u, input, this->mutable_business())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 hotelPreference = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_hotelpreference())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 66u, input, this->mutable_hotelpreference())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 chain = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_chain())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 74u, input, this->mutable_chain())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string attraction = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_attraction()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->attraction().data(), static_cast<int>(this->attraction().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuffer.dotwproto.PSFRequest.HotelFilters.attraction"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string hotelName = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hotelname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->hotelname().data(), static_cast<int>(this->hotelname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuffer.dotwproto.PSFRequest.HotelFilters.hotelName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 builtYear = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &builtyear_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 renovationYear = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &renovationyear_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 floors = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &floors_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 noOfRooms = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &noofrooms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 fireSafety = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &firesafety_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string lastUpdated = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lastupdated()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->lastupdated().data(), static_cast<int>(this->lastupdated().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuffer.dotwproto.PSFRequest.HotelFilters.lastUpdated"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuffer.dotwproto.PSFRequest.HotelFilters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuffer.dotwproto.PSFRequest.HotelFilters)
  return false;
#undef DO_
}

void PSFRequest_HotelFilters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuffer.dotwproto.PSFRequest.HotelFilters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 rating = 1;
  if (this->rating_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _rating_cached_byte_size_));
  }
  for (int i = 0, n = this->rating_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->rating(i), output);
  }

  // int32 luxury = 2;
  if (this->luxury() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->luxury(), output);
  }

  // string location = 3;
  if (this->location().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location().data(), static_cast<int>(this->location().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.PSFRequest.HotelFilters.location");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->location(), output);
  }

  // repeated int32 locationId = 4;
  if (this->locationid_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _locationid_cached_byte_size_));
  }
  for (int i = 0, n = this->locationid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->locationid(i), output);
  }

  // repeated int32 amenitie = 5;
  if (this->amenitie_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _amenitie_cached_byte_size_));
  }
  for (int i = 0, n = this->amenitie_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->amenitie(i), output);
  }

  // repeated int32 leisure = 6;
  if (this->leisure_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _leisure_cached_byte_size_));
  }
  for (int i = 0, n = this->leisure_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->leisure(i), output);
  }

  // repeated int32 business = 7;
  if (this->business_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _business_cached_byte_size_));
  }
  for (int i = 0, n = this->business_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->business(i), output);
  }

  // repeated int32 hotelPreference = 8;
  if (this->hotelpreference_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _hotelpreference_cached_byte_size_));
  }
  for (int i = 0, n = this->hotelpreference_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->hotelpreference(i), output);
  }

  // repeated int32 chain = 9;
  if (this->chain_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(9, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _chain_cached_byte_size_));
  }
  for (int i = 0, n = this->chain_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->chain(i), output);
  }

  // string attraction = 10;
  if (this->attraction().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->attraction().data(), static_cast<int>(this->attraction().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.PSFRequest.HotelFilters.attraction");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->attraction(), output);
  }

  // string hotelName = 11;
  if (this->hotelname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hotelname().data(), static_cast<int>(this->hotelname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.PSFRequest.HotelFilters.hotelName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->hotelname(), output);
  }

  // int32 builtYear = 12;
  if (this->builtyear() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->builtyear(), output);
  }

  // int32 renovationYear = 13;
  if (this->renovationyear() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->renovationyear(), output);
  }

  // int32 floors = 14;
  if (this->floors() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->floors(), output);
  }

  // int32 noOfRooms = 15;
  if (this->noofrooms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->noofrooms(), output);
  }

  // int32 fireSafety = 16;
  if (this->firesafety() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->firesafety(), output);
  }

  // string lastUpdated = 17;
  if (this->lastupdated().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->lastupdated().data(), static_cast<int>(this->lastupdated().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.PSFRequest.HotelFilters.lastUpdated");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->lastupdated(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuffer.dotwproto.PSFRequest.HotelFilters)
}

::google::protobuf::uint8* PSFRequest_HotelFilters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuffer.dotwproto.PSFRequest.HotelFilters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 rating = 1;
  if (this->rating_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _rating_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->rating_, target);
  }

  // int32 luxury = 2;
  if (this->luxury() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->luxury(), target);
  }

  // string location = 3;
  if (this->location().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location().data(), static_cast<int>(this->location().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.PSFRequest.HotelFilters.location");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->location(), target);
  }

  // repeated int32 locationId = 4;
  if (this->locationid_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _locationid_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->locationid_, target);
  }

  // repeated int32 amenitie = 5;
  if (this->amenitie_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _amenitie_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->amenitie_, target);
  }

  // repeated int32 leisure = 6;
  if (this->leisure_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _leisure_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->leisure_, target);
  }

  // repeated int32 business = 7;
  if (this->business_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _business_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->business_, target);
  }

  // repeated int32 hotelPreference = 8;
  if (this->hotelpreference_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _hotelpreference_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->hotelpreference_, target);
  }

  // repeated int32 chain = 9;
  if (this->chain_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      9,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _chain_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->chain_, target);
  }

  // string attraction = 10;
  if (this->attraction().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->attraction().data(), static_cast<int>(this->attraction().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.PSFRequest.HotelFilters.attraction");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->attraction(), target);
  }

  // string hotelName = 11;
  if (this->hotelname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hotelname().data(), static_cast<int>(this->hotelname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.PSFRequest.HotelFilters.hotelName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->hotelname(), target);
  }

  // int32 builtYear = 12;
  if (this->builtyear() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->builtyear(), target);
  }

  // int32 renovationYear = 13;
  if (this->renovationyear() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->renovationyear(), target);
  }

  // int32 floors = 14;
  if (this->floors() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->floors(), target);
  }

  // int32 noOfRooms = 15;
  if (this->noofrooms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->noofrooms(), target);
  }

  // int32 fireSafety = 16;
  if (this->firesafety() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->firesafety(), target);
  }

  // string lastUpdated = 17;
  if (this->lastupdated().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->lastupdated().data(), static_cast<int>(this->lastupdated().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.PSFRequest.HotelFilters.lastUpdated");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->lastupdated(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuffer.dotwproto.PSFRequest.HotelFilters)
  return target;
}

size_t PSFRequest_HotelFilters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuffer.dotwproto.PSFRequest.HotelFilters)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 rating = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->rating_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _rating_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 locationId = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->locationid_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _locationid_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 amenitie = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->amenitie_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _amenitie_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 leisure = 6;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->leisure_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _leisure_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 business = 7;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->business_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _business_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 hotelPreference = 8;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->hotelpreference_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _hotelpreference_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 chain = 9;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->chain_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _chain_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string location = 3;
  if (this->location().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->location());
  }

  // string attraction = 10;
  if (this->attraction().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->attraction());
  }

  // string hotelName = 11;
  if (this->hotelname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hotelname());
  }

  // string lastUpdated = 17;
  if (this->lastupdated().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->lastupdated());
  }

  // int32 luxury = 2;
  if (this->luxury() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->luxury());
  }

  // int32 builtYear = 12;
  if (this->builtyear() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->builtyear());
  }

  // int32 renovationYear = 13;
  if (this->renovationyear() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->renovationyear());
  }

  // int32 floors = 14;
  if (this->floors() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->floors());
  }

  // int32 noOfRooms = 15;
  if (this->noofrooms() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->noofrooms());
  }

  // int32 fireSafety = 16;
  if (this->firesafety() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->firesafety());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PSFRequest_HotelFilters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuffer.dotwproto.PSFRequest.HotelFilters)
  GOOGLE_DCHECK_NE(&from, this);
  const PSFRequest_HotelFilters* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PSFRequest_HotelFilters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuffer.dotwproto.PSFRequest.HotelFilters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuffer.dotwproto.PSFRequest.HotelFilters)
    MergeFrom(*source);
  }
}

void PSFRequest_HotelFilters::MergeFrom(const PSFRequest_HotelFilters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuffer.dotwproto.PSFRequest.HotelFilters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rating_.MergeFrom(from.rating_);
  locationid_.MergeFrom(from.locationid_);
  amenitie_.MergeFrom(from.amenitie_);
  leisure_.MergeFrom(from.leisure_);
  business_.MergeFrom(from.business_);
  hotelpreference_.MergeFrom(from.hotelpreference_);
  chain_.MergeFrom(from.chain_);
  if (from.location().size() > 0) {

    location_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_);
  }
  if (from.attraction().size() > 0) {

    attraction_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attraction_);
  }
  if (from.hotelname().size() > 0) {

    hotelname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hotelname_);
  }
  if (from.lastupdated().size() > 0) {

    lastupdated_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lastupdated_);
  }
  if (from.luxury() != 0) {
    set_luxury(from.luxury());
  }
  if (from.builtyear() != 0) {
    set_builtyear(from.builtyear());
  }
  if (from.renovationyear() != 0) {
    set_renovationyear(from.renovationyear());
  }
  if (from.floors() != 0) {
    set_floors(from.floors());
  }
  if (from.noofrooms() != 0) {
    set_noofrooms(from.noofrooms());
  }
  if (from.firesafety() != 0) {
    set_firesafety(from.firesafety());
  }
}

void PSFRequest_HotelFilters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuffer.dotwproto.PSFRequest.HotelFilters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PSFRequest_HotelFilters::CopyFrom(const PSFRequest_HotelFilters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuffer.dotwproto.PSFRequest.HotelFilters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PSFRequest_HotelFilters::IsInitialized() const {
  return true;
}

void PSFRequest_HotelFilters::Swap(PSFRequest_HotelFilters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PSFRequest_HotelFilters::InternalSwap(PSFRequest_HotelFilters* other) {
  using std::swap;
  rating_.InternalSwap(&other->rating_);
  locationid_.InternalSwap(&other->locationid_);
  amenitie_.InternalSwap(&other->amenitie_);
  leisure_.InternalSwap(&other->leisure_);
  business_.InternalSwap(&other->business_);
  hotelpreference_.InternalSwap(&other->hotelpreference_);
  chain_.InternalSwap(&other->chain_);
  location_.Swap(&other->location_);
  attraction_.Swap(&other->attraction_);
  hotelname_.Swap(&other->hotelname_);
  lastupdated_.Swap(&other->lastupdated_);
  swap(luxury_, other->luxury_);
  swap(builtyear_, other->builtyear_);
  swap(renovationyear_, other->renovationyear_);
  swap(floors_, other->floors_);
  swap(noofrooms_, other->noofrooms_);
  swap(firesafety_, other->firesafety_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PSFRequest_HotelFilters::GetMetadata() const {
  protobuf_genProto_2fDotw_5fProtoBuf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PSFRequest_RoomTypeFilters_RoomCategory::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PSFRequest_RoomTypeFilters_RoomCategory::kMainCategoryFieldNumber;
const int PSFRequest_RoomTypeFilters_RoomCategory::kSubCategoryFieldNumber;
const int PSFRequest_RoomTypeFilters_RoomCategory::kViewFieldNumber;
const int PSFRequest_RoomTypeFilters_RoomCategory::kBeddingTypeFieldNumber;
const int PSFRequest_RoomTypeFilters_RoomCategory::kAttribute1FieldNumber;
const int PSFRequest_RoomTypeFilters_RoomCategory::kAttribute2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PSFRequest_RoomTypeFilters_RoomCategory::PSFRequest_RoomTypeFilters_RoomCategory()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::InitDefaultsPSFRequest_RoomTypeFilters_RoomCategory();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuffer.dotwproto.PSFRequest.RoomTypeFilters.RoomCategory)
}
PSFRequest_RoomTypeFilters_RoomCategory::PSFRequest_RoomTypeFilters_RoomCategory(const PSFRequest_RoomTypeFilters_RoomCategory& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&maincategory_, &from.maincategory_,
    static_cast<size_t>(reinterpret_cast<char*>(&attribute2_) -
    reinterpret_cast<char*>(&maincategory_)) + sizeof(attribute2_));
  // @@protoc_insertion_point(copy_constructor:protobuffer.dotwproto.PSFRequest.RoomTypeFilters.RoomCategory)
}

void PSFRequest_RoomTypeFilters_RoomCategory::SharedCtor() {
  ::memset(&maincategory_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&attribute2_) -
      reinterpret_cast<char*>(&maincategory_)) + sizeof(attribute2_));
  _cached_size_ = 0;
}

PSFRequest_RoomTypeFilters_RoomCategory::~PSFRequest_RoomTypeFilters_RoomCategory() {
  // @@protoc_insertion_point(destructor:protobuffer.dotwproto.PSFRequest.RoomTypeFilters.RoomCategory)
  SharedDtor();
}

void PSFRequest_RoomTypeFilters_RoomCategory::SharedDtor() {
}

void PSFRequest_RoomTypeFilters_RoomCategory::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PSFRequest_RoomTypeFilters_RoomCategory::descriptor() {
  ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PSFRequest_RoomTypeFilters_RoomCategory& PSFRequest_RoomTypeFilters_RoomCategory::default_instance() {
  ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::InitDefaultsPSFRequest_RoomTypeFilters_RoomCategory();
  return *internal_default_instance();
}

PSFRequest_RoomTypeFilters_RoomCategory* PSFRequest_RoomTypeFilters_RoomCategory::New(::google::protobuf::Arena* arena) const {
  PSFRequest_RoomTypeFilters_RoomCategory* n = new PSFRequest_RoomTypeFilters_RoomCategory;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PSFRequest_RoomTypeFilters_RoomCategory::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuffer.dotwproto.PSFRequest.RoomTypeFilters.RoomCategory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&maincategory_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&attribute2_) -
      reinterpret_cast<char*>(&maincategory_)) + sizeof(attribute2_));
  _internal_metadata_.Clear();
}

bool PSFRequest_RoomTypeFilters_RoomCategory::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuffer.dotwproto.PSFRequest.RoomTypeFilters.RoomCategory)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 MainCategory = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maincategory_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 SubCategory = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &subcategory_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 View = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &view_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 BeddingType = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &beddingtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Attribute1 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &attribute1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Attribute2 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &attribute2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuffer.dotwproto.PSFRequest.RoomTypeFilters.RoomCategory)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuffer.dotwproto.PSFRequest.RoomTypeFilters.RoomCategory)
  return false;
#undef DO_
}

void PSFRequest_RoomTypeFilters_RoomCategory::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuffer.dotwproto.PSFRequest.RoomTypeFilters.RoomCategory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 MainCategory = 1;
  if (this->maincategory() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->maincategory(), output);
  }

  // int32 SubCategory = 2;
  if (this->subcategory() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->subcategory(), output);
  }

  // int32 View = 3;
  if (this->view() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->view(), output);
  }

  // int32 BeddingType = 4;
  if (this->beddingtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->beddingtype(), output);
  }

  // int32 Attribute1 = 5;
  if (this->attribute1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->attribute1(), output);
  }

  // int32 Attribute2 = 6;
  if (this->attribute2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->attribute2(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuffer.dotwproto.PSFRequest.RoomTypeFilters.RoomCategory)
}

::google::protobuf::uint8* PSFRequest_RoomTypeFilters_RoomCategory::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuffer.dotwproto.PSFRequest.RoomTypeFilters.RoomCategory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 MainCategory = 1;
  if (this->maincategory() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->maincategory(), target);
  }

  // int32 SubCategory = 2;
  if (this->subcategory() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->subcategory(), target);
  }

  // int32 View = 3;
  if (this->view() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->view(), target);
  }

  // int32 BeddingType = 4;
  if (this->beddingtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->beddingtype(), target);
  }

  // int32 Attribute1 = 5;
  if (this->attribute1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->attribute1(), target);
  }

  // int32 Attribute2 = 6;
  if (this->attribute2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->attribute2(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuffer.dotwproto.PSFRequest.RoomTypeFilters.RoomCategory)
  return target;
}

size_t PSFRequest_RoomTypeFilters_RoomCategory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuffer.dotwproto.PSFRequest.RoomTypeFilters.RoomCategory)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 MainCategory = 1;
  if (this->maincategory() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->maincategory());
  }

  // int32 SubCategory = 2;
  if (this->subcategory() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->subcategory());
  }

  // int32 View = 3;
  if (this->view() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->view());
  }

  // int32 BeddingType = 4;
  if (this->beddingtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->beddingtype());
  }

  // int32 Attribute1 = 5;
  if (this->attribute1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->attribute1());
  }

  // int32 Attribute2 = 6;
  if (this->attribute2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->attribute2());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PSFRequest_RoomTypeFilters_RoomCategory::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuffer.dotwproto.PSFRequest.RoomTypeFilters.RoomCategory)
  GOOGLE_DCHECK_NE(&from, this);
  const PSFRequest_RoomTypeFilters_RoomCategory* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PSFRequest_RoomTypeFilters_RoomCategory>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuffer.dotwproto.PSFRequest.RoomTypeFilters.RoomCategory)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuffer.dotwproto.PSFRequest.RoomTypeFilters.RoomCategory)
    MergeFrom(*source);
  }
}

void PSFRequest_RoomTypeFilters_RoomCategory::MergeFrom(const PSFRequest_RoomTypeFilters_RoomCategory& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuffer.dotwproto.PSFRequest.RoomTypeFilters.RoomCategory)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.maincategory() != 0) {
    set_maincategory(from.maincategory());
  }
  if (from.subcategory() != 0) {
    set_subcategory(from.subcategory());
  }
  if (from.view() != 0) {
    set_view(from.view());
  }
  if (from.beddingtype() != 0) {
    set_beddingtype(from.beddingtype());
  }
  if (from.attribute1() != 0) {
    set_attribute1(from.attribute1());
  }
  if (from.attribute2() != 0) {
    set_attribute2(from.attribute2());
  }
}

void PSFRequest_RoomTypeFilters_RoomCategory::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuffer.dotwproto.PSFRequest.RoomTypeFilters.RoomCategory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PSFRequest_RoomTypeFilters_RoomCategory::CopyFrom(const PSFRequest_RoomTypeFilters_RoomCategory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuffer.dotwproto.PSFRequest.RoomTypeFilters.RoomCategory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PSFRequest_RoomTypeFilters_RoomCategory::IsInitialized() const {
  return true;
}

void PSFRequest_RoomTypeFilters_RoomCategory::Swap(PSFRequest_RoomTypeFilters_RoomCategory* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PSFRequest_RoomTypeFilters_RoomCategory::InternalSwap(PSFRequest_RoomTypeFilters_RoomCategory* other) {
  using std::swap;
  swap(maincategory_, other->maincategory_);
  swap(subcategory_, other->subcategory_);
  swap(view_, other->view_);
  swap(beddingtype_, other->beddingtype_);
  swap(attribute1_, other->attribute1_);
  swap(attribute2_, other->attribute2_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PSFRequest_RoomTypeFilters_RoomCategory::GetMetadata() const {
  protobuf_genProto_2fDotw_5fProtoBuf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PSFRequest_RoomTypeFilters::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PSFRequest_RoomTypeFilters::kSuiteFieldNumber;
const int PSFRequest_RoomTypeFilters::kRoomAmenitieFieldNumber;
const int PSFRequest_RoomTypeFilters::kRoomIdFieldNumber;
const int PSFRequest_RoomTypeFilters::kRoomNameFieldNumber;
const int PSFRequest_RoomTypeFilters::kRoomCategoriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PSFRequest_RoomTypeFilters::PSFRequest_RoomTypeFilters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::InitDefaultsPSFRequest_RoomTypeFilters();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuffer.dotwproto.PSFRequest.RoomTypeFilters)
}
PSFRequest_RoomTypeFilters::PSFRequest_RoomTypeFilters(const PSFRequest_RoomTypeFilters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      roomamenitie_(from.roomamenitie_),
      roomid_(from.roomid_),
      roomcategories_(from.roomcategories_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  roomname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.roomname().size() > 0) {
    roomname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roomname_);
  }
  suite_ = from.suite_;
  // @@protoc_insertion_point(copy_constructor:protobuffer.dotwproto.PSFRequest.RoomTypeFilters)
}

void PSFRequest_RoomTypeFilters::SharedCtor() {
  roomname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  suite_ = 0;
  _cached_size_ = 0;
}

PSFRequest_RoomTypeFilters::~PSFRequest_RoomTypeFilters() {
  // @@protoc_insertion_point(destructor:protobuffer.dotwproto.PSFRequest.RoomTypeFilters)
  SharedDtor();
}

void PSFRequest_RoomTypeFilters::SharedDtor() {
  roomname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PSFRequest_RoomTypeFilters::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PSFRequest_RoomTypeFilters::descriptor() {
  ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PSFRequest_RoomTypeFilters& PSFRequest_RoomTypeFilters::default_instance() {
  ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::InitDefaultsPSFRequest_RoomTypeFilters();
  return *internal_default_instance();
}

PSFRequest_RoomTypeFilters* PSFRequest_RoomTypeFilters::New(::google::protobuf::Arena* arena) const {
  PSFRequest_RoomTypeFilters* n = new PSFRequest_RoomTypeFilters;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PSFRequest_RoomTypeFilters::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuffer.dotwproto.PSFRequest.RoomTypeFilters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roomamenitie_.Clear();
  roomid_.Clear();
  roomcategories_.Clear();
  roomname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  suite_ = 0;
  _internal_metadata_.Clear();
}

bool PSFRequest_RoomTypeFilters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuffer.dotwproto.PSFRequest.RoomTypeFilters)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 suite = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &suite_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 roomAmenitie = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_roomamenitie())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 18u, input, this->mutable_roomamenitie())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 roomId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_roomid())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 26u, input, this->mutable_roomid())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string roomName = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_roomname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->roomname().data(), static_cast<int>(this->roomname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuffer.dotwproto.PSFRequest.RoomTypeFilters.roomName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .protobuffer.dotwproto.PSFRequest.RoomTypeFilters.RoomCategory roomCategories = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_roomcategories()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuffer.dotwproto.PSFRequest.RoomTypeFilters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuffer.dotwproto.PSFRequest.RoomTypeFilters)
  return false;
#undef DO_
}

void PSFRequest_RoomTypeFilters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuffer.dotwproto.PSFRequest.RoomTypeFilters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 suite = 1;
  if (this->suite() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->suite(), output);
  }

  // repeated int32 roomAmenitie = 2;
  if (this->roomamenitie_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _roomamenitie_cached_byte_size_));
  }
  for (int i = 0, n = this->roomamenitie_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->roomamenitie(i), output);
  }

  // repeated int32 roomId = 3;
  if (this->roomid_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _roomid_cached_byte_size_));
  }
  for (int i = 0, n = this->roomid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->roomid(i), output);
  }

  // string roomName = 4;
  if (this->roomname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->roomname().data(), static_cast<int>(this->roomname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.PSFRequest.RoomTypeFilters.roomName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->roomname(), output);
  }

  // repeated .protobuffer.dotwproto.PSFRequest.RoomTypeFilters.RoomCategory roomCategories = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->roomcategories_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->roomcategories(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuffer.dotwproto.PSFRequest.RoomTypeFilters)
}

::google::protobuf::uint8* PSFRequest_RoomTypeFilters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuffer.dotwproto.PSFRequest.RoomTypeFilters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 suite = 1;
  if (this->suite() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->suite(), target);
  }

  // repeated int32 roomAmenitie = 2;
  if (this->roomamenitie_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _roomamenitie_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->roomamenitie_, target);
  }

  // repeated int32 roomId = 3;
  if (this->roomid_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _roomid_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->roomid_, target);
  }

  // string roomName = 4;
  if (this->roomname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->roomname().data(), static_cast<int>(this->roomname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.PSFRequest.RoomTypeFilters.roomName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->roomname(), target);
  }

  // repeated .protobuffer.dotwproto.PSFRequest.RoomTypeFilters.RoomCategory roomCategories = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->roomcategories_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->roomcategories(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuffer.dotwproto.PSFRequest.RoomTypeFilters)
  return target;
}

size_t PSFRequest_RoomTypeFilters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuffer.dotwproto.PSFRequest.RoomTypeFilters)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 roomAmenitie = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->roomamenitie_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _roomamenitie_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 roomId = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->roomid_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _roomid_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .protobuffer.dotwproto.PSFRequest.RoomTypeFilters.RoomCategory roomCategories = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->roomcategories_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->roomcategories(static_cast<int>(i)));
    }
  }

  // string roomName = 4;
  if (this->roomname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->roomname());
  }

  // int32 suite = 1;
  if (this->suite() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->suite());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PSFRequest_RoomTypeFilters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuffer.dotwproto.PSFRequest.RoomTypeFilters)
  GOOGLE_DCHECK_NE(&from, this);
  const PSFRequest_RoomTypeFilters* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PSFRequest_RoomTypeFilters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuffer.dotwproto.PSFRequest.RoomTypeFilters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuffer.dotwproto.PSFRequest.RoomTypeFilters)
    MergeFrom(*source);
  }
}

void PSFRequest_RoomTypeFilters::MergeFrom(const PSFRequest_RoomTypeFilters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuffer.dotwproto.PSFRequest.RoomTypeFilters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  roomamenitie_.MergeFrom(from.roomamenitie_);
  roomid_.MergeFrom(from.roomid_);
  roomcategories_.MergeFrom(from.roomcategories_);
  if (from.roomname().size() > 0) {

    roomname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roomname_);
  }
  if (from.suite() != 0) {
    set_suite(from.suite());
  }
}

void PSFRequest_RoomTypeFilters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuffer.dotwproto.PSFRequest.RoomTypeFilters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PSFRequest_RoomTypeFilters::CopyFrom(const PSFRequest_RoomTypeFilters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuffer.dotwproto.PSFRequest.RoomTypeFilters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PSFRequest_RoomTypeFilters::IsInitialized() const {
  return true;
}

void PSFRequest_RoomTypeFilters::Swap(PSFRequest_RoomTypeFilters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PSFRequest_RoomTypeFilters::InternalSwap(PSFRequest_RoomTypeFilters* other) {
  using std::swap;
  roomamenitie_.InternalSwap(&other->roomamenitie_);
  roomid_.InternalSwap(&other->roomid_);
  roomcategories_.InternalSwap(&other->roomcategories_);
  roomname_.Swap(&other->roomname_);
  swap(suite_, other->suite_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PSFRequest_RoomTypeFilters::GetMetadata() const {
  protobuf_genProto_2fDotw_5fProtoBuf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PSFRequest_AdditionalFilters::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PSFRequest_AdditionalFilters::PSFRequest_AdditionalFilters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::InitDefaultsPSFRequest_AdditionalFilters();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuffer.dotwproto.PSFRequest.AdditionalFilters)
}
PSFRequest_AdditionalFilters::PSFRequest_AdditionalFilters(const PSFRequest_AdditionalFilters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protobuffer.dotwproto.PSFRequest.AdditionalFilters)
}

void PSFRequest_AdditionalFilters::SharedCtor() {
  _cached_size_ = 0;
}

PSFRequest_AdditionalFilters::~PSFRequest_AdditionalFilters() {
  // @@protoc_insertion_point(destructor:protobuffer.dotwproto.PSFRequest.AdditionalFilters)
  SharedDtor();
}

void PSFRequest_AdditionalFilters::SharedDtor() {
}

void PSFRequest_AdditionalFilters::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PSFRequest_AdditionalFilters::descriptor() {
  ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PSFRequest_AdditionalFilters& PSFRequest_AdditionalFilters::default_instance() {
  ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::InitDefaultsPSFRequest_AdditionalFilters();
  return *internal_default_instance();
}

PSFRequest_AdditionalFilters* PSFRequest_AdditionalFilters::New(::google::protobuf::Arena* arena) const {
  PSFRequest_AdditionalFilters* n = new PSFRequest_AdditionalFilters;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PSFRequest_AdditionalFilters::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuffer.dotwproto.PSFRequest.AdditionalFilters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool PSFRequest_AdditionalFilters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuffer.dotwproto.PSFRequest.AdditionalFilters)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:protobuffer.dotwproto.PSFRequest.AdditionalFilters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuffer.dotwproto.PSFRequest.AdditionalFilters)
  return false;
#undef DO_
}

void PSFRequest_AdditionalFilters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuffer.dotwproto.PSFRequest.AdditionalFilters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuffer.dotwproto.PSFRequest.AdditionalFilters)
}

::google::protobuf::uint8* PSFRequest_AdditionalFilters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuffer.dotwproto.PSFRequest.AdditionalFilters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuffer.dotwproto.PSFRequest.AdditionalFilters)
  return target;
}

size_t PSFRequest_AdditionalFilters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuffer.dotwproto.PSFRequest.AdditionalFilters)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PSFRequest_AdditionalFilters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuffer.dotwproto.PSFRequest.AdditionalFilters)
  GOOGLE_DCHECK_NE(&from, this);
  const PSFRequest_AdditionalFilters* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PSFRequest_AdditionalFilters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuffer.dotwproto.PSFRequest.AdditionalFilters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuffer.dotwproto.PSFRequest.AdditionalFilters)
    MergeFrom(*source);
  }
}

void PSFRequest_AdditionalFilters::MergeFrom(const PSFRequest_AdditionalFilters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuffer.dotwproto.PSFRequest.AdditionalFilters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void PSFRequest_AdditionalFilters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuffer.dotwproto.PSFRequest.AdditionalFilters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PSFRequest_AdditionalFilters::CopyFrom(const PSFRequest_AdditionalFilters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuffer.dotwproto.PSFRequest.AdditionalFilters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PSFRequest_AdditionalFilters::IsInitialized() const {
  return true;
}

void PSFRequest_AdditionalFilters::Swap(PSFRequest_AdditionalFilters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PSFRequest_AdditionalFilters::InternalSwap(PSFRequest_AdditionalFilters* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PSFRequest_AdditionalFilters::GetMetadata() const {
  protobuf_genProto_2fDotw_5fProtoBuf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PSFRequest_SearchPeriodCriteria::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PSFRequest_SearchPeriodCriteria::kTravelFromFieldNumber;
const int PSFRequest_SearchPeriodCriteria::kTravelToFieldNumber;
const int PSFRequest_SearchPeriodCriteria::kBookingDateTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PSFRequest_SearchPeriodCriteria::PSFRequest_SearchPeriodCriteria()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::InitDefaultsPSFRequest_SearchPeriodCriteria();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuffer.dotwproto.PSFRequest.SearchPeriodCriteria)
}
PSFRequest_SearchPeriodCriteria::PSFRequest_SearchPeriodCriteria(const PSFRequest_SearchPeriodCriteria& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&travelfrom_, &from.travelfrom_,
    static_cast<size_t>(reinterpret_cast<char*>(&bookingdatetime_) -
    reinterpret_cast<char*>(&travelfrom_)) + sizeof(bookingdatetime_));
  // @@protoc_insertion_point(copy_constructor:protobuffer.dotwproto.PSFRequest.SearchPeriodCriteria)
}

void PSFRequest_SearchPeriodCriteria::SharedCtor() {
  ::memset(&travelfrom_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bookingdatetime_) -
      reinterpret_cast<char*>(&travelfrom_)) + sizeof(bookingdatetime_));
  _cached_size_ = 0;
}

PSFRequest_SearchPeriodCriteria::~PSFRequest_SearchPeriodCriteria() {
  // @@protoc_insertion_point(destructor:protobuffer.dotwproto.PSFRequest.SearchPeriodCriteria)
  SharedDtor();
}

void PSFRequest_SearchPeriodCriteria::SharedDtor() {
}

void PSFRequest_SearchPeriodCriteria::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PSFRequest_SearchPeriodCriteria::descriptor() {
  ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PSFRequest_SearchPeriodCriteria& PSFRequest_SearchPeriodCriteria::default_instance() {
  ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::InitDefaultsPSFRequest_SearchPeriodCriteria();
  return *internal_default_instance();
}

PSFRequest_SearchPeriodCriteria* PSFRequest_SearchPeriodCriteria::New(::google::protobuf::Arena* arena) const {
  PSFRequest_SearchPeriodCriteria* n = new PSFRequest_SearchPeriodCriteria;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PSFRequest_SearchPeriodCriteria::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuffer.dotwproto.PSFRequest.SearchPeriodCriteria)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&travelfrom_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bookingdatetime_) -
      reinterpret_cast<char*>(&travelfrom_)) + sizeof(bookingdatetime_));
  _internal_metadata_.Clear();
}

bool PSFRequest_SearchPeriodCriteria::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuffer.dotwproto.PSFRequest.SearchPeriodCriteria)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 travelFrom = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &travelfrom_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 travelTo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &travelto_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 bookingDateTime = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bookingdatetime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuffer.dotwproto.PSFRequest.SearchPeriodCriteria)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuffer.dotwproto.PSFRequest.SearchPeriodCriteria)
  return false;
#undef DO_
}

void PSFRequest_SearchPeriodCriteria::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuffer.dotwproto.PSFRequest.SearchPeriodCriteria)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 travelFrom = 1;
  if (this->travelfrom() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->travelfrom(), output);
  }

  // int32 travelTo = 2;
  if (this->travelto() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->travelto(), output);
  }

  // int32 bookingDateTime = 3;
  if (this->bookingdatetime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->bookingdatetime(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuffer.dotwproto.PSFRequest.SearchPeriodCriteria)
}

::google::protobuf::uint8* PSFRequest_SearchPeriodCriteria::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuffer.dotwproto.PSFRequest.SearchPeriodCriteria)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 travelFrom = 1;
  if (this->travelfrom() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->travelfrom(), target);
  }

  // int32 travelTo = 2;
  if (this->travelto() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->travelto(), target);
  }

  // int32 bookingDateTime = 3;
  if (this->bookingdatetime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->bookingdatetime(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuffer.dotwproto.PSFRequest.SearchPeriodCriteria)
  return target;
}

size_t PSFRequest_SearchPeriodCriteria::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuffer.dotwproto.PSFRequest.SearchPeriodCriteria)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 travelFrom = 1;
  if (this->travelfrom() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->travelfrom());
  }

  // int32 travelTo = 2;
  if (this->travelto() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->travelto());
  }

  // int32 bookingDateTime = 3;
  if (this->bookingdatetime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bookingdatetime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PSFRequest_SearchPeriodCriteria::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuffer.dotwproto.PSFRequest.SearchPeriodCriteria)
  GOOGLE_DCHECK_NE(&from, this);
  const PSFRequest_SearchPeriodCriteria* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PSFRequest_SearchPeriodCriteria>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuffer.dotwproto.PSFRequest.SearchPeriodCriteria)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuffer.dotwproto.PSFRequest.SearchPeriodCriteria)
    MergeFrom(*source);
  }
}

void PSFRequest_SearchPeriodCriteria::MergeFrom(const PSFRequest_SearchPeriodCriteria& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuffer.dotwproto.PSFRequest.SearchPeriodCriteria)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.travelfrom() != 0) {
    set_travelfrom(from.travelfrom());
  }
  if (from.travelto() != 0) {
    set_travelto(from.travelto());
  }
  if (from.bookingdatetime() != 0) {
    set_bookingdatetime(from.bookingdatetime());
  }
}

void PSFRequest_SearchPeriodCriteria::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuffer.dotwproto.PSFRequest.SearchPeriodCriteria)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PSFRequest_SearchPeriodCriteria::CopyFrom(const PSFRequest_SearchPeriodCriteria& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuffer.dotwproto.PSFRequest.SearchPeriodCriteria)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PSFRequest_SearchPeriodCriteria::IsInitialized() const {
  return true;
}

void PSFRequest_SearchPeriodCriteria::Swap(PSFRequest_SearchPeriodCriteria* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PSFRequest_SearchPeriodCriteria::InternalSwap(PSFRequest_SearchPeriodCriteria* other) {
  using std::swap;
  swap(travelfrom_, other->travelfrom_);
  swap(travelto_, other->travelto_);
  swap(bookingdatetime_, other->bookingdatetime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PSFRequest_SearchPeriodCriteria::GetMetadata() const {
  protobuf_genProto_2fDotw_5fProtoBuf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PSFRequest::InitAsDefaultInstance() {
  ::protobuffer::dotwproto::_PSFRequest_default_instance_._instance.get_mutable()->hotelfilters_ = const_cast< ::protobuffer::dotwproto::PSFRequest_HotelFilters*>(
      ::protobuffer::dotwproto::PSFRequest_HotelFilters::internal_default_instance());
  ::protobuffer::dotwproto::_PSFRequest_default_instance_._instance.get_mutable()->roomtypefilters_ = const_cast< ::protobuffer::dotwproto::PSFRequest_RoomTypeFilters*>(
      ::protobuffer::dotwproto::PSFRequest_RoomTypeFilters::internal_default_instance());
  ::protobuffer::dotwproto::_PSFRequest_default_instance_._instance.get_mutable()->additionalfilters_ = const_cast< ::protobuffer::dotwproto::PSFRequest_AdditionalFilters*>(
      ::protobuffer::dotwproto::PSFRequest_AdditionalFilters::internal_default_instance());
  ::protobuffer::dotwproto::_PSFRequest_default_instance_._instance.get_mutable()->searchperiodcriteria_ = const_cast< ::protobuffer::dotwproto::PSFRequest_SearchPeriodCriteria*>(
      ::protobuffer::dotwproto::PSFRequest_SearchPeriodCriteria::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PSFRequest::kPsfilterFieldNumber;
const int PSFRequest::kCustomerIdFieldNumber;
const int PSFRequest::kEnvironmentFieldNumber;
const int PSFRequest::kRequestSourceFieldNumber;
const int PSFRequest::kExceptRestrictionsFieldNumber;
const int PSFRequest::kPassengerNationalityOrResidenceProvidedFieldNumber;
const int PSFRequest::kHotelIdsFieldNumber;
const int PSFRequest::kCityFieldNumber;
const int PSFRequest::kCountryFieldNumber;
const int PSFRequest::kBookingChannelsWithAutoMappingFieldNumber;
const int PSFRequest::kBookingChannelTypesFieldNumber;
const int PSFRequest::kExcludedBookingchannelFieldNumber;
const int PSFRequest::kActiveForRoomCategoriesFieldNumber;
const int PSFRequest::kRoomOccupancyFieldNumber;
const int PSFRequest::kHotelFiltersFieldNumber;
const int PSFRequest::kRoomTypeFiltersFieldNumber;
const int PSFRequest::kAdditionalFiltersFieldNumber;
const int PSFRequest::kSearchPeriodCriteriaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PSFRequest::PSFRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::InitDefaultsPSFRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuffer.dotwproto.PSFRequest)
}
PSFRequest::PSFRequest(const PSFRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      exceptrestrictions_(from.exceptrestrictions_),
      hotelids_(from.hotelids_),
      bookingchannelswithautomapping_(from.bookingchannelswithautomapping_),
      bookingchanneltypes_(from.bookingchanneltypes_),
      excludedbookingchannel_(from.excludedbookingchannel_),
      roomoccupancy_(from.roomoccupancy_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  psfilter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.psfilter().size() > 0) {
    psfilter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.psfilter_);
  }
  environment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.environment().size() > 0) {
    environment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.environment_);
  }
  city_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.city().size() > 0) {
    city_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.city_);
  }
  if (from.has_hotelfilters()) {
    hotelfilters_ = new ::protobuffer::dotwproto::PSFRequest_HotelFilters(*from.hotelfilters_);
  } else {
    hotelfilters_ = NULL;
  }
  if (from.has_roomtypefilters()) {
    roomtypefilters_ = new ::protobuffer::dotwproto::PSFRequest_RoomTypeFilters(*from.roomtypefilters_);
  } else {
    roomtypefilters_ = NULL;
  }
  if (from.has_additionalfilters()) {
    additionalfilters_ = new ::protobuffer::dotwproto::PSFRequest_AdditionalFilters(*from.additionalfilters_);
  } else {
    additionalfilters_ = NULL;
  }
  if (from.has_searchperiodcriteria()) {
    searchperiodcriteria_ = new ::protobuffer::dotwproto::PSFRequest_SearchPeriodCriteria(*from.searchperiodcriteria_);
  } else {
    searchperiodcriteria_ = NULL;
  }
  ::memcpy(&customerid_, &from.customerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&activeforroomcategories_) -
    reinterpret_cast<char*>(&customerid_)) + sizeof(activeforroomcategories_));
  // @@protoc_insertion_point(copy_constructor:protobuffer.dotwproto.PSFRequest)
}

void PSFRequest::SharedCtor() {
  psfilter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  environment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  city_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&hotelfilters_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&activeforroomcategories_) -
      reinterpret_cast<char*>(&hotelfilters_)) + sizeof(activeforroomcategories_));
  _cached_size_ = 0;
}

PSFRequest::~PSFRequest() {
  // @@protoc_insertion_point(destructor:protobuffer.dotwproto.PSFRequest)
  SharedDtor();
}

void PSFRequest::SharedDtor() {
  psfilter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  environment_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  city_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete hotelfilters_;
  if (this != internal_default_instance()) delete roomtypefilters_;
  if (this != internal_default_instance()) delete additionalfilters_;
  if (this != internal_default_instance()) delete searchperiodcriteria_;
}

void PSFRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PSFRequest::descriptor() {
  ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PSFRequest& PSFRequest::default_instance() {
  ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::InitDefaultsPSFRequest();
  return *internal_default_instance();
}

PSFRequest* PSFRequest::New(::google::protobuf::Arena* arena) const {
  PSFRequest* n = new PSFRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PSFRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuffer.dotwproto.PSFRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  exceptrestrictions_.Clear();
  hotelids_.Clear();
  bookingchannelswithautomapping_.Clear();
  bookingchanneltypes_.Clear();
  excludedbookingchannel_.Clear();
  roomoccupancy_.Clear();
  psfilter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  environment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  city_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && hotelfilters_ != NULL) {
    delete hotelfilters_;
  }
  hotelfilters_ = NULL;
  if (GetArenaNoVirtual() == NULL && roomtypefilters_ != NULL) {
    delete roomtypefilters_;
  }
  roomtypefilters_ = NULL;
  if (GetArenaNoVirtual() == NULL && additionalfilters_ != NULL) {
    delete additionalfilters_;
  }
  additionalfilters_ = NULL;
  if (GetArenaNoVirtual() == NULL && searchperiodcriteria_ != NULL) {
    delete searchperiodcriteria_;
  }
  searchperiodcriteria_ = NULL;
  ::memset(&customerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&activeforroomcategories_) -
      reinterpret_cast<char*>(&customerid_)) + sizeof(activeforroomcategories_));
  _internal_metadata_.Clear();
}

bool PSFRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuffer.dotwproto.PSFRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string psfilter = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_psfilter()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->psfilter().data(), static_cast<int>(this->psfilter().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuffer.dotwproto.PSFRequest.psfilter"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 customerId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &customerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string environment = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_environment()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->environment().data(), static_cast<int>(this->environment().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuffer.dotwproto.PSFRequest.environment"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 requestSource = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &requestsource_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 exceptRestrictions = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_exceptrestrictions())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 42u, input, this->mutable_exceptrestrictions())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool passengerNationalityOrResidenceProvided = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &passengernationalityorresidenceprovided_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 hotelIds = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_hotelids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 58u, input, this->mutable_hotelids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string city = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_city()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->city().data(), static_cast<int>(this->city().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuffer.dotwproto.PSFRequest.city"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 country = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &country_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 bookingChannelsWithAutoMapping = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_bookingchannelswithautomapping())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 82u, input, this->mutable_bookingchannelswithautomapping())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 bookingChannelTypes = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_bookingchanneltypes())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 90u, input, this->mutable_bookingchanneltypes())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 excludedBookingchannel = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_excludedbookingchannel())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 98u, input, this->mutable_excludedbookingchannel())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool activeForRoomCategories = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &activeforroomcategories_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .protobuffer.dotwproto.PSFRequest.RoomOccupancy roomOccupancy = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_roomoccupancy()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .protobuffer.dotwproto.PSFRequest.HotelFilters hotelFilters = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hotelfilters()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .protobuffer.dotwproto.PSFRequest.RoomTypeFilters roomTypeFilters = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_roomtypefilters()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .protobuffer.dotwproto.PSFRequest.AdditionalFilters additionalFilters = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_additionalfilters()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .protobuffer.dotwproto.PSFRequest.SearchPeriodCriteria searchPeriodCriteria = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_searchperiodcriteria()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuffer.dotwproto.PSFRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuffer.dotwproto.PSFRequest)
  return false;
#undef DO_
}

void PSFRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuffer.dotwproto.PSFRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string psfilter = 1;
  if (this->psfilter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->psfilter().data(), static_cast<int>(this->psfilter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.PSFRequest.psfilter");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->psfilter(), output);
  }

  // int32 customerId = 2;
  if (this->customerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->customerid(), output);
  }

  // string environment = 3;
  if (this->environment().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->environment().data(), static_cast<int>(this->environment().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.PSFRequest.environment");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->environment(), output);
  }

  // int32 requestSource = 4;
  if (this->requestsource() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->requestsource(), output);
  }

  // repeated int32 exceptRestrictions = 5;
  if (this->exceptrestrictions_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _exceptrestrictions_cached_byte_size_));
  }
  for (int i = 0, n = this->exceptrestrictions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->exceptrestrictions(i), output);
  }

  // bool passengerNationalityOrResidenceProvided = 6;
  if (this->passengernationalityorresidenceprovided() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->passengernationalityorresidenceprovided(), output);
  }

  // repeated int32 hotelIds = 7;
  if (this->hotelids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _hotelids_cached_byte_size_));
  }
  for (int i = 0, n = this->hotelids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->hotelids(i), output);
  }

  // string city = 8;
  if (this->city().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->city().data(), static_cast<int>(this->city().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.PSFRequest.city");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->city(), output);
  }

  // int32 country = 9;
  if (this->country() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->country(), output);
  }

  // repeated int32 bookingChannelsWithAutoMapping = 10;
  if (this->bookingchannelswithautomapping_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(10, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _bookingchannelswithautomapping_cached_byte_size_));
  }
  for (int i = 0, n = this->bookingchannelswithautomapping_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->bookingchannelswithautomapping(i), output);
  }

  // repeated int32 bookingChannelTypes = 11;
  if (this->bookingchanneltypes_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(11, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _bookingchanneltypes_cached_byte_size_));
  }
  for (int i = 0, n = this->bookingchanneltypes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->bookingchanneltypes(i), output);
  }

  // repeated int32 excludedBookingchannel = 12;
  if (this->excludedbookingchannel_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(12, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _excludedbookingchannel_cached_byte_size_));
  }
  for (int i = 0, n = this->excludedbookingchannel_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->excludedbookingchannel(i), output);
  }

  // bool activeForRoomCategories = 13;
  if (this->activeforroomcategories() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->activeforroomcategories(), output);
  }

  // repeated .protobuffer.dotwproto.PSFRequest.RoomOccupancy roomOccupancy = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->roomoccupancy_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->roomoccupancy(static_cast<int>(i)), output);
  }

  // .protobuffer.dotwproto.PSFRequest.HotelFilters hotelFilters = 15;
  if (this->has_hotelfilters()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, *this->hotelfilters_, output);
  }

  // .protobuffer.dotwproto.PSFRequest.RoomTypeFilters roomTypeFilters = 16;
  if (this->has_roomtypefilters()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, *this->roomtypefilters_, output);
  }

  // .protobuffer.dotwproto.PSFRequest.AdditionalFilters additionalFilters = 17;
  if (this->has_additionalfilters()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, *this->additionalfilters_, output);
  }

  // .protobuffer.dotwproto.PSFRequest.SearchPeriodCriteria searchPeriodCriteria = 18;
  if (this->has_searchperiodcriteria()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, *this->searchperiodcriteria_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuffer.dotwproto.PSFRequest)
}

::google::protobuf::uint8* PSFRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuffer.dotwproto.PSFRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string psfilter = 1;
  if (this->psfilter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->psfilter().data(), static_cast<int>(this->psfilter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.PSFRequest.psfilter");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->psfilter(), target);
  }

  // int32 customerId = 2;
  if (this->customerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->customerid(), target);
  }

  // string environment = 3;
  if (this->environment().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->environment().data(), static_cast<int>(this->environment().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.PSFRequest.environment");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->environment(), target);
  }

  // int32 requestSource = 4;
  if (this->requestsource() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->requestsource(), target);
  }

  // repeated int32 exceptRestrictions = 5;
  if (this->exceptrestrictions_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _exceptrestrictions_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->exceptrestrictions_, target);
  }

  // bool passengerNationalityOrResidenceProvided = 6;
  if (this->passengernationalityorresidenceprovided() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->passengernationalityorresidenceprovided(), target);
  }

  // repeated int32 hotelIds = 7;
  if (this->hotelids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _hotelids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->hotelids_, target);
  }

  // string city = 8;
  if (this->city().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->city().data(), static_cast<int>(this->city().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.PSFRequest.city");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->city(), target);
  }

  // int32 country = 9;
  if (this->country() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->country(), target);
  }

  // repeated int32 bookingChannelsWithAutoMapping = 10;
  if (this->bookingchannelswithautomapping_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      10,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _bookingchannelswithautomapping_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->bookingchannelswithautomapping_, target);
  }

  // repeated int32 bookingChannelTypes = 11;
  if (this->bookingchanneltypes_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      11,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _bookingchanneltypes_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->bookingchanneltypes_, target);
  }

  // repeated int32 excludedBookingchannel = 12;
  if (this->excludedbookingchannel_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      12,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _excludedbookingchannel_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->excludedbookingchannel_, target);
  }

  // bool activeForRoomCategories = 13;
  if (this->activeforroomcategories() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->activeforroomcategories(), target);
  }

  // repeated .protobuffer.dotwproto.PSFRequest.RoomOccupancy roomOccupancy = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->roomoccupancy_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->roomoccupancy(static_cast<int>(i)), deterministic, target);
  }

  // .protobuffer.dotwproto.PSFRequest.HotelFilters hotelFilters = 15;
  if (this->has_hotelfilters()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, *this->hotelfilters_, deterministic, target);
  }

  // .protobuffer.dotwproto.PSFRequest.RoomTypeFilters roomTypeFilters = 16;
  if (this->has_roomtypefilters()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, *this->roomtypefilters_, deterministic, target);
  }

  // .protobuffer.dotwproto.PSFRequest.AdditionalFilters additionalFilters = 17;
  if (this->has_additionalfilters()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, *this->additionalfilters_, deterministic, target);
  }

  // .protobuffer.dotwproto.PSFRequest.SearchPeriodCriteria searchPeriodCriteria = 18;
  if (this->has_searchperiodcriteria()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, *this->searchperiodcriteria_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuffer.dotwproto.PSFRequest)
  return target;
}

size_t PSFRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuffer.dotwproto.PSFRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 exceptRestrictions = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->exceptrestrictions_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _exceptrestrictions_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 hotelIds = 7;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->hotelids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _hotelids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 bookingChannelsWithAutoMapping = 10;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->bookingchannelswithautomapping_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _bookingchannelswithautomapping_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 bookingChannelTypes = 11;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->bookingchanneltypes_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _bookingchanneltypes_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 excludedBookingchannel = 12;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->excludedbookingchannel_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _excludedbookingchannel_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .protobuffer.dotwproto.PSFRequest.RoomOccupancy roomOccupancy = 14;
  {
    unsigned int count = static_cast<unsigned int>(this->roomoccupancy_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->roomoccupancy(static_cast<int>(i)));
    }
  }

  // string psfilter = 1;
  if (this->psfilter().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->psfilter());
  }

  // string environment = 3;
  if (this->environment().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->environment());
  }

  // string city = 8;
  if (this->city().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->city());
  }

  // .protobuffer.dotwproto.PSFRequest.HotelFilters hotelFilters = 15;
  if (this->has_hotelfilters()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->hotelfilters_);
  }

  // .protobuffer.dotwproto.PSFRequest.RoomTypeFilters roomTypeFilters = 16;
  if (this->has_roomtypefilters()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->roomtypefilters_);
  }

  // .protobuffer.dotwproto.PSFRequest.AdditionalFilters additionalFilters = 17;
  if (this->has_additionalfilters()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->additionalfilters_);
  }

  // .protobuffer.dotwproto.PSFRequest.SearchPeriodCriteria searchPeriodCriteria = 18;
  if (this->has_searchperiodcriteria()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->searchperiodcriteria_);
  }

  // int32 customerId = 2;
  if (this->customerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->customerid());
  }

  // int32 requestSource = 4;
  if (this->requestsource() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->requestsource());
  }

  // int32 country = 9;
  if (this->country() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->country());
  }

  // bool passengerNationalityOrResidenceProvided = 6;
  if (this->passengernationalityorresidenceprovided() != 0) {
    total_size += 1 + 1;
  }

  // bool activeForRoomCategories = 13;
  if (this->activeforroomcategories() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PSFRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuffer.dotwproto.PSFRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PSFRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PSFRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuffer.dotwproto.PSFRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuffer.dotwproto.PSFRequest)
    MergeFrom(*source);
  }
}

void PSFRequest::MergeFrom(const PSFRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuffer.dotwproto.PSFRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  exceptrestrictions_.MergeFrom(from.exceptrestrictions_);
  hotelids_.MergeFrom(from.hotelids_);
  bookingchannelswithautomapping_.MergeFrom(from.bookingchannelswithautomapping_);
  bookingchanneltypes_.MergeFrom(from.bookingchanneltypes_);
  excludedbookingchannel_.MergeFrom(from.excludedbookingchannel_);
  roomoccupancy_.MergeFrom(from.roomoccupancy_);
  if (from.psfilter().size() > 0) {

    psfilter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.psfilter_);
  }
  if (from.environment().size() > 0) {

    environment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.environment_);
  }
  if (from.city().size() > 0) {

    city_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.city_);
  }
  if (from.has_hotelfilters()) {
    mutable_hotelfilters()->::protobuffer::dotwproto::PSFRequest_HotelFilters::MergeFrom(from.hotelfilters());
  }
  if (from.has_roomtypefilters()) {
    mutable_roomtypefilters()->::protobuffer::dotwproto::PSFRequest_RoomTypeFilters::MergeFrom(from.roomtypefilters());
  }
  if (from.has_additionalfilters()) {
    mutable_additionalfilters()->::protobuffer::dotwproto::PSFRequest_AdditionalFilters::MergeFrom(from.additionalfilters());
  }
  if (from.has_searchperiodcriteria()) {
    mutable_searchperiodcriteria()->::protobuffer::dotwproto::PSFRequest_SearchPeriodCriteria::MergeFrom(from.searchperiodcriteria());
  }
  if (from.customerid() != 0) {
    set_customerid(from.customerid());
  }
  if (from.requestsource() != 0) {
    set_requestsource(from.requestsource());
  }
  if (from.country() != 0) {
    set_country(from.country());
  }
  if (from.passengernationalityorresidenceprovided() != 0) {
    set_passengernationalityorresidenceprovided(from.passengernationalityorresidenceprovided());
  }
  if (from.activeforroomcategories() != 0) {
    set_activeforroomcategories(from.activeforroomcategories());
  }
}

void PSFRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuffer.dotwproto.PSFRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PSFRequest::CopyFrom(const PSFRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuffer.dotwproto.PSFRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PSFRequest::IsInitialized() const {
  return true;
}

void PSFRequest::Swap(PSFRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PSFRequest::InternalSwap(PSFRequest* other) {
  using std::swap;
  exceptrestrictions_.InternalSwap(&other->exceptrestrictions_);
  hotelids_.InternalSwap(&other->hotelids_);
  bookingchannelswithautomapping_.InternalSwap(&other->bookingchannelswithautomapping_);
  bookingchanneltypes_.InternalSwap(&other->bookingchanneltypes_);
  excludedbookingchannel_.InternalSwap(&other->excludedbookingchannel_);
  roomoccupancy_.InternalSwap(&other->roomoccupancy_);
  psfilter_.Swap(&other->psfilter_);
  environment_.Swap(&other->environment_);
  city_.Swap(&other->city_);
  swap(hotelfilters_, other->hotelfilters_);
  swap(roomtypefilters_, other->roomtypefilters_);
  swap(additionalfilters_, other->additionalfilters_);
  swap(searchperiodcriteria_, other->searchperiodcriteria_);
  swap(customerid_, other->customerid_);
  swap(requestsource_, other->requestsource_);
  swap(country_, other->country_);
  swap(passengernationalityorresidenceprovided_, other->passengernationalityorresidenceprovided_);
  swap(activeforroomcategories_, other->activeforroomcategories_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PSFRequest::GetMetadata() const {
  protobuf_genProto_2fDotw_5fProtoBuf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PSFReply_RoomData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PSFReply_RoomData::kRoomTypeCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PSFReply_RoomData::PSFReply_RoomData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::InitDefaultsPSFReply_RoomData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuffer.dotwproto.PSFReply.RoomData)
}
PSFReply_RoomData::PSFReply_RoomData(const PSFReply_RoomData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  roomtypecode_ = from.roomtypecode_;
  // @@protoc_insertion_point(copy_constructor:protobuffer.dotwproto.PSFReply.RoomData)
}

void PSFReply_RoomData::SharedCtor() {
  roomtypecode_ = 0;
  _cached_size_ = 0;
}

PSFReply_RoomData::~PSFReply_RoomData() {
  // @@protoc_insertion_point(destructor:protobuffer.dotwproto.PSFReply.RoomData)
  SharedDtor();
}

void PSFReply_RoomData::SharedDtor() {
}

void PSFReply_RoomData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PSFReply_RoomData::descriptor() {
  ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PSFReply_RoomData& PSFReply_RoomData::default_instance() {
  ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::InitDefaultsPSFReply_RoomData();
  return *internal_default_instance();
}

PSFReply_RoomData* PSFReply_RoomData::New(::google::protobuf::Arena* arena) const {
  PSFReply_RoomData* n = new PSFReply_RoomData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PSFReply_RoomData::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuffer.dotwproto.PSFReply.RoomData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roomtypecode_ = 0;
  _internal_metadata_.Clear();
}

bool PSFReply_RoomData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuffer.dotwproto.PSFReply.RoomData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 roomTypeCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roomtypecode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuffer.dotwproto.PSFReply.RoomData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuffer.dotwproto.PSFReply.RoomData)
  return false;
#undef DO_
}

void PSFReply_RoomData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuffer.dotwproto.PSFReply.RoomData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 roomTypeCode = 1;
  if (this->roomtypecode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->roomtypecode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuffer.dotwproto.PSFReply.RoomData)
}

::google::protobuf::uint8* PSFReply_RoomData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuffer.dotwproto.PSFReply.RoomData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 roomTypeCode = 1;
  if (this->roomtypecode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->roomtypecode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuffer.dotwproto.PSFReply.RoomData)
  return target;
}

size_t PSFReply_RoomData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuffer.dotwproto.PSFReply.RoomData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 roomTypeCode = 1;
  if (this->roomtypecode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->roomtypecode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PSFReply_RoomData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuffer.dotwproto.PSFReply.RoomData)
  GOOGLE_DCHECK_NE(&from, this);
  const PSFReply_RoomData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PSFReply_RoomData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuffer.dotwproto.PSFReply.RoomData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuffer.dotwproto.PSFReply.RoomData)
    MergeFrom(*source);
  }
}

void PSFReply_RoomData::MergeFrom(const PSFReply_RoomData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuffer.dotwproto.PSFReply.RoomData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roomtypecode() != 0) {
    set_roomtypecode(from.roomtypecode());
  }
}

void PSFReply_RoomData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuffer.dotwproto.PSFReply.RoomData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PSFReply_RoomData::CopyFrom(const PSFReply_RoomData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuffer.dotwproto.PSFReply.RoomData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PSFReply_RoomData::IsInitialized() const {
  return true;
}

void PSFReply_RoomData::Swap(PSFReply_RoomData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PSFReply_RoomData::InternalSwap(PSFReply_RoomData* other) {
  using std::swap;
  swap(roomtypecode_, other->roomtypecode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PSFReply_RoomData::GetMetadata() const {
  protobuf_genProto_2fDotw_5fProtoBuf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PSFReply_HotelCode::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PSFReply_HotelCode::kHotelCodeOriginalFieldNumber;
const int PSFReply_HotelCode::kCityCodeFieldNumber;
const int PSFReply_HotelCode::kRoomDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PSFReply_HotelCode::PSFReply_HotelCode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::InitDefaultsPSFReply_HotelCode();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuffer.dotwproto.PSFReply.HotelCode)
}
PSFReply_HotelCode::PSFReply_HotelCode(const PSFReply_HotelCode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      roomdata_(from.roomdata_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  citycode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.citycode().size() > 0) {
    citycode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.citycode_);
  }
  hotelcodeoriginal_ = from.hotelcodeoriginal_;
  // @@protoc_insertion_point(copy_constructor:protobuffer.dotwproto.PSFReply.HotelCode)
}

void PSFReply_HotelCode::SharedCtor() {
  citycode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hotelcodeoriginal_ = 0;
  _cached_size_ = 0;
}

PSFReply_HotelCode::~PSFReply_HotelCode() {
  // @@protoc_insertion_point(destructor:protobuffer.dotwproto.PSFReply.HotelCode)
  SharedDtor();
}

void PSFReply_HotelCode::SharedDtor() {
  citycode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PSFReply_HotelCode::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PSFReply_HotelCode::descriptor() {
  ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PSFReply_HotelCode& PSFReply_HotelCode::default_instance() {
  ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::InitDefaultsPSFReply_HotelCode();
  return *internal_default_instance();
}

PSFReply_HotelCode* PSFReply_HotelCode::New(::google::protobuf::Arena* arena) const {
  PSFReply_HotelCode* n = new PSFReply_HotelCode;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PSFReply_HotelCode::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuffer.dotwproto.PSFReply.HotelCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roomdata_.Clear();
  citycode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hotelcodeoriginal_ = 0;
  _internal_metadata_.Clear();
}

bool PSFReply_HotelCode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuffer.dotwproto.PSFReply.HotelCode)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 hotelCodeOriginal = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hotelcodeoriginal_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cityCode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_citycode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->citycode().data(), static_cast<int>(this->citycode().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuffer.dotwproto.PSFReply.HotelCode.cityCode"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .protobuffer.dotwproto.PSFReply.RoomData roomData = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_roomdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuffer.dotwproto.PSFReply.HotelCode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuffer.dotwproto.PSFReply.HotelCode)
  return false;
#undef DO_
}

void PSFReply_HotelCode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuffer.dotwproto.PSFReply.HotelCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 hotelCodeOriginal = 1;
  if (this->hotelcodeoriginal() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->hotelcodeoriginal(), output);
  }

  // string cityCode = 2;
  if (this->citycode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->citycode().data(), static_cast<int>(this->citycode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.PSFReply.HotelCode.cityCode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->citycode(), output);
  }

  // repeated .protobuffer.dotwproto.PSFReply.RoomData roomData = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->roomdata_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->roomdata(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuffer.dotwproto.PSFReply.HotelCode)
}

::google::protobuf::uint8* PSFReply_HotelCode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuffer.dotwproto.PSFReply.HotelCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 hotelCodeOriginal = 1;
  if (this->hotelcodeoriginal() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->hotelcodeoriginal(), target);
  }

  // string cityCode = 2;
  if (this->citycode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->citycode().data(), static_cast<int>(this->citycode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.PSFReply.HotelCode.cityCode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->citycode(), target);
  }

  // repeated .protobuffer.dotwproto.PSFReply.RoomData roomData = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->roomdata_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->roomdata(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuffer.dotwproto.PSFReply.HotelCode)
  return target;
}

size_t PSFReply_HotelCode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuffer.dotwproto.PSFReply.HotelCode)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .protobuffer.dotwproto.PSFReply.RoomData roomData = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->roomdata_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->roomdata(static_cast<int>(i)));
    }
  }

  // string cityCode = 2;
  if (this->citycode().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->citycode());
  }

  // int32 hotelCodeOriginal = 1;
  if (this->hotelcodeoriginal() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->hotelcodeoriginal());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PSFReply_HotelCode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuffer.dotwproto.PSFReply.HotelCode)
  GOOGLE_DCHECK_NE(&from, this);
  const PSFReply_HotelCode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PSFReply_HotelCode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuffer.dotwproto.PSFReply.HotelCode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuffer.dotwproto.PSFReply.HotelCode)
    MergeFrom(*source);
  }
}

void PSFReply_HotelCode::MergeFrom(const PSFReply_HotelCode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuffer.dotwproto.PSFReply.HotelCode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  roomdata_.MergeFrom(from.roomdata_);
  if (from.citycode().size() > 0) {

    citycode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.citycode_);
  }
  if (from.hotelcodeoriginal() != 0) {
    set_hotelcodeoriginal(from.hotelcodeoriginal());
  }
}

void PSFReply_HotelCode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuffer.dotwproto.PSFReply.HotelCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PSFReply_HotelCode::CopyFrom(const PSFReply_HotelCode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuffer.dotwproto.PSFReply.HotelCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PSFReply_HotelCode::IsInitialized() const {
  return true;
}

void PSFReply_HotelCode::Swap(PSFReply_HotelCode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PSFReply_HotelCode::InternalSwap(PSFReply_HotelCode* other) {
  using std::swap;
  roomdata_.InternalSwap(&other->roomdata_);
  citycode_.Swap(&other->citycode_);
  swap(hotelcodeoriginal_, other->hotelcodeoriginal_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PSFReply_HotelCode::GetMetadata() const {
  protobuf_genProto_2fDotw_5fProtoBuf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PSFReply_BookingChannelCode::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PSFReply_BookingChannelCode::kHotelCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PSFReply_BookingChannelCode::PSFReply_BookingChannelCode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::InitDefaultsPSFReply_BookingChannelCode();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuffer.dotwproto.PSFReply.BookingChannelCode)
}
PSFReply_BookingChannelCode::PSFReply_BookingChannelCode(const PSFReply_BookingChannelCode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      hotelcode_(from.hotelcode_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protobuffer.dotwproto.PSFReply.BookingChannelCode)
}

void PSFReply_BookingChannelCode::SharedCtor() {
  _cached_size_ = 0;
}

PSFReply_BookingChannelCode::~PSFReply_BookingChannelCode() {
  // @@protoc_insertion_point(destructor:protobuffer.dotwproto.PSFReply.BookingChannelCode)
  SharedDtor();
}

void PSFReply_BookingChannelCode::SharedDtor() {
}

void PSFReply_BookingChannelCode::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PSFReply_BookingChannelCode::descriptor() {
  ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PSFReply_BookingChannelCode& PSFReply_BookingChannelCode::default_instance() {
  ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::InitDefaultsPSFReply_BookingChannelCode();
  return *internal_default_instance();
}

PSFReply_BookingChannelCode* PSFReply_BookingChannelCode::New(::google::protobuf::Arena* arena) const {
  PSFReply_BookingChannelCode* n = new PSFReply_BookingChannelCode;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PSFReply_BookingChannelCode::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuffer.dotwproto.PSFReply.BookingChannelCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hotelcode_.Clear();
  _internal_metadata_.Clear();
}

bool PSFReply_BookingChannelCode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuffer.dotwproto.PSFReply.BookingChannelCode)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .protobuffer.dotwproto.PSFReply.HotelCode hotelCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_hotelcode()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuffer.dotwproto.PSFReply.BookingChannelCode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuffer.dotwproto.PSFReply.BookingChannelCode)
  return false;
#undef DO_
}

void PSFReply_BookingChannelCode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuffer.dotwproto.PSFReply.BookingChannelCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .protobuffer.dotwproto.PSFReply.HotelCode hotelCode = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->hotelcode_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->hotelcode(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuffer.dotwproto.PSFReply.BookingChannelCode)
}

::google::protobuf::uint8* PSFReply_BookingChannelCode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuffer.dotwproto.PSFReply.BookingChannelCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .protobuffer.dotwproto.PSFReply.HotelCode hotelCode = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->hotelcode_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->hotelcode(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuffer.dotwproto.PSFReply.BookingChannelCode)
  return target;
}

size_t PSFReply_BookingChannelCode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuffer.dotwproto.PSFReply.BookingChannelCode)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .protobuffer.dotwproto.PSFReply.HotelCode hotelCode = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->hotelcode_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->hotelcode(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PSFReply_BookingChannelCode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuffer.dotwproto.PSFReply.BookingChannelCode)
  GOOGLE_DCHECK_NE(&from, this);
  const PSFReply_BookingChannelCode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PSFReply_BookingChannelCode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuffer.dotwproto.PSFReply.BookingChannelCode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuffer.dotwproto.PSFReply.BookingChannelCode)
    MergeFrom(*source);
  }
}

void PSFReply_BookingChannelCode::MergeFrom(const PSFReply_BookingChannelCode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuffer.dotwproto.PSFReply.BookingChannelCode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  hotelcode_.MergeFrom(from.hotelcode_);
}

void PSFReply_BookingChannelCode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuffer.dotwproto.PSFReply.BookingChannelCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PSFReply_BookingChannelCode::CopyFrom(const PSFReply_BookingChannelCode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuffer.dotwproto.PSFReply.BookingChannelCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PSFReply_BookingChannelCode::IsInitialized() const {
  return true;
}

void PSFReply_BookingChannelCode::Swap(PSFReply_BookingChannelCode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PSFReply_BookingChannelCode::InternalSwap(PSFReply_BookingChannelCode* other) {
  using std::swap;
  hotelcode_.InternalSwap(&other->hotelcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PSFReply_BookingChannelCode::GetMetadata() const {
  protobuf_genProto_2fDotw_5fProtoBuf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PSFReply_RoomIndex::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PSFReply_RoomIndex::kRoomIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PSFReply_RoomIndex::PSFReply_RoomIndex()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::InitDefaultsPSFReply_RoomIndex();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuffer.dotwproto.PSFReply.RoomIndex)
}
PSFReply_RoomIndex::PSFReply_RoomIndex(const PSFReply_RoomIndex& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      roomindex_(from.roomindex_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protobuffer.dotwproto.PSFReply.RoomIndex)
}

void PSFReply_RoomIndex::SharedCtor() {
  _cached_size_ = 0;
}

PSFReply_RoomIndex::~PSFReply_RoomIndex() {
  // @@protoc_insertion_point(destructor:protobuffer.dotwproto.PSFReply.RoomIndex)
  SharedDtor();
}

void PSFReply_RoomIndex::SharedDtor() {
}

void PSFReply_RoomIndex::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PSFReply_RoomIndex::descriptor() {
  ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PSFReply_RoomIndex& PSFReply_RoomIndex::default_instance() {
  ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::InitDefaultsPSFReply_RoomIndex();
  return *internal_default_instance();
}

PSFReply_RoomIndex* PSFReply_RoomIndex::New(::google::protobuf::Arena* arena) const {
  PSFReply_RoomIndex* n = new PSFReply_RoomIndex;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PSFReply_RoomIndex::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuffer.dotwproto.PSFReply.RoomIndex)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roomindex_.Clear();
  _internal_metadata_.Clear();
}

bool PSFReply_RoomIndex::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuffer.dotwproto.PSFReply.RoomIndex)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .protobuffer.dotwproto.PSFReply.BookingChannelCode roomIndex = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_roomindex()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuffer.dotwproto.PSFReply.RoomIndex)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuffer.dotwproto.PSFReply.RoomIndex)
  return false;
#undef DO_
}

void PSFReply_RoomIndex::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuffer.dotwproto.PSFReply.RoomIndex)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .protobuffer.dotwproto.PSFReply.BookingChannelCode roomIndex = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->roomindex_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->roomindex(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuffer.dotwproto.PSFReply.RoomIndex)
}

::google::protobuf::uint8* PSFReply_RoomIndex::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuffer.dotwproto.PSFReply.RoomIndex)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .protobuffer.dotwproto.PSFReply.BookingChannelCode roomIndex = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->roomindex_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->roomindex(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuffer.dotwproto.PSFReply.RoomIndex)
  return target;
}

size_t PSFReply_RoomIndex::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuffer.dotwproto.PSFReply.RoomIndex)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .protobuffer.dotwproto.PSFReply.BookingChannelCode roomIndex = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->roomindex_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->roomindex(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PSFReply_RoomIndex::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuffer.dotwproto.PSFReply.RoomIndex)
  GOOGLE_DCHECK_NE(&from, this);
  const PSFReply_RoomIndex* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PSFReply_RoomIndex>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuffer.dotwproto.PSFReply.RoomIndex)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuffer.dotwproto.PSFReply.RoomIndex)
    MergeFrom(*source);
  }
}

void PSFReply_RoomIndex::MergeFrom(const PSFReply_RoomIndex& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuffer.dotwproto.PSFReply.RoomIndex)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  roomindex_.MergeFrom(from.roomindex_);
}

void PSFReply_RoomIndex::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuffer.dotwproto.PSFReply.RoomIndex)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PSFReply_RoomIndex::CopyFrom(const PSFReply_RoomIndex& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuffer.dotwproto.PSFReply.RoomIndex)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PSFReply_RoomIndex::IsInitialized() const {
  return true;
}

void PSFReply_RoomIndex::Swap(PSFReply_RoomIndex* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PSFReply_RoomIndex::InternalSwap(PSFReply_RoomIndex* other) {
  using std::swap;
  roomindex_.InternalSwap(&other->roomindex_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PSFReply_RoomIndex::GetMetadata() const {
  protobuf_genProto_2fDotw_5fProtoBuf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PSFReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PSFReply::kResultsFieldNumber;
const int PSFReply::kErrorFieldNumber;
const int PSFReply::kErrorCodeFieldNumber;
const int PSFReply::kReplystringFieldNumber;
const int PSFReply::kReplystringIntFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PSFReply::PSFReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::InitDefaultsPSFReply();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuffer.dotwproto.PSFReply)
}
PSFReply::PSFReply(const PSFReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      results_(from.results_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error().size() > 0) {
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  errorcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.errorcode().size() > 0) {
    errorcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errorcode_);
  }
  replystring_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.replystring().size() > 0) {
    replystring_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.replystring_);
  }
  replystringint_ = from.replystringint_;
  // @@protoc_insertion_point(copy_constructor:protobuffer.dotwproto.PSFReply)
}

void PSFReply::SharedCtor() {
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errorcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  replystring_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  replystringint_ = 0;
  _cached_size_ = 0;
}

PSFReply::~PSFReply() {
  // @@protoc_insertion_point(destructor:protobuffer.dotwproto.PSFReply)
  SharedDtor();
}

void PSFReply::SharedDtor() {
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errorcode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  replystring_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PSFReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PSFReply::descriptor() {
  ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PSFReply& PSFReply::default_instance() {
  ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::InitDefaultsPSFReply();
  return *internal_default_instance();
}

PSFReply* PSFReply::New(::google::protobuf::Arena* arena) const {
  PSFReply* n = new PSFReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PSFReply::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuffer.dotwproto.PSFReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  results_.Clear();
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errorcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  replystring_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  replystringint_ = 0;
  _internal_metadata_.Clear();
}

bool PSFReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuffer.dotwproto.PSFReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .protobuffer.dotwproto.PSFReply.RoomIndex Results = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_results()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error().data(), static_cast<int>(this->error().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuffer.dotwproto.PSFReply.error"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string errorCode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errorcode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->errorcode().data(), static_cast<int>(this->errorcode().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuffer.dotwproto.PSFReply.errorCode"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string replystring = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_replystring()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->replystring().data(), static_cast<int>(this->replystring().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuffer.dotwproto.PSFReply.replystring"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 replystringInt = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &replystringint_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuffer.dotwproto.PSFReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuffer.dotwproto.PSFReply)
  return false;
#undef DO_
}

void PSFReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuffer.dotwproto.PSFReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .protobuffer.dotwproto.PSFReply.RoomIndex Results = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->results_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->results(static_cast<int>(i)), output);
  }

  // string error = 2;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.PSFReply.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error(), output);
  }

  // string errorCode = 3;
  if (this->errorcode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errorcode().data(), static_cast<int>(this->errorcode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.PSFReply.errorCode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->errorcode(), output);
  }

  // string replystring = 4;
  if (this->replystring().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->replystring().data(), static_cast<int>(this->replystring().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.PSFReply.replystring");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->replystring(), output);
  }

  // int32 replystringInt = 5;
  if (this->replystringint() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->replystringint(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuffer.dotwproto.PSFReply)
}

::google::protobuf::uint8* PSFReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuffer.dotwproto.PSFReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .protobuffer.dotwproto.PSFReply.RoomIndex Results = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->results_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->results(static_cast<int>(i)), deterministic, target);
  }

  // string error = 2;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.PSFReply.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error(), target);
  }

  // string errorCode = 3;
  if (this->errorcode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errorcode().data(), static_cast<int>(this->errorcode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.PSFReply.errorCode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->errorcode(), target);
  }

  // string replystring = 4;
  if (this->replystring().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->replystring().data(), static_cast<int>(this->replystring().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.PSFReply.replystring");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->replystring(), target);
  }

  // int32 replystringInt = 5;
  if (this->replystringint() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->replystringint(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuffer.dotwproto.PSFReply)
  return target;
}

size_t PSFReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuffer.dotwproto.PSFReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .protobuffer.dotwproto.PSFReply.RoomIndex Results = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->results_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->results(static_cast<int>(i)));
    }
  }

  // string error = 2;
  if (this->error().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error());
  }

  // string errorCode = 3;
  if (this->errorcode().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errorcode());
  }

  // string replystring = 4;
  if (this->replystring().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->replystring());
  }

  // int32 replystringInt = 5;
  if (this->replystringint() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->replystringint());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PSFReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuffer.dotwproto.PSFReply)
  GOOGLE_DCHECK_NE(&from, this);
  const PSFReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PSFReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuffer.dotwproto.PSFReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuffer.dotwproto.PSFReply)
    MergeFrom(*source);
  }
}

void PSFReply::MergeFrom(const PSFReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuffer.dotwproto.PSFReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  results_.MergeFrom(from.results_);
  if (from.error().size() > 0) {

    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  if (from.errorcode().size() > 0) {

    errorcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errorcode_);
  }
  if (from.replystring().size() > 0) {

    replystring_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.replystring_);
  }
  if (from.replystringint() != 0) {
    set_replystringint(from.replystringint());
  }
}

void PSFReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuffer.dotwproto.PSFReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PSFReply::CopyFrom(const PSFReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuffer.dotwproto.PSFReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PSFReply::IsInitialized() const {
  return true;
}

void PSFReply::Swap(PSFReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PSFReply::InternalSwap(PSFReply* other) {
  using std::swap;
  results_.InternalSwap(&other->results_);
  error_.Swap(&other->error_);
  errorcode_.Swap(&other->errorcode_);
  replystring_.Swap(&other->replystring_);
  swap(replystringint_, other->replystringint_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PSFReply::GetMetadata() const {
  protobuf_genProto_2fDotw_5fProtoBuf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HDRequest_HotelIds::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HDRequest_HotelIds::kHotelIdFieldNumber;
const int HDRequest_HotelIds::kRoomTypeCodesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HDRequest_HotelIds::HDRequest_HotelIds()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::InitDefaultsHDRequest_HotelIds();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuffer.dotwproto.HDRequest.HotelIds)
}
HDRequest_HotelIds::HDRequest_HotelIds(const HDRequest_HotelIds& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      roomtypecodes_(from.roomtypecodes_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hotelid_ = from.hotelid_;
  // @@protoc_insertion_point(copy_constructor:protobuffer.dotwproto.HDRequest.HotelIds)
}

void HDRequest_HotelIds::SharedCtor() {
  hotelid_ = 0;
  _cached_size_ = 0;
}

HDRequest_HotelIds::~HDRequest_HotelIds() {
  // @@protoc_insertion_point(destructor:protobuffer.dotwproto.HDRequest.HotelIds)
  SharedDtor();
}

void HDRequest_HotelIds::SharedDtor() {
}

void HDRequest_HotelIds::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HDRequest_HotelIds::descriptor() {
  ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HDRequest_HotelIds& HDRequest_HotelIds::default_instance() {
  ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::InitDefaultsHDRequest_HotelIds();
  return *internal_default_instance();
}

HDRequest_HotelIds* HDRequest_HotelIds::New(::google::protobuf::Arena* arena) const {
  HDRequest_HotelIds* n = new HDRequest_HotelIds;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HDRequest_HotelIds::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuffer.dotwproto.HDRequest.HotelIds)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roomtypecodes_.Clear();
  hotelid_ = 0;
  _internal_metadata_.Clear();
}

bool HDRequest_HotelIds::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuffer.dotwproto.HDRequest.HotelIds)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 hotelId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hotelid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 roomTypeCodes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_roomtypecodes())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 18u, input, this->mutable_roomtypecodes())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuffer.dotwproto.HDRequest.HotelIds)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuffer.dotwproto.HDRequest.HotelIds)
  return false;
#undef DO_
}

void HDRequest_HotelIds::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuffer.dotwproto.HDRequest.HotelIds)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 hotelId = 1;
  if (this->hotelid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->hotelid(), output);
  }

  // repeated int32 roomTypeCodes = 2;
  if (this->roomtypecodes_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _roomtypecodes_cached_byte_size_));
  }
  for (int i = 0, n = this->roomtypecodes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->roomtypecodes(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuffer.dotwproto.HDRequest.HotelIds)
}

::google::protobuf::uint8* HDRequest_HotelIds::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuffer.dotwproto.HDRequest.HotelIds)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 hotelId = 1;
  if (this->hotelid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->hotelid(), target);
  }

  // repeated int32 roomTypeCodes = 2;
  if (this->roomtypecodes_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _roomtypecodes_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->roomtypecodes_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuffer.dotwproto.HDRequest.HotelIds)
  return target;
}

size_t HDRequest_HotelIds::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuffer.dotwproto.HDRequest.HotelIds)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 roomTypeCodes = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->roomtypecodes_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _roomtypecodes_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // int32 hotelId = 1;
  if (this->hotelid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->hotelid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HDRequest_HotelIds::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuffer.dotwproto.HDRequest.HotelIds)
  GOOGLE_DCHECK_NE(&from, this);
  const HDRequest_HotelIds* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HDRequest_HotelIds>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuffer.dotwproto.HDRequest.HotelIds)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuffer.dotwproto.HDRequest.HotelIds)
    MergeFrom(*source);
  }
}

void HDRequest_HotelIds::MergeFrom(const HDRequest_HotelIds& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuffer.dotwproto.HDRequest.HotelIds)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  roomtypecodes_.MergeFrom(from.roomtypecodes_);
  if (from.hotelid() != 0) {
    set_hotelid(from.hotelid());
  }
}

void HDRequest_HotelIds::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuffer.dotwproto.HDRequest.HotelIds)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HDRequest_HotelIds::CopyFrom(const HDRequest_HotelIds& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuffer.dotwproto.HDRequest.HotelIds)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HDRequest_HotelIds::IsInitialized() const {
  return true;
}

void HDRequest_HotelIds::Swap(HDRequest_HotelIds* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HDRequest_HotelIds::InternalSwap(HDRequest_HotelIds* other) {
  using std::swap;
  roomtypecodes_.InternalSwap(&other->roomtypecodes_);
  swap(hotelid_, other->hotelid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HDRequest_HotelIds::GetMetadata() const {
  protobuf_genProto_2fDotw_5fProtoBuf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HDRequest_ReturnHotelStaticData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HDRequest_ReturnHotelStaticData::kDescription1FieldNumber;
const int HDRequest_ReturnHotelStaticData::kDescription2FieldNumber;
const int HDRequest_ReturnHotelStaticData::kGeoPointFieldNumber;
const int HDRequest_ReturnHotelStaticData::kRatingDescriptionFieldNumber;
const int HDRequest_ReturnHotelStaticData::kImagesFieldNumber;
const int HDRequest_ReturnHotelStaticData::kDirectFieldNumber;
const int HDRequest_ReturnHotelStaticData::kHotelPreferenceFieldNumber;
const int HDRequest_ReturnHotelStaticData::kBuiltYearFieldNumber;
const int HDRequest_ReturnHotelStaticData::kRenovationYearFieldNumber;
const int HDRequest_ReturnHotelStaticData::kFloorsFieldNumber;
const int HDRequest_ReturnHotelStaticData::kNoOfRoomsFieldNumber;
const int HDRequest_ReturnHotelStaticData::kLuxuryFieldNumber;
const int HDRequest_ReturnHotelStaticData::kAddressFieldNumber;
const int HDRequest_ReturnHotelStaticData::kZipCodeFieldNumber;
const int HDRequest_ReturnHotelStaticData::kLocationFieldNumber;
const int HDRequest_ReturnHotelStaticData::kLocationIdFieldNumber;
const int HDRequest_ReturnHotelStaticData::kLocation1FieldNumber;
const int HDRequest_ReturnHotelStaticData::kLocation2FieldNumber;
const int HDRequest_ReturnHotelStaticData::kLocation3FieldNumber;
const int HDRequest_ReturnHotelStaticData::kStateNameFieldNumber;
const int HDRequest_ReturnHotelStaticData::kStateCodeFieldNumber;
const int HDRequest_ReturnHotelStaticData::kCountryNameFieldNumber;
const int HDRequest_ReturnHotelStaticData::kRegionNameFieldNumber;
const int HDRequest_ReturnHotelStaticData::kRegionCodeFieldNumber;
const int HDRequest_ReturnHotelStaticData::kAmenitieFieldNumber;
const int HDRequest_ReturnHotelStaticData::kLeisureFieldNumber;
const int HDRequest_ReturnHotelStaticData::kBusinessFieldNumber;
const int HDRequest_ReturnHotelStaticData::kTransportationFieldNumber;
const int HDRequest_ReturnHotelStaticData::kHotelPhoneFieldNumber;
const int HDRequest_ReturnHotelStaticData::kHotelCheckInFieldNumber;
const int HDRequest_ReturnHotelStaticData::kHotelCheckOutFieldNumber;
const int HDRequest_ReturnHotelStaticData::kMinAgeFieldNumber;
const int HDRequest_ReturnHotelStaticData::kRatingFieldNumber;
const int HDRequest_ReturnHotelStaticData::kFireSafetyFieldNumber;
const int HDRequest_ReturnHotelStaticData::kChainFieldNumber;
const int HDRequest_ReturnHotelStaticData::kLastUpdatedFieldNumber;
const int HDRequest_ReturnHotelStaticData::kTransferMandatoryFieldNumber;
const int HDRequest_ReturnHotelStaticData::kTariffNotesFieldNumber;
const int HDRequest_ReturnHotelStaticData::kChainNameFieldNumber;
const int HDRequest_ReturnHotelStaticData::kHotelPropertyFieldNumber;
const int HDRequest_ReturnHotelStaticData::kFullAddressFieldNumber;
const int HDRequest_ReturnHotelStaticData::kExclusiveFieldNumber;
const int HDRequest_ReturnHotelStaticData::kAttractionFieldNumber;
const int HDRequest_ReturnHotelStaticData::kAreaCodeFieldNumber;
const int HDRequest_ReturnHotelStaticData::kAreaNameFieldNumber;
const int HDRequest_ReturnHotelStaticData::kGeoLocationsFieldNumber;
const int HDRequest_ReturnHotelStaticData::kPriorityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HDRequest_ReturnHotelStaticData::HDRequest_ReturnHotelStaticData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::InitDefaultsHDRequest_ReturnHotelStaticData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuffer.dotwproto.HDRequest.ReturnHotelStaticData)
}
HDRequest_ReturnHotelStaticData::HDRequest_ReturnHotelStaticData(const HDRequest_ReturnHotelStaticData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&description1_, &from.description1_,
    static_cast<size_t>(reinterpret_cast<char*>(&priority_) -
    reinterpret_cast<char*>(&description1_)) + sizeof(priority_));
  // @@protoc_insertion_point(copy_constructor:protobuffer.dotwproto.HDRequest.ReturnHotelStaticData)
}

void HDRequest_ReturnHotelStaticData::SharedCtor() {
  ::memset(&description1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&priority_) -
      reinterpret_cast<char*>(&description1_)) + sizeof(priority_));
  _cached_size_ = 0;
}

HDRequest_ReturnHotelStaticData::~HDRequest_ReturnHotelStaticData() {
  // @@protoc_insertion_point(destructor:protobuffer.dotwproto.HDRequest.ReturnHotelStaticData)
  SharedDtor();
}

void HDRequest_ReturnHotelStaticData::SharedDtor() {
}

void HDRequest_ReturnHotelStaticData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HDRequest_ReturnHotelStaticData::descriptor() {
  ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HDRequest_ReturnHotelStaticData& HDRequest_ReturnHotelStaticData::default_instance() {
  ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::InitDefaultsHDRequest_ReturnHotelStaticData();
  return *internal_default_instance();
}

HDRequest_ReturnHotelStaticData* HDRequest_ReturnHotelStaticData::New(::google::protobuf::Arena* arena) const {
  HDRequest_ReturnHotelStaticData* n = new HDRequest_ReturnHotelStaticData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HDRequest_ReturnHotelStaticData::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuffer.dotwproto.HDRequest.ReturnHotelStaticData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&description1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&priority_) -
      reinterpret_cast<char*>(&description1_)) + sizeof(priority_));
  _internal_metadata_.Clear();
}

bool HDRequest_ReturnHotelStaticData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuffer.dotwproto.HDRequest.ReturnHotelStaticData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool description1 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &description1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool description2 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &description2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool geoPoint = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &geopoint_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool ratingDescription = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ratingdescription_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool images = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &images_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool direct = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &direct_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool hotelPreference = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &hotelpreference_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool builtYear = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &builtyear_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool renovationYear = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &renovationyear_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool floors = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &floors_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool noOfRooms = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &noofrooms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool luxury = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &luxury_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool address = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &address_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool zipCode = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &zipcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool location = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &location_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool locationId = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &locationid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool location1 = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &location1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool location2 = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &location2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool location3 = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &location3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool stateName = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &statename_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool stateCode = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &statecode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool countryName = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &countryname_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool regionName = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 184 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &regionname_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool regionCode = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 192 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &regioncode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool amenitie = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u /* 200 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &amenitie_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool leisure = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(208u /* 208 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &leisure_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool business = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(216u /* 216 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &business_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool transportation = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(224u /* 224 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &transportation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool hotelPhone = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(232u /* 232 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &hotelphone_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool hotelCheckIn = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 240 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &hotelcheckin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool hotelCheckOut = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(248u /* 248 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &hotelcheckout_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool minAge = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(0u /* 256 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &minage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool rating = 33;
      case 33: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 264 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &rating_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool fireSafety = 34;
      case 34: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 272 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &firesafety_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool chain = 35;
      case 35: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 280 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &chain_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool lastUpdated = 36;
      case 36: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 288 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &lastupdated_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool transferMandatory = 37;
      case 37: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 296 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &transfermandatory_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool tariffNotes = 38;
      case 38: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 304 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &tariffnotes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool chainName = 39;
      case 39: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 312 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &chainname_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool hotelProperty = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 320 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &hotelproperty_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool fullAddress = 41;
      case 41: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 328 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &fulladdress_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool exclusive = 42;
      case 42: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 336 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &exclusive_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool attraction = 43;
      case 43: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 344 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &attraction_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool areaCode = 44;
      case 44: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 352 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &areacode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool areaName = 45;
      case 45: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 360 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &areaname_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool geoLocations = 46;
      case 46: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 368 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &geolocations_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool priority = 47;
      case 47: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 376 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &priority_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuffer.dotwproto.HDRequest.ReturnHotelStaticData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuffer.dotwproto.HDRequest.ReturnHotelStaticData)
  return false;
#undef DO_
}

void HDRequest_ReturnHotelStaticData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuffer.dotwproto.HDRequest.ReturnHotelStaticData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool description1 = 1;
  if (this->description1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->description1(), output);
  }

  // bool description2 = 2;
  if (this->description2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->description2(), output);
  }

  // bool geoPoint = 3;
  if (this->geopoint() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->geopoint(), output);
  }

  // bool ratingDescription = 4;
  if (this->ratingdescription() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->ratingdescription(), output);
  }

  // bool images = 5;
  if (this->images() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->images(), output);
  }

  // bool direct = 6;
  if (this->direct() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->direct(), output);
  }

  // bool hotelPreference = 7;
  if (this->hotelpreference() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->hotelpreference(), output);
  }

  // bool builtYear = 8;
  if (this->builtyear() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->builtyear(), output);
  }

  // bool renovationYear = 9;
  if (this->renovationyear() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->renovationyear(), output);
  }

  // bool floors = 10;
  if (this->floors() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->floors(), output);
  }

  // bool noOfRooms = 11;
  if (this->noofrooms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->noofrooms(), output);
  }

  // bool luxury = 12;
  if (this->luxury() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->luxury(), output);
  }

  // bool address = 13;
  if (this->address() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->address(), output);
  }

  // bool zipCode = 14;
  if (this->zipcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(14, this->zipcode(), output);
  }

  // bool location = 15;
  if (this->location() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(15, this->location(), output);
  }

  // bool locationId = 16;
  if (this->locationid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(16, this->locationid(), output);
  }

  // bool location1 = 17;
  if (this->location1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(17, this->location1(), output);
  }

  // bool location2 = 18;
  if (this->location2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(18, this->location2(), output);
  }

  // bool location3 = 19;
  if (this->location3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(19, this->location3(), output);
  }

  // bool stateName = 20;
  if (this->statename() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(20, this->statename(), output);
  }

  // bool stateCode = 21;
  if (this->statecode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(21, this->statecode(), output);
  }

  // bool countryName = 22;
  if (this->countryname() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(22, this->countryname(), output);
  }

  // bool regionName = 23;
  if (this->regionname() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(23, this->regionname(), output);
  }

  // bool regionCode = 24;
  if (this->regioncode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(24, this->regioncode(), output);
  }

  // bool amenitie = 25;
  if (this->amenitie() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(25, this->amenitie(), output);
  }

  // bool leisure = 26;
  if (this->leisure() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(26, this->leisure(), output);
  }

  // bool business = 27;
  if (this->business() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(27, this->business(), output);
  }

  // bool transportation = 28;
  if (this->transportation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(28, this->transportation(), output);
  }

  // bool hotelPhone = 29;
  if (this->hotelphone() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(29, this->hotelphone(), output);
  }

  // bool hotelCheckIn = 30;
  if (this->hotelcheckin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(30, this->hotelcheckin(), output);
  }

  // bool hotelCheckOut = 31;
  if (this->hotelcheckout() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(31, this->hotelcheckout(), output);
  }

  // bool minAge = 32;
  if (this->minage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(32, this->minage(), output);
  }

  // bool rating = 33;
  if (this->rating() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(33, this->rating(), output);
  }

  // bool fireSafety = 34;
  if (this->firesafety() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(34, this->firesafety(), output);
  }

  // bool chain = 35;
  if (this->chain() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(35, this->chain(), output);
  }

  // bool lastUpdated = 36;
  if (this->lastupdated() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(36, this->lastupdated(), output);
  }

  // bool transferMandatory = 37;
  if (this->transfermandatory() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(37, this->transfermandatory(), output);
  }

  // bool tariffNotes = 38;
  if (this->tariffnotes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(38, this->tariffnotes(), output);
  }

  // bool chainName = 39;
  if (this->chainname() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(39, this->chainname(), output);
  }

  // bool hotelProperty = 40;
  if (this->hotelproperty() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(40, this->hotelproperty(), output);
  }

  // bool fullAddress = 41;
  if (this->fulladdress() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(41, this->fulladdress(), output);
  }

  // bool exclusive = 42;
  if (this->exclusive() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(42, this->exclusive(), output);
  }

  // bool attraction = 43;
  if (this->attraction() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(43, this->attraction(), output);
  }

  // bool areaCode = 44;
  if (this->areacode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(44, this->areacode(), output);
  }

  // bool areaName = 45;
  if (this->areaname() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(45, this->areaname(), output);
  }

  // bool geoLocations = 46;
  if (this->geolocations() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(46, this->geolocations(), output);
  }

  // bool priority = 47;
  if (this->priority() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(47, this->priority(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuffer.dotwproto.HDRequest.ReturnHotelStaticData)
}

::google::protobuf::uint8* HDRequest_ReturnHotelStaticData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuffer.dotwproto.HDRequest.ReturnHotelStaticData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool description1 = 1;
  if (this->description1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->description1(), target);
  }

  // bool description2 = 2;
  if (this->description2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->description2(), target);
  }

  // bool geoPoint = 3;
  if (this->geopoint() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->geopoint(), target);
  }

  // bool ratingDescription = 4;
  if (this->ratingdescription() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->ratingdescription(), target);
  }

  // bool images = 5;
  if (this->images() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->images(), target);
  }

  // bool direct = 6;
  if (this->direct() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->direct(), target);
  }

  // bool hotelPreference = 7;
  if (this->hotelpreference() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->hotelpreference(), target);
  }

  // bool builtYear = 8;
  if (this->builtyear() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->builtyear(), target);
  }

  // bool renovationYear = 9;
  if (this->renovationyear() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->renovationyear(), target);
  }

  // bool floors = 10;
  if (this->floors() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->floors(), target);
  }

  // bool noOfRooms = 11;
  if (this->noofrooms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->noofrooms(), target);
  }

  // bool luxury = 12;
  if (this->luxury() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->luxury(), target);
  }

  // bool address = 13;
  if (this->address() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->address(), target);
  }

  // bool zipCode = 14;
  if (this->zipcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(14, this->zipcode(), target);
  }

  // bool location = 15;
  if (this->location() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(15, this->location(), target);
  }

  // bool locationId = 16;
  if (this->locationid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(16, this->locationid(), target);
  }

  // bool location1 = 17;
  if (this->location1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(17, this->location1(), target);
  }

  // bool location2 = 18;
  if (this->location2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(18, this->location2(), target);
  }

  // bool location3 = 19;
  if (this->location3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(19, this->location3(), target);
  }

  // bool stateName = 20;
  if (this->statename() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(20, this->statename(), target);
  }

  // bool stateCode = 21;
  if (this->statecode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(21, this->statecode(), target);
  }

  // bool countryName = 22;
  if (this->countryname() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(22, this->countryname(), target);
  }

  // bool regionName = 23;
  if (this->regionname() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(23, this->regionname(), target);
  }

  // bool regionCode = 24;
  if (this->regioncode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(24, this->regioncode(), target);
  }

  // bool amenitie = 25;
  if (this->amenitie() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(25, this->amenitie(), target);
  }

  // bool leisure = 26;
  if (this->leisure() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(26, this->leisure(), target);
  }

  // bool business = 27;
  if (this->business() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(27, this->business(), target);
  }

  // bool transportation = 28;
  if (this->transportation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(28, this->transportation(), target);
  }

  // bool hotelPhone = 29;
  if (this->hotelphone() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(29, this->hotelphone(), target);
  }

  // bool hotelCheckIn = 30;
  if (this->hotelcheckin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(30, this->hotelcheckin(), target);
  }

  // bool hotelCheckOut = 31;
  if (this->hotelcheckout() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(31, this->hotelcheckout(), target);
  }

  // bool minAge = 32;
  if (this->minage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(32, this->minage(), target);
  }

  // bool rating = 33;
  if (this->rating() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(33, this->rating(), target);
  }

  // bool fireSafety = 34;
  if (this->firesafety() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(34, this->firesafety(), target);
  }

  // bool chain = 35;
  if (this->chain() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(35, this->chain(), target);
  }

  // bool lastUpdated = 36;
  if (this->lastupdated() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(36, this->lastupdated(), target);
  }

  // bool transferMandatory = 37;
  if (this->transfermandatory() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(37, this->transfermandatory(), target);
  }

  // bool tariffNotes = 38;
  if (this->tariffnotes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(38, this->tariffnotes(), target);
  }

  // bool chainName = 39;
  if (this->chainname() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(39, this->chainname(), target);
  }

  // bool hotelProperty = 40;
  if (this->hotelproperty() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(40, this->hotelproperty(), target);
  }

  // bool fullAddress = 41;
  if (this->fulladdress() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(41, this->fulladdress(), target);
  }

  // bool exclusive = 42;
  if (this->exclusive() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(42, this->exclusive(), target);
  }

  // bool attraction = 43;
  if (this->attraction() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(43, this->attraction(), target);
  }

  // bool areaCode = 44;
  if (this->areacode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(44, this->areacode(), target);
  }

  // bool areaName = 45;
  if (this->areaname() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(45, this->areaname(), target);
  }

  // bool geoLocations = 46;
  if (this->geolocations() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(46, this->geolocations(), target);
  }

  // bool priority = 47;
  if (this->priority() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(47, this->priority(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuffer.dotwproto.HDRequest.ReturnHotelStaticData)
  return target;
}

size_t HDRequest_ReturnHotelStaticData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuffer.dotwproto.HDRequest.ReturnHotelStaticData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool description1 = 1;
  if (this->description1() != 0) {
    total_size += 1 + 1;
  }

  // bool description2 = 2;
  if (this->description2() != 0) {
    total_size += 1 + 1;
  }

  // bool geoPoint = 3;
  if (this->geopoint() != 0) {
    total_size += 1 + 1;
  }

  // bool ratingDescription = 4;
  if (this->ratingdescription() != 0) {
    total_size += 1 + 1;
  }

  // bool images = 5;
  if (this->images() != 0) {
    total_size += 1 + 1;
  }

  // bool direct = 6;
  if (this->direct() != 0) {
    total_size += 1 + 1;
  }

  // bool hotelPreference = 7;
  if (this->hotelpreference() != 0) {
    total_size += 1 + 1;
  }

  // bool builtYear = 8;
  if (this->builtyear() != 0) {
    total_size += 1 + 1;
  }

  // bool renovationYear = 9;
  if (this->renovationyear() != 0) {
    total_size += 1 + 1;
  }

  // bool floors = 10;
  if (this->floors() != 0) {
    total_size += 1 + 1;
  }

  // bool noOfRooms = 11;
  if (this->noofrooms() != 0) {
    total_size += 1 + 1;
  }

  // bool luxury = 12;
  if (this->luxury() != 0) {
    total_size += 1 + 1;
  }

  // bool address = 13;
  if (this->address() != 0) {
    total_size += 1 + 1;
  }

  // bool zipCode = 14;
  if (this->zipcode() != 0) {
    total_size += 1 + 1;
  }

  // bool location = 15;
  if (this->location() != 0) {
    total_size += 1 + 1;
  }

  // bool locationId = 16;
  if (this->locationid() != 0) {
    total_size += 2 + 1;
  }

  // bool location1 = 17;
  if (this->location1() != 0) {
    total_size += 2 + 1;
  }

  // bool location2 = 18;
  if (this->location2() != 0) {
    total_size += 2 + 1;
  }

  // bool location3 = 19;
  if (this->location3() != 0) {
    total_size += 2 + 1;
  }

  // bool stateName = 20;
  if (this->statename() != 0) {
    total_size += 2 + 1;
  }

  // bool stateCode = 21;
  if (this->statecode() != 0) {
    total_size += 2 + 1;
  }

  // bool countryName = 22;
  if (this->countryname() != 0) {
    total_size += 2 + 1;
  }

  // bool regionName = 23;
  if (this->regionname() != 0) {
    total_size += 2 + 1;
  }

  // bool regionCode = 24;
  if (this->regioncode() != 0) {
    total_size += 2 + 1;
  }

  // bool amenitie = 25;
  if (this->amenitie() != 0) {
    total_size += 2 + 1;
  }

  // bool leisure = 26;
  if (this->leisure() != 0) {
    total_size += 2 + 1;
  }

  // bool business = 27;
  if (this->business() != 0) {
    total_size += 2 + 1;
  }

  // bool transportation = 28;
  if (this->transportation() != 0) {
    total_size += 2 + 1;
  }

  // bool hotelPhone = 29;
  if (this->hotelphone() != 0) {
    total_size += 2 + 1;
  }

  // bool hotelCheckIn = 30;
  if (this->hotelcheckin() != 0) {
    total_size += 2 + 1;
  }

  // bool hotelCheckOut = 31;
  if (this->hotelcheckout() != 0) {
    total_size += 2 + 1;
  }

  // bool minAge = 32;
  if (this->minage() != 0) {
    total_size += 2 + 1;
  }

  // bool rating = 33;
  if (this->rating() != 0) {
    total_size += 2 + 1;
  }

  // bool fireSafety = 34;
  if (this->firesafety() != 0) {
    total_size += 2 + 1;
  }

  // bool chain = 35;
  if (this->chain() != 0) {
    total_size += 2 + 1;
  }

  // bool lastUpdated = 36;
  if (this->lastupdated() != 0) {
    total_size += 2 + 1;
  }

  // bool transferMandatory = 37;
  if (this->transfermandatory() != 0) {
    total_size += 2 + 1;
  }

  // bool tariffNotes = 38;
  if (this->tariffnotes() != 0) {
    total_size += 2 + 1;
  }

  // bool chainName = 39;
  if (this->chainname() != 0) {
    total_size += 2 + 1;
  }

  // bool hotelProperty = 40;
  if (this->hotelproperty() != 0) {
    total_size += 2 + 1;
  }

  // bool fullAddress = 41;
  if (this->fulladdress() != 0) {
    total_size += 2 + 1;
  }

  // bool exclusive = 42;
  if (this->exclusive() != 0) {
    total_size += 2 + 1;
  }

  // bool attraction = 43;
  if (this->attraction() != 0) {
    total_size += 2 + 1;
  }

  // bool areaCode = 44;
  if (this->areacode() != 0) {
    total_size += 2 + 1;
  }

  // bool areaName = 45;
  if (this->areaname() != 0) {
    total_size += 2 + 1;
  }

  // bool geoLocations = 46;
  if (this->geolocations() != 0) {
    total_size += 2 + 1;
  }

  // bool priority = 47;
  if (this->priority() != 0) {
    total_size += 2 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HDRequest_ReturnHotelStaticData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuffer.dotwproto.HDRequest.ReturnHotelStaticData)
  GOOGLE_DCHECK_NE(&from, this);
  const HDRequest_ReturnHotelStaticData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HDRequest_ReturnHotelStaticData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuffer.dotwproto.HDRequest.ReturnHotelStaticData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuffer.dotwproto.HDRequest.ReturnHotelStaticData)
    MergeFrom(*source);
  }
}

void HDRequest_ReturnHotelStaticData::MergeFrom(const HDRequest_ReturnHotelStaticData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuffer.dotwproto.HDRequest.ReturnHotelStaticData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.description1() != 0) {
    set_description1(from.description1());
  }
  if (from.description2() != 0) {
    set_description2(from.description2());
  }
  if (from.geopoint() != 0) {
    set_geopoint(from.geopoint());
  }
  if (from.ratingdescription() != 0) {
    set_ratingdescription(from.ratingdescription());
  }
  if (from.images() != 0) {
    set_images(from.images());
  }
  if (from.direct() != 0) {
    set_direct(from.direct());
  }
  if (from.hotelpreference() != 0) {
    set_hotelpreference(from.hotelpreference());
  }
  if (from.builtyear() != 0) {
    set_builtyear(from.builtyear());
  }
  if (from.renovationyear() != 0) {
    set_renovationyear(from.renovationyear());
  }
  if (from.floors() != 0) {
    set_floors(from.floors());
  }
  if (from.noofrooms() != 0) {
    set_noofrooms(from.noofrooms());
  }
  if (from.luxury() != 0) {
    set_luxury(from.luxury());
  }
  if (from.address() != 0) {
    set_address(from.address());
  }
  if (from.zipcode() != 0) {
    set_zipcode(from.zipcode());
  }
  if (from.location() != 0) {
    set_location(from.location());
  }
  if (from.locationid() != 0) {
    set_locationid(from.locationid());
  }
  if (from.location1() != 0) {
    set_location1(from.location1());
  }
  if (from.location2() != 0) {
    set_location2(from.location2());
  }
  if (from.location3() != 0) {
    set_location3(from.location3());
  }
  if (from.statename() != 0) {
    set_statename(from.statename());
  }
  if (from.statecode() != 0) {
    set_statecode(from.statecode());
  }
  if (from.countryname() != 0) {
    set_countryname(from.countryname());
  }
  if (from.regionname() != 0) {
    set_regionname(from.regionname());
  }
  if (from.regioncode() != 0) {
    set_regioncode(from.regioncode());
  }
  if (from.amenitie() != 0) {
    set_amenitie(from.amenitie());
  }
  if (from.leisure() != 0) {
    set_leisure(from.leisure());
  }
  if (from.business() != 0) {
    set_business(from.business());
  }
  if (from.transportation() != 0) {
    set_transportation(from.transportation());
  }
  if (from.hotelphone() != 0) {
    set_hotelphone(from.hotelphone());
  }
  if (from.hotelcheckin() != 0) {
    set_hotelcheckin(from.hotelcheckin());
  }
  if (from.hotelcheckout() != 0) {
    set_hotelcheckout(from.hotelcheckout());
  }
  if (from.minage() != 0) {
    set_minage(from.minage());
  }
  if (from.rating() != 0) {
    set_rating(from.rating());
  }
  if (from.firesafety() != 0) {
    set_firesafety(from.firesafety());
  }
  if (from.chain() != 0) {
    set_chain(from.chain());
  }
  if (from.lastupdated() != 0) {
    set_lastupdated(from.lastupdated());
  }
  if (from.transfermandatory() != 0) {
    set_transfermandatory(from.transfermandatory());
  }
  if (from.tariffnotes() != 0) {
    set_tariffnotes(from.tariffnotes());
  }
  if (from.chainname() != 0) {
    set_chainname(from.chainname());
  }
  if (from.hotelproperty() != 0) {
    set_hotelproperty(from.hotelproperty());
  }
  if (from.fulladdress() != 0) {
    set_fulladdress(from.fulladdress());
  }
  if (from.exclusive() != 0) {
    set_exclusive(from.exclusive());
  }
  if (from.attraction() != 0) {
    set_attraction(from.attraction());
  }
  if (from.areacode() != 0) {
    set_areacode(from.areacode());
  }
  if (from.areaname() != 0) {
    set_areaname(from.areaname());
  }
  if (from.geolocations() != 0) {
    set_geolocations(from.geolocations());
  }
  if (from.priority() != 0) {
    set_priority(from.priority());
  }
}

void HDRequest_ReturnHotelStaticData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuffer.dotwproto.HDRequest.ReturnHotelStaticData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HDRequest_ReturnHotelStaticData::CopyFrom(const HDRequest_ReturnHotelStaticData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuffer.dotwproto.HDRequest.ReturnHotelStaticData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HDRequest_ReturnHotelStaticData::IsInitialized() const {
  return true;
}

void HDRequest_ReturnHotelStaticData::Swap(HDRequest_ReturnHotelStaticData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HDRequest_ReturnHotelStaticData::InternalSwap(HDRequest_ReturnHotelStaticData* other) {
  using std::swap;
  swap(description1_, other->description1_);
  swap(description2_, other->description2_);
  swap(geopoint_, other->geopoint_);
  swap(ratingdescription_, other->ratingdescription_);
  swap(images_, other->images_);
  swap(direct_, other->direct_);
  swap(hotelpreference_, other->hotelpreference_);
  swap(builtyear_, other->builtyear_);
  swap(renovationyear_, other->renovationyear_);
  swap(floors_, other->floors_);
  swap(noofrooms_, other->noofrooms_);
  swap(luxury_, other->luxury_);
  swap(address_, other->address_);
  swap(zipcode_, other->zipcode_);
  swap(location_, other->location_);
  swap(locationid_, other->locationid_);
  swap(location1_, other->location1_);
  swap(location2_, other->location2_);
  swap(location3_, other->location3_);
  swap(statename_, other->statename_);
  swap(statecode_, other->statecode_);
  swap(countryname_, other->countryname_);
  swap(regionname_, other->regionname_);
  swap(regioncode_, other->regioncode_);
  swap(amenitie_, other->amenitie_);
  swap(leisure_, other->leisure_);
  swap(business_, other->business_);
  swap(transportation_, other->transportation_);
  swap(hotelphone_, other->hotelphone_);
  swap(hotelcheckin_, other->hotelcheckin_);
  swap(hotelcheckout_, other->hotelcheckout_);
  swap(minage_, other->minage_);
  swap(rating_, other->rating_);
  swap(firesafety_, other->firesafety_);
  swap(chain_, other->chain_);
  swap(lastupdated_, other->lastupdated_);
  swap(transfermandatory_, other->transfermandatory_);
  swap(tariffnotes_, other->tariffnotes_);
  swap(chainname_, other->chainname_);
  swap(hotelproperty_, other->hotelproperty_);
  swap(fulladdress_, other->fulladdress_);
  swap(exclusive_, other->exclusive_);
  swap(attraction_, other->attraction_);
  swap(areacode_, other->areacode_);
  swap(areaname_, other->areaname_);
  swap(geolocations_, other->geolocations_);
  swap(priority_, other->priority_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HDRequest_ReturnHotelStaticData::GetMetadata() const {
  protobuf_genProto_2fDotw_5fProtoBuf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HDRequest_ReturnRoomTypeStaticData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HDRequest_ReturnRoomTypeStaticData::kRoomAmenitiesFieldNumber;
const int HDRequest_ReturnRoomTypeStaticData::kNameFieldNumber;
const int HDRequest_ReturnRoomTypeStaticData::kSupplierRoomNameFieldNumber;
const int HDRequest_ReturnRoomTypeStaticData::kTwinFieldNumber;
const int HDRequest_ReturnRoomTypeStaticData::kRoomInfoFieldNumber;
const int HDRequest_ReturnRoomTypeStaticData::kSpecialsFieldNumber;
const int HDRequest_ReturnRoomTypeStaticData::kRoomImagesFieldNumber;
const int HDRequest_ReturnRoomTypeStaticData::kRoomCategoryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HDRequest_ReturnRoomTypeStaticData::HDRequest_ReturnRoomTypeStaticData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::InitDefaultsHDRequest_ReturnRoomTypeStaticData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuffer.dotwproto.HDRequest.ReturnRoomTypeStaticData)
}
HDRequest_ReturnRoomTypeStaticData::HDRequest_ReturnRoomTypeStaticData(const HDRequest_ReturnRoomTypeStaticData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&roomamenities_, &from.roomamenities_,
    static_cast<size_t>(reinterpret_cast<char*>(&roomcategory_) -
    reinterpret_cast<char*>(&roomamenities_)) + sizeof(roomcategory_));
  // @@protoc_insertion_point(copy_constructor:protobuffer.dotwproto.HDRequest.ReturnRoomTypeStaticData)
}

void HDRequest_ReturnRoomTypeStaticData::SharedCtor() {
  ::memset(&roomamenities_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&roomcategory_) -
      reinterpret_cast<char*>(&roomamenities_)) + sizeof(roomcategory_));
  _cached_size_ = 0;
}

HDRequest_ReturnRoomTypeStaticData::~HDRequest_ReturnRoomTypeStaticData() {
  // @@protoc_insertion_point(destructor:protobuffer.dotwproto.HDRequest.ReturnRoomTypeStaticData)
  SharedDtor();
}

void HDRequest_ReturnRoomTypeStaticData::SharedDtor() {
}

void HDRequest_ReturnRoomTypeStaticData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HDRequest_ReturnRoomTypeStaticData::descriptor() {
  ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HDRequest_ReturnRoomTypeStaticData& HDRequest_ReturnRoomTypeStaticData::default_instance() {
  ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::InitDefaultsHDRequest_ReturnRoomTypeStaticData();
  return *internal_default_instance();
}

HDRequest_ReturnRoomTypeStaticData* HDRequest_ReturnRoomTypeStaticData::New(::google::protobuf::Arena* arena) const {
  HDRequest_ReturnRoomTypeStaticData* n = new HDRequest_ReturnRoomTypeStaticData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HDRequest_ReturnRoomTypeStaticData::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuffer.dotwproto.HDRequest.ReturnRoomTypeStaticData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&roomamenities_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&roomcategory_) -
      reinterpret_cast<char*>(&roomamenities_)) + sizeof(roomcategory_));
  _internal_metadata_.Clear();
}

bool HDRequest_ReturnRoomTypeStaticData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuffer.dotwproto.HDRequest.ReturnRoomTypeStaticData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool roomAmenities = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &roomamenities_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &name_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool supplierRoomName = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &supplierroomname_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool twin = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &twin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool roomInfo = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &roominfo_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool specials = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &specials_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool roomImages = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &roomimages_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool roomCategory = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &roomcategory_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuffer.dotwproto.HDRequest.ReturnRoomTypeStaticData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuffer.dotwproto.HDRequest.ReturnRoomTypeStaticData)
  return false;
#undef DO_
}

void HDRequest_ReturnRoomTypeStaticData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuffer.dotwproto.HDRequest.ReturnRoomTypeStaticData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool roomAmenities = 1;
  if (this->roomamenities() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->roomamenities(), output);
  }

  // bool name = 2;
  if (this->name() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->name(), output);
  }

  // bool supplierRoomName = 3;
  if (this->supplierroomname() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->supplierroomname(), output);
  }

  // bool twin = 4;
  if (this->twin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->twin(), output);
  }

  // bool roomInfo = 5;
  if (this->roominfo() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->roominfo(), output);
  }

  // bool specials = 6;
  if (this->specials() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->specials(), output);
  }

  // bool roomImages = 7;
  if (this->roomimages() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->roomimages(), output);
  }

  // bool roomCategory = 8;
  if (this->roomcategory() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->roomcategory(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuffer.dotwproto.HDRequest.ReturnRoomTypeStaticData)
}

::google::protobuf::uint8* HDRequest_ReturnRoomTypeStaticData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuffer.dotwproto.HDRequest.ReturnRoomTypeStaticData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool roomAmenities = 1;
  if (this->roomamenities() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->roomamenities(), target);
  }

  // bool name = 2;
  if (this->name() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->name(), target);
  }

  // bool supplierRoomName = 3;
  if (this->supplierroomname() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->supplierroomname(), target);
  }

  // bool twin = 4;
  if (this->twin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->twin(), target);
  }

  // bool roomInfo = 5;
  if (this->roominfo() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->roominfo(), target);
  }

  // bool specials = 6;
  if (this->specials() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->specials(), target);
  }

  // bool roomImages = 7;
  if (this->roomimages() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->roomimages(), target);
  }

  // bool roomCategory = 8;
  if (this->roomcategory() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->roomcategory(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuffer.dotwproto.HDRequest.ReturnRoomTypeStaticData)
  return target;
}

size_t HDRequest_ReturnRoomTypeStaticData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuffer.dotwproto.HDRequest.ReturnRoomTypeStaticData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool roomAmenities = 1;
  if (this->roomamenities() != 0) {
    total_size += 1 + 1;
  }

  // bool name = 2;
  if (this->name() != 0) {
    total_size += 1 + 1;
  }

  // bool supplierRoomName = 3;
  if (this->supplierroomname() != 0) {
    total_size += 1 + 1;
  }

  // bool twin = 4;
  if (this->twin() != 0) {
    total_size += 1 + 1;
  }

  // bool roomInfo = 5;
  if (this->roominfo() != 0) {
    total_size += 1 + 1;
  }

  // bool specials = 6;
  if (this->specials() != 0) {
    total_size += 1 + 1;
  }

  // bool roomImages = 7;
  if (this->roomimages() != 0) {
    total_size += 1 + 1;
  }

  // bool roomCategory = 8;
  if (this->roomcategory() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HDRequest_ReturnRoomTypeStaticData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuffer.dotwproto.HDRequest.ReturnRoomTypeStaticData)
  GOOGLE_DCHECK_NE(&from, this);
  const HDRequest_ReturnRoomTypeStaticData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HDRequest_ReturnRoomTypeStaticData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuffer.dotwproto.HDRequest.ReturnRoomTypeStaticData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuffer.dotwproto.HDRequest.ReturnRoomTypeStaticData)
    MergeFrom(*source);
  }
}

void HDRequest_ReturnRoomTypeStaticData::MergeFrom(const HDRequest_ReturnRoomTypeStaticData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuffer.dotwproto.HDRequest.ReturnRoomTypeStaticData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roomamenities() != 0) {
    set_roomamenities(from.roomamenities());
  }
  if (from.name() != 0) {
    set_name(from.name());
  }
  if (from.supplierroomname() != 0) {
    set_supplierroomname(from.supplierroomname());
  }
  if (from.twin() != 0) {
    set_twin(from.twin());
  }
  if (from.roominfo() != 0) {
    set_roominfo(from.roominfo());
  }
  if (from.specials() != 0) {
    set_specials(from.specials());
  }
  if (from.roomimages() != 0) {
    set_roomimages(from.roomimages());
  }
  if (from.roomcategory() != 0) {
    set_roomcategory(from.roomcategory());
  }
}

void HDRequest_ReturnRoomTypeStaticData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuffer.dotwproto.HDRequest.ReturnRoomTypeStaticData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HDRequest_ReturnRoomTypeStaticData::CopyFrom(const HDRequest_ReturnRoomTypeStaticData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuffer.dotwproto.HDRequest.ReturnRoomTypeStaticData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HDRequest_ReturnRoomTypeStaticData::IsInitialized() const {
  return true;
}

void HDRequest_ReturnRoomTypeStaticData::Swap(HDRequest_ReturnRoomTypeStaticData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HDRequest_ReturnRoomTypeStaticData::InternalSwap(HDRequest_ReturnRoomTypeStaticData* other) {
  using std::swap;
  swap(roomamenities_, other->roomamenities_);
  swap(name_, other->name_);
  swap(supplierroomname_, other->supplierroomname_);
  swap(twin_, other->twin_);
  swap(roominfo_, other->roominfo_);
  swap(specials_, other->specials_);
  swap(roomimages_, other->roomimages_);
  swap(roomcategory_, other->roomcategory_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HDRequest_ReturnRoomTypeStaticData::GetMetadata() const {
  protobuf_genProto_2fDotw_5fProtoBuf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HDRequest_ReturnRateData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HDRequest_ReturnRateData::kOccupancyFieldNumber;
const int HDRequest_ReturnRateData::kStatusFieldNumber;
const int HDRequest_ReturnRateData::kRateTypeFieldNumber;
const int HDRequest_ReturnRateData::kPaymentModeFieldNumber;
const int HDRequest_ReturnRateData::kAllowsExtraMealsFieldNumber;
const int HDRequest_ReturnRateData::kAllowsSpecialRequestsFieldNumber;
const int HDRequest_ReturnRateData::kAllowsBeddingPreferenceFieldNumber;
const int HDRequest_ReturnRateData::kAllowsSpecialsFieldNumber;
const int HDRequest_ReturnRateData::kPassengerNamesRequiredForBookingFieldNumber;
const int HDRequest_ReturnRateData::kAllocationDetailsFieldNumber;
const int HDRequest_ReturnRateData::kMinStayFieldNumber;
const int HDRequest_ReturnRateData::kDateApplyMinStayFieldNumber;
const int HDRequest_ReturnRateData::kCancellationRulesFieldNumber;
const int HDRequest_ReturnRateData::kWithinCancellationDeadlineFieldNumber;
const int HDRequest_ReturnRateData::kTariffNotesFieldNumber;
const int HDRequest_ReturnRateData::kIsBookableFieldNumber;
const int HDRequest_ReturnRateData::kOnRequestFieldNumber;
const int HDRequest_ReturnRateData::kTotalFieldNumber;
const int HDRequest_ReturnRateData::kDatesFieldNumber;
const int HDRequest_ReturnRateData::kFreeStayFieldNumber;
const int HDRequest_ReturnRateData::kDiscountFieldNumber;
const int HDRequest_ReturnRateData::kDayOnRequestFieldNumber;
const int HDRequest_ReturnRateData::kIncludingFieldNumber;
const int HDRequest_ReturnRateData::kDailyLeftToSellFieldNumber;
const int HDRequest_ReturnRateData::kDailyMinStayFieldNumber;
const int HDRequest_ReturnRateData::kLeftToSellFieldNumber;
const int HDRequest_ReturnRateData::kSpecialsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HDRequest_ReturnRateData::HDRequest_ReturnRateData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::InitDefaultsHDRequest_ReturnRateData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuffer.dotwproto.HDRequest.ReturnRateData)
}
HDRequest_ReturnRateData::HDRequest_ReturnRateData(const HDRequest_ReturnRateData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&occupancy_, &from.occupancy_,
    static_cast<size_t>(reinterpret_cast<char*>(&specials_) -
    reinterpret_cast<char*>(&occupancy_)) + sizeof(specials_));
  // @@protoc_insertion_point(copy_constructor:protobuffer.dotwproto.HDRequest.ReturnRateData)
}

void HDRequest_ReturnRateData::SharedCtor() {
  ::memset(&occupancy_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&specials_) -
      reinterpret_cast<char*>(&occupancy_)) + sizeof(specials_));
  _cached_size_ = 0;
}

HDRequest_ReturnRateData::~HDRequest_ReturnRateData() {
  // @@protoc_insertion_point(destructor:protobuffer.dotwproto.HDRequest.ReturnRateData)
  SharedDtor();
}

void HDRequest_ReturnRateData::SharedDtor() {
}

void HDRequest_ReturnRateData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HDRequest_ReturnRateData::descriptor() {
  ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HDRequest_ReturnRateData& HDRequest_ReturnRateData::default_instance() {
  ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::InitDefaultsHDRequest_ReturnRateData();
  return *internal_default_instance();
}

HDRequest_ReturnRateData* HDRequest_ReturnRateData::New(::google::protobuf::Arena* arena) const {
  HDRequest_ReturnRateData* n = new HDRequest_ReturnRateData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HDRequest_ReturnRateData::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuffer.dotwproto.HDRequest.ReturnRateData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&occupancy_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&specials_) -
      reinterpret_cast<char*>(&occupancy_)) + sizeof(specials_));
  _internal_metadata_.Clear();
}

bool HDRequest_ReturnRateData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuffer.dotwproto.HDRequest.ReturnRateData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool occupancy = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &occupancy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool rateType = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ratetype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool paymentMode = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &paymentmode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool allowsExtraMeals = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &allowsextrameals_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool allowsSpecialRequests = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &allowsspecialrequests_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool allowsBeddingPreference = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &allowsbeddingpreference_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool allowsSpecials = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &allowsspecials_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool passengerNamesRequiredForBooking = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &passengernamesrequiredforbooking_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool allocationDetails = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &allocationdetails_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool minStay = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &minstay_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool dateApplyMinStay = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &dateapplyminstay_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool cancellationRules = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &cancellationrules_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool withinCancellationDeadline = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &withincancellationdeadline_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool tariffNotes = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &tariffnotes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool isBookable = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isbookable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool onRequest = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &onrequest_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool total = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &total_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool dates = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &dates_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool freeStay = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &freestay_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool discount = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &discount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool dayOnRequest = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &dayonrequest_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool including = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 184 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &including_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool dailyLeftToSell = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 192 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &dailylefttosell_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool dailyMinStay = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u /* 200 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &dailyminstay_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool leftToSell = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(208u /* 208 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &lefttosell_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool specials = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(216u /* 216 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &specials_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuffer.dotwproto.HDRequest.ReturnRateData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuffer.dotwproto.HDRequest.ReturnRateData)
  return false;
#undef DO_
}

void HDRequest_ReturnRateData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuffer.dotwproto.HDRequest.ReturnRateData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool occupancy = 1;
  if (this->occupancy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->occupancy(), output);
  }

  // bool status = 2;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->status(), output);
  }

  // bool rateType = 3;
  if (this->ratetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->ratetype(), output);
  }

  // bool paymentMode = 4;
  if (this->paymentmode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->paymentmode(), output);
  }

  // bool allowsExtraMeals = 5;
  if (this->allowsextrameals() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->allowsextrameals(), output);
  }

  // bool allowsSpecialRequests = 6;
  if (this->allowsspecialrequests() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->allowsspecialrequests(), output);
  }

  // bool allowsBeddingPreference = 7;
  if (this->allowsbeddingpreference() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->allowsbeddingpreference(), output);
  }

  // bool allowsSpecials = 8;
  if (this->allowsspecials() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->allowsspecials(), output);
  }

  // bool passengerNamesRequiredForBooking = 9;
  if (this->passengernamesrequiredforbooking() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->passengernamesrequiredforbooking(), output);
  }

  // bool allocationDetails = 10;
  if (this->allocationdetails() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->allocationdetails(), output);
  }

  // bool minStay = 11;
  if (this->minstay() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->minstay(), output);
  }

  // bool dateApplyMinStay = 12;
  if (this->dateapplyminstay() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->dateapplyminstay(), output);
  }

  // bool cancellationRules = 13;
  if (this->cancellationrules() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->cancellationrules(), output);
  }

  // bool withinCancellationDeadline = 14;
  if (this->withincancellationdeadline() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(14, this->withincancellationdeadline(), output);
  }

  // bool tariffNotes = 15;
  if (this->tariffnotes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(15, this->tariffnotes(), output);
  }

  // bool isBookable = 16;
  if (this->isbookable() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(16, this->isbookable(), output);
  }

  // bool onRequest = 17;
  if (this->onrequest() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(17, this->onrequest(), output);
  }

  // bool total = 18;
  if (this->total() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(18, this->total(), output);
  }

  // bool dates = 19;
  if (this->dates() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(19, this->dates(), output);
  }

  // bool freeStay = 20;
  if (this->freestay() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(20, this->freestay(), output);
  }

  // bool discount = 21;
  if (this->discount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(21, this->discount(), output);
  }

  // bool dayOnRequest = 22;
  if (this->dayonrequest() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(22, this->dayonrequest(), output);
  }

  // bool including = 23;
  if (this->including() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(23, this->including(), output);
  }

  // bool dailyLeftToSell = 24;
  if (this->dailylefttosell() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(24, this->dailylefttosell(), output);
  }

  // bool dailyMinStay = 25;
  if (this->dailyminstay() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(25, this->dailyminstay(), output);
  }

  // bool leftToSell = 26;
  if (this->lefttosell() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(26, this->lefttosell(), output);
  }

  // bool specials = 27;
  if (this->specials() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(27, this->specials(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuffer.dotwproto.HDRequest.ReturnRateData)
}

::google::protobuf::uint8* HDRequest_ReturnRateData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuffer.dotwproto.HDRequest.ReturnRateData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool occupancy = 1;
  if (this->occupancy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->occupancy(), target);
  }

  // bool status = 2;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->status(), target);
  }

  // bool rateType = 3;
  if (this->ratetype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->ratetype(), target);
  }

  // bool paymentMode = 4;
  if (this->paymentmode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->paymentmode(), target);
  }

  // bool allowsExtraMeals = 5;
  if (this->allowsextrameals() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->allowsextrameals(), target);
  }

  // bool allowsSpecialRequests = 6;
  if (this->allowsspecialrequests() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->allowsspecialrequests(), target);
  }

  // bool allowsBeddingPreference = 7;
  if (this->allowsbeddingpreference() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->allowsbeddingpreference(), target);
  }

  // bool allowsSpecials = 8;
  if (this->allowsspecials() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->allowsspecials(), target);
  }

  // bool passengerNamesRequiredForBooking = 9;
  if (this->passengernamesrequiredforbooking() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->passengernamesrequiredforbooking(), target);
  }

  // bool allocationDetails = 10;
  if (this->allocationdetails() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->allocationdetails(), target);
  }

  // bool minStay = 11;
  if (this->minstay() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->minstay(), target);
  }

  // bool dateApplyMinStay = 12;
  if (this->dateapplyminstay() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->dateapplyminstay(), target);
  }

  // bool cancellationRules = 13;
  if (this->cancellationrules() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->cancellationrules(), target);
  }

  // bool withinCancellationDeadline = 14;
  if (this->withincancellationdeadline() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(14, this->withincancellationdeadline(), target);
  }

  // bool tariffNotes = 15;
  if (this->tariffnotes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(15, this->tariffnotes(), target);
  }

  // bool isBookable = 16;
  if (this->isbookable() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(16, this->isbookable(), target);
  }

  // bool onRequest = 17;
  if (this->onrequest() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(17, this->onrequest(), target);
  }

  // bool total = 18;
  if (this->total() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(18, this->total(), target);
  }

  // bool dates = 19;
  if (this->dates() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(19, this->dates(), target);
  }

  // bool freeStay = 20;
  if (this->freestay() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(20, this->freestay(), target);
  }

  // bool discount = 21;
  if (this->discount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(21, this->discount(), target);
  }

  // bool dayOnRequest = 22;
  if (this->dayonrequest() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(22, this->dayonrequest(), target);
  }

  // bool including = 23;
  if (this->including() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(23, this->including(), target);
  }

  // bool dailyLeftToSell = 24;
  if (this->dailylefttosell() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(24, this->dailylefttosell(), target);
  }

  // bool dailyMinStay = 25;
  if (this->dailyminstay() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(25, this->dailyminstay(), target);
  }

  // bool leftToSell = 26;
  if (this->lefttosell() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(26, this->lefttosell(), target);
  }

  // bool specials = 27;
  if (this->specials() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(27, this->specials(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuffer.dotwproto.HDRequest.ReturnRateData)
  return target;
}

size_t HDRequest_ReturnRateData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuffer.dotwproto.HDRequest.ReturnRateData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool occupancy = 1;
  if (this->occupancy() != 0) {
    total_size += 1 + 1;
  }

  // bool status = 2;
  if (this->status() != 0) {
    total_size += 1 + 1;
  }

  // bool rateType = 3;
  if (this->ratetype() != 0) {
    total_size += 1 + 1;
  }

  // bool paymentMode = 4;
  if (this->paymentmode() != 0) {
    total_size += 1 + 1;
  }

  // bool allowsExtraMeals = 5;
  if (this->allowsextrameals() != 0) {
    total_size += 1 + 1;
  }

  // bool allowsSpecialRequests = 6;
  if (this->allowsspecialrequests() != 0) {
    total_size += 1 + 1;
  }

  // bool allowsBeddingPreference = 7;
  if (this->allowsbeddingpreference() != 0) {
    total_size += 1 + 1;
  }

  // bool allowsSpecials = 8;
  if (this->allowsspecials() != 0) {
    total_size += 1 + 1;
  }

  // bool passengerNamesRequiredForBooking = 9;
  if (this->passengernamesrequiredforbooking() != 0) {
    total_size += 1 + 1;
  }

  // bool allocationDetails = 10;
  if (this->allocationdetails() != 0) {
    total_size += 1 + 1;
  }

  // bool minStay = 11;
  if (this->minstay() != 0) {
    total_size += 1 + 1;
  }

  // bool dateApplyMinStay = 12;
  if (this->dateapplyminstay() != 0) {
    total_size += 1 + 1;
  }

  // bool cancellationRules = 13;
  if (this->cancellationrules() != 0) {
    total_size += 1 + 1;
  }

  // bool withinCancellationDeadline = 14;
  if (this->withincancellationdeadline() != 0) {
    total_size += 1 + 1;
  }

  // bool tariffNotes = 15;
  if (this->tariffnotes() != 0) {
    total_size += 1 + 1;
  }

  // bool isBookable = 16;
  if (this->isbookable() != 0) {
    total_size += 2 + 1;
  }

  // bool onRequest = 17;
  if (this->onrequest() != 0) {
    total_size += 2 + 1;
  }

  // bool total = 18;
  if (this->total() != 0) {
    total_size += 2 + 1;
  }

  // bool dates = 19;
  if (this->dates() != 0) {
    total_size += 2 + 1;
  }

  // bool freeStay = 20;
  if (this->freestay() != 0) {
    total_size += 2 + 1;
  }

  // bool discount = 21;
  if (this->discount() != 0) {
    total_size += 2 + 1;
  }

  // bool dayOnRequest = 22;
  if (this->dayonrequest() != 0) {
    total_size += 2 + 1;
  }

  // bool including = 23;
  if (this->including() != 0) {
    total_size += 2 + 1;
  }

  // bool dailyLeftToSell = 24;
  if (this->dailylefttosell() != 0) {
    total_size += 2 + 1;
  }

  // bool dailyMinStay = 25;
  if (this->dailyminstay() != 0) {
    total_size += 2 + 1;
  }

  // bool leftToSell = 26;
  if (this->lefttosell() != 0) {
    total_size += 2 + 1;
  }

  // bool specials = 27;
  if (this->specials() != 0) {
    total_size += 2 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HDRequest_ReturnRateData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuffer.dotwproto.HDRequest.ReturnRateData)
  GOOGLE_DCHECK_NE(&from, this);
  const HDRequest_ReturnRateData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HDRequest_ReturnRateData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuffer.dotwproto.HDRequest.ReturnRateData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuffer.dotwproto.HDRequest.ReturnRateData)
    MergeFrom(*source);
  }
}

void HDRequest_ReturnRateData::MergeFrom(const HDRequest_ReturnRateData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuffer.dotwproto.HDRequest.ReturnRateData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.occupancy() != 0) {
    set_occupancy(from.occupancy());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.ratetype() != 0) {
    set_ratetype(from.ratetype());
  }
  if (from.paymentmode() != 0) {
    set_paymentmode(from.paymentmode());
  }
  if (from.allowsextrameals() != 0) {
    set_allowsextrameals(from.allowsextrameals());
  }
  if (from.allowsspecialrequests() != 0) {
    set_allowsspecialrequests(from.allowsspecialrequests());
  }
  if (from.allowsbeddingpreference() != 0) {
    set_allowsbeddingpreference(from.allowsbeddingpreference());
  }
  if (from.allowsspecials() != 0) {
    set_allowsspecials(from.allowsspecials());
  }
  if (from.passengernamesrequiredforbooking() != 0) {
    set_passengernamesrequiredforbooking(from.passengernamesrequiredforbooking());
  }
  if (from.allocationdetails() != 0) {
    set_allocationdetails(from.allocationdetails());
  }
  if (from.minstay() != 0) {
    set_minstay(from.minstay());
  }
  if (from.dateapplyminstay() != 0) {
    set_dateapplyminstay(from.dateapplyminstay());
  }
  if (from.cancellationrules() != 0) {
    set_cancellationrules(from.cancellationrules());
  }
  if (from.withincancellationdeadline() != 0) {
    set_withincancellationdeadline(from.withincancellationdeadline());
  }
  if (from.tariffnotes() != 0) {
    set_tariffnotes(from.tariffnotes());
  }
  if (from.isbookable() != 0) {
    set_isbookable(from.isbookable());
  }
  if (from.onrequest() != 0) {
    set_onrequest(from.onrequest());
  }
  if (from.total() != 0) {
    set_total(from.total());
  }
  if (from.dates() != 0) {
    set_dates(from.dates());
  }
  if (from.freestay() != 0) {
    set_freestay(from.freestay());
  }
  if (from.discount() != 0) {
    set_discount(from.discount());
  }
  if (from.dayonrequest() != 0) {
    set_dayonrequest(from.dayonrequest());
  }
  if (from.including() != 0) {
    set_including(from.including());
  }
  if (from.dailylefttosell() != 0) {
    set_dailylefttosell(from.dailylefttosell());
  }
  if (from.dailyminstay() != 0) {
    set_dailyminstay(from.dailyminstay());
  }
  if (from.lefttosell() != 0) {
    set_lefttosell(from.lefttosell());
  }
  if (from.specials() != 0) {
    set_specials(from.specials());
  }
}

void HDRequest_ReturnRateData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuffer.dotwproto.HDRequest.ReturnRateData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HDRequest_ReturnRateData::CopyFrom(const HDRequest_ReturnRateData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuffer.dotwproto.HDRequest.ReturnRateData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HDRequest_ReturnRateData::IsInitialized() const {
  return true;
}

void HDRequest_ReturnRateData::Swap(HDRequest_ReturnRateData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HDRequest_ReturnRateData::InternalSwap(HDRequest_ReturnRateData* other) {
  using std::swap;
  swap(occupancy_, other->occupancy_);
  swap(status_, other->status_);
  swap(ratetype_, other->ratetype_);
  swap(paymentmode_, other->paymentmode_);
  swap(allowsextrameals_, other->allowsextrameals_);
  swap(allowsspecialrequests_, other->allowsspecialrequests_);
  swap(allowsbeddingpreference_, other->allowsbeddingpreference_);
  swap(allowsspecials_, other->allowsspecials_);
  swap(passengernamesrequiredforbooking_, other->passengernamesrequiredforbooking_);
  swap(allocationdetails_, other->allocationdetails_);
  swap(minstay_, other->minstay_);
  swap(dateapplyminstay_, other->dateapplyminstay_);
  swap(cancellationrules_, other->cancellationrules_);
  swap(withincancellationdeadline_, other->withincancellationdeadline_);
  swap(tariffnotes_, other->tariffnotes_);
  swap(isbookable_, other->isbookable_);
  swap(onrequest_, other->onrequest_);
  swap(total_, other->total_);
  swap(dates_, other->dates_);
  swap(freestay_, other->freestay_);
  swap(discount_, other->discount_);
  swap(dayonrequest_, other->dayonrequest_);
  swap(including_, other->including_);
  swap(dailylefttosell_, other->dailylefttosell_);
  swap(dailyminstay_, other->dailyminstay_);
  swap(lefttosell_, other->lefttosell_);
  swap(specials_, other->specials_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HDRequest_ReturnRateData::GetMetadata() const {
  protobuf_genProto_2fDotw_5fProtoBuf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HDRequest::InitAsDefaultInstance() {
  ::protobuffer::dotwproto::_HDRequest_default_instance_._instance.get_mutable()->returnhotelstaticdata_ = const_cast< ::protobuffer::dotwproto::HDRequest_ReturnHotelStaticData*>(
      ::protobuffer::dotwproto::HDRequest_ReturnHotelStaticData::internal_default_instance());
  ::protobuffer::dotwproto::_HDRequest_default_instance_._instance.get_mutable()->returnroomtypestaticdata_ = const_cast< ::protobuffer::dotwproto::HDRequest_ReturnRoomTypeStaticData*>(
      ::protobuffer::dotwproto::HDRequest_ReturnRoomTypeStaticData::internal_default_instance());
  ::protobuffer::dotwproto::_HDRequest_default_instance_._instance.get_mutable()->returnratedata_ = const_cast< ::protobuffer::dotwproto::HDRequest_ReturnRateData*>(
      ::protobuffer::dotwproto::HDRequest_ReturnRateData::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HDRequest::kHotelDataRequestFieldNumber;
const int HDRequest::kHotelIdsFieldNumber;
const int HDRequest::kReturnHotelStaticDataFieldNumber;
const int HDRequest::kReturnRoomTypeStaticDataFieldNumber;
const int HDRequest::kReturnRateDataFieldNumber;
const int HDRequest::kLanguageIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HDRequest::HDRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::InitDefaultsHDRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuffer.dotwproto.HDRequest)
}
HDRequest::HDRequest(const HDRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      hotelids_(from.hotelids_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hoteldatarequest_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hoteldatarequest().size() > 0) {
    hoteldatarequest_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hoteldatarequest_);
  }
  if (from.has_returnhotelstaticdata()) {
    returnhotelstaticdata_ = new ::protobuffer::dotwproto::HDRequest_ReturnHotelStaticData(*from.returnhotelstaticdata_);
  } else {
    returnhotelstaticdata_ = NULL;
  }
  if (from.has_returnroomtypestaticdata()) {
    returnroomtypestaticdata_ = new ::protobuffer::dotwproto::HDRequest_ReturnRoomTypeStaticData(*from.returnroomtypestaticdata_);
  } else {
    returnroomtypestaticdata_ = NULL;
  }
  if (from.has_returnratedata()) {
    returnratedata_ = new ::protobuffer::dotwproto::HDRequest_ReturnRateData(*from.returnratedata_);
  } else {
    returnratedata_ = NULL;
  }
  languageid_ = from.languageid_;
  // @@protoc_insertion_point(copy_constructor:protobuffer.dotwproto.HDRequest)
}

void HDRequest::SharedCtor() {
  hoteldatarequest_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&returnhotelstaticdata_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&languageid_) -
      reinterpret_cast<char*>(&returnhotelstaticdata_)) + sizeof(languageid_));
  _cached_size_ = 0;
}

HDRequest::~HDRequest() {
  // @@protoc_insertion_point(destructor:protobuffer.dotwproto.HDRequest)
  SharedDtor();
}

void HDRequest::SharedDtor() {
  hoteldatarequest_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete returnhotelstaticdata_;
  if (this != internal_default_instance()) delete returnroomtypestaticdata_;
  if (this != internal_default_instance()) delete returnratedata_;
}

void HDRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HDRequest::descriptor() {
  ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HDRequest& HDRequest::default_instance() {
  ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::InitDefaultsHDRequest();
  return *internal_default_instance();
}

HDRequest* HDRequest::New(::google::protobuf::Arena* arena) const {
  HDRequest* n = new HDRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HDRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuffer.dotwproto.HDRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hotelids_.Clear();
  hoteldatarequest_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && returnhotelstaticdata_ != NULL) {
    delete returnhotelstaticdata_;
  }
  returnhotelstaticdata_ = NULL;
  if (GetArenaNoVirtual() == NULL && returnroomtypestaticdata_ != NULL) {
    delete returnroomtypestaticdata_;
  }
  returnroomtypestaticdata_ = NULL;
  if (GetArenaNoVirtual() == NULL && returnratedata_ != NULL) {
    delete returnratedata_;
  }
  returnratedata_ = NULL;
  languageid_ = 0;
  _internal_metadata_.Clear();
}

bool HDRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuffer.dotwproto.HDRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string hotelDataRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hoteldatarequest()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->hoteldatarequest().data(), static_cast<int>(this->hoteldatarequest().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuffer.dotwproto.HDRequest.hotelDataRequest"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .protobuffer.dotwproto.HDRequest.HotelIds hotelIds = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_hotelids()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .protobuffer.dotwproto.HDRequest.ReturnHotelStaticData returnHotelStaticData = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_returnhotelstaticdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .protobuffer.dotwproto.HDRequest.ReturnRoomTypeStaticData returnRoomTypeStaticData = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_returnroomtypestaticdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .protobuffer.dotwproto.HDRequest.ReturnRateData returnRateData = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_returnratedata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 languageId = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &languageid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuffer.dotwproto.HDRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuffer.dotwproto.HDRequest)
  return false;
#undef DO_
}

void HDRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuffer.dotwproto.HDRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string hotelDataRequest = 1;
  if (this->hoteldatarequest().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hoteldatarequest().data(), static_cast<int>(this->hoteldatarequest().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDRequest.hotelDataRequest");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->hoteldatarequest(), output);
  }

  // repeated .protobuffer.dotwproto.HDRequest.HotelIds hotelIds = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->hotelids_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->hotelids(static_cast<int>(i)), output);
  }

  // .protobuffer.dotwproto.HDRequest.ReturnHotelStaticData returnHotelStaticData = 3;
  if (this->has_returnhotelstaticdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->returnhotelstaticdata_, output);
  }

  // .protobuffer.dotwproto.HDRequest.ReturnRoomTypeStaticData returnRoomTypeStaticData = 4;
  if (this->has_returnroomtypestaticdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->returnroomtypestaticdata_, output);
  }

  // .protobuffer.dotwproto.HDRequest.ReturnRateData returnRateData = 5;
  if (this->has_returnratedata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->returnratedata_, output);
  }

  // int32 languageId = 6;
  if (this->languageid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->languageid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuffer.dotwproto.HDRequest)
}

::google::protobuf::uint8* HDRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuffer.dotwproto.HDRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string hotelDataRequest = 1;
  if (this->hoteldatarequest().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hoteldatarequest().data(), static_cast<int>(this->hoteldatarequest().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDRequest.hotelDataRequest");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->hoteldatarequest(), target);
  }

  // repeated .protobuffer.dotwproto.HDRequest.HotelIds hotelIds = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->hotelids_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->hotelids(static_cast<int>(i)), deterministic, target);
  }

  // .protobuffer.dotwproto.HDRequest.ReturnHotelStaticData returnHotelStaticData = 3;
  if (this->has_returnhotelstaticdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->returnhotelstaticdata_, deterministic, target);
  }

  // .protobuffer.dotwproto.HDRequest.ReturnRoomTypeStaticData returnRoomTypeStaticData = 4;
  if (this->has_returnroomtypestaticdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->returnroomtypestaticdata_, deterministic, target);
  }

  // .protobuffer.dotwproto.HDRequest.ReturnRateData returnRateData = 5;
  if (this->has_returnratedata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->returnratedata_, deterministic, target);
  }

  // int32 languageId = 6;
  if (this->languageid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->languageid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuffer.dotwproto.HDRequest)
  return target;
}

size_t HDRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuffer.dotwproto.HDRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .protobuffer.dotwproto.HDRequest.HotelIds hotelIds = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->hotelids_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->hotelids(static_cast<int>(i)));
    }
  }

  // string hotelDataRequest = 1;
  if (this->hoteldatarequest().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hoteldatarequest());
  }

  // .protobuffer.dotwproto.HDRequest.ReturnHotelStaticData returnHotelStaticData = 3;
  if (this->has_returnhotelstaticdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->returnhotelstaticdata_);
  }

  // .protobuffer.dotwproto.HDRequest.ReturnRoomTypeStaticData returnRoomTypeStaticData = 4;
  if (this->has_returnroomtypestaticdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->returnroomtypestaticdata_);
  }

  // .protobuffer.dotwproto.HDRequest.ReturnRateData returnRateData = 5;
  if (this->has_returnratedata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->returnratedata_);
  }

  // int32 languageId = 6;
  if (this->languageid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->languageid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HDRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuffer.dotwproto.HDRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const HDRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HDRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuffer.dotwproto.HDRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuffer.dotwproto.HDRequest)
    MergeFrom(*source);
  }
}

void HDRequest::MergeFrom(const HDRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuffer.dotwproto.HDRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  hotelids_.MergeFrom(from.hotelids_);
  if (from.hoteldatarequest().size() > 0) {

    hoteldatarequest_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hoteldatarequest_);
  }
  if (from.has_returnhotelstaticdata()) {
    mutable_returnhotelstaticdata()->::protobuffer::dotwproto::HDRequest_ReturnHotelStaticData::MergeFrom(from.returnhotelstaticdata());
  }
  if (from.has_returnroomtypestaticdata()) {
    mutable_returnroomtypestaticdata()->::protobuffer::dotwproto::HDRequest_ReturnRoomTypeStaticData::MergeFrom(from.returnroomtypestaticdata());
  }
  if (from.has_returnratedata()) {
    mutable_returnratedata()->::protobuffer::dotwproto::HDRequest_ReturnRateData::MergeFrom(from.returnratedata());
  }
  if (from.languageid() != 0) {
    set_languageid(from.languageid());
  }
}

void HDRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuffer.dotwproto.HDRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HDRequest::CopyFrom(const HDRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuffer.dotwproto.HDRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HDRequest::IsInitialized() const {
  return true;
}

void HDRequest::Swap(HDRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HDRequest::InternalSwap(HDRequest* other) {
  using std::swap;
  hotelids_.InternalSwap(&other->hotelids_);
  hoteldatarequest_.Swap(&other->hoteldatarequest_);
  swap(returnhotelstaticdata_, other->returnhotelstaticdata_);
  swap(returnroomtypestaticdata_, other->returnroomtypestaticdata_);
  swap(returnratedata_, other->returnratedata_);
  swap(languageid_, other->languageid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HDRequest::GetMetadata() const {
  protobuf_genProto_2fDotw_5fProtoBuf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HDReply_HotelStaticData_RoomTypeStaticData_SupplierRoomName::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HDReply_HotelStaticData_RoomTypeStaticData_SupplierRoomName::kRoomNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HDReply_HotelStaticData_RoomTypeStaticData_SupplierRoomName::HDReply_HotelStaticData_RoomTypeStaticData_SupplierRoomName()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::InitDefaultsHDReply_HotelStaticData_RoomTypeStaticData_SupplierRoomName();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.SupplierRoomName)
}
HDReply_HotelStaticData_RoomTypeStaticData_SupplierRoomName::HDReply_HotelStaticData_RoomTypeStaticData_SupplierRoomName(const HDReply_HotelStaticData_RoomTypeStaticData_SupplierRoomName& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      roomname_(from.roomname_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.SupplierRoomName)
}

void HDReply_HotelStaticData_RoomTypeStaticData_SupplierRoomName::SharedCtor() {
  _cached_size_ = 0;
}

HDReply_HotelStaticData_RoomTypeStaticData_SupplierRoomName::~HDReply_HotelStaticData_RoomTypeStaticData_SupplierRoomName() {
  // @@protoc_insertion_point(destructor:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.SupplierRoomName)
  SharedDtor();
}

void HDReply_HotelStaticData_RoomTypeStaticData_SupplierRoomName::SharedDtor() {
}

void HDReply_HotelStaticData_RoomTypeStaticData_SupplierRoomName::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HDReply_HotelStaticData_RoomTypeStaticData_SupplierRoomName::descriptor() {
  ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HDReply_HotelStaticData_RoomTypeStaticData_SupplierRoomName& HDReply_HotelStaticData_RoomTypeStaticData_SupplierRoomName::default_instance() {
  ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::InitDefaultsHDReply_HotelStaticData_RoomTypeStaticData_SupplierRoomName();
  return *internal_default_instance();
}

HDReply_HotelStaticData_RoomTypeStaticData_SupplierRoomName* HDReply_HotelStaticData_RoomTypeStaticData_SupplierRoomName::New(::google::protobuf::Arena* arena) const {
  HDReply_HotelStaticData_RoomTypeStaticData_SupplierRoomName* n = new HDReply_HotelStaticData_RoomTypeStaticData_SupplierRoomName;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HDReply_HotelStaticData_RoomTypeStaticData_SupplierRoomName::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.SupplierRoomName)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roomname_.Clear();
  _internal_metadata_.Clear();
}

bool HDReply_HotelStaticData_RoomTypeStaticData_SupplierRoomName::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.SupplierRoomName)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 roomName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_roomname())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10u, input, this->mutable_roomname())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.SupplierRoomName)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.SupplierRoomName)
  return false;
#undef DO_
}

void HDReply_HotelStaticData_RoomTypeStaticData_SupplierRoomName::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.SupplierRoomName)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 roomName = 1;
  if (this->roomname_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _roomname_cached_byte_size_));
  }
  for (int i = 0, n = this->roomname_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->roomname(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.SupplierRoomName)
}

::google::protobuf::uint8* HDReply_HotelStaticData_RoomTypeStaticData_SupplierRoomName::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.SupplierRoomName)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 roomName = 1;
  if (this->roomname_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _roomname_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->roomname_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.SupplierRoomName)
  return target;
}

size_t HDReply_HotelStaticData_RoomTypeStaticData_SupplierRoomName::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.SupplierRoomName)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 roomName = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->roomname_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _roomname_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HDReply_HotelStaticData_RoomTypeStaticData_SupplierRoomName::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.SupplierRoomName)
  GOOGLE_DCHECK_NE(&from, this);
  const HDReply_HotelStaticData_RoomTypeStaticData_SupplierRoomName* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HDReply_HotelStaticData_RoomTypeStaticData_SupplierRoomName>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.SupplierRoomName)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.SupplierRoomName)
    MergeFrom(*source);
  }
}

void HDReply_HotelStaticData_RoomTypeStaticData_SupplierRoomName::MergeFrom(const HDReply_HotelStaticData_RoomTypeStaticData_SupplierRoomName& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.SupplierRoomName)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  roomname_.MergeFrom(from.roomname_);
}

void HDReply_HotelStaticData_RoomTypeStaticData_SupplierRoomName::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.SupplierRoomName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HDReply_HotelStaticData_RoomTypeStaticData_SupplierRoomName::CopyFrom(const HDReply_HotelStaticData_RoomTypeStaticData_SupplierRoomName& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.SupplierRoomName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HDReply_HotelStaticData_RoomTypeStaticData_SupplierRoomName::IsInitialized() const {
  return true;
}

void HDReply_HotelStaticData_RoomTypeStaticData_SupplierRoomName::Swap(HDReply_HotelStaticData_RoomTypeStaticData_SupplierRoomName* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HDReply_HotelStaticData_RoomTypeStaticData_SupplierRoomName::InternalSwap(HDReply_HotelStaticData_RoomTypeStaticData_SupplierRoomName* other) {
  using std::swap;
  roomname_.InternalSwap(&other->roomname_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HDReply_HotelStaticData_RoomTypeStaticData_SupplierRoomName::GetMetadata() const {
  protobuf_genProto_2fDotw_5fProtoBuf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HDReply_HotelStaticData_RoomTypeStaticData_RoomInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HDReply_HotelStaticData_RoomTypeStaticData_RoomInfo::kMaxOccupancyFieldNumber;
const int HDReply_HotelStaticData_RoomTypeStaticData_RoomInfo::kMaxAdultWithChildrenFieldNumber;
const int HDReply_HotelStaticData_RoomTypeStaticData_RoomInfo::kMinChildAgeFieldNumber;
const int HDReply_HotelStaticData_RoomTypeStaticData_RoomInfo::kMaxChildAgeFieldNumber;
const int HDReply_HotelStaticData_RoomTypeStaticData_RoomInfo::kMaxAdultFieldNumber;
const int HDReply_HotelStaticData_RoomTypeStaticData_RoomInfo::kMaxExtraBedFieldNumber;
const int HDReply_HotelStaticData_RoomTypeStaticData_RoomInfo::kMaxChildrenFieldNumber;
const int HDReply_HotelStaticData_RoomTypeStaticData_RoomInfo::kChildrenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HDReply_HotelStaticData_RoomTypeStaticData_RoomInfo::HDReply_HotelStaticData_RoomTypeStaticData_RoomInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::InitDefaultsHDReply_HotelStaticData_RoomTypeStaticData_RoomInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.RoomInfo)
}
HDReply_HotelStaticData_RoomTypeStaticData_RoomInfo::HDReply_HotelStaticData_RoomTypeStaticData_RoomInfo(const HDReply_HotelStaticData_RoomTypeStaticData_RoomInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&maxoccupancy_, &from.maxoccupancy_,
    static_cast<size_t>(reinterpret_cast<char*>(&children_) -
    reinterpret_cast<char*>(&maxoccupancy_)) + sizeof(children_));
  // @@protoc_insertion_point(copy_constructor:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.RoomInfo)
}

void HDReply_HotelStaticData_RoomTypeStaticData_RoomInfo::SharedCtor() {
  ::memset(&maxoccupancy_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&children_) -
      reinterpret_cast<char*>(&maxoccupancy_)) + sizeof(children_));
  _cached_size_ = 0;
}

HDReply_HotelStaticData_RoomTypeStaticData_RoomInfo::~HDReply_HotelStaticData_RoomTypeStaticData_RoomInfo() {
  // @@protoc_insertion_point(destructor:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.RoomInfo)
  SharedDtor();
}

void HDReply_HotelStaticData_RoomTypeStaticData_RoomInfo::SharedDtor() {
}

void HDReply_HotelStaticData_RoomTypeStaticData_RoomInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HDReply_HotelStaticData_RoomTypeStaticData_RoomInfo::descriptor() {
  ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HDReply_HotelStaticData_RoomTypeStaticData_RoomInfo& HDReply_HotelStaticData_RoomTypeStaticData_RoomInfo::default_instance() {
  ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::InitDefaultsHDReply_HotelStaticData_RoomTypeStaticData_RoomInfo();
  return *internal_default_instance();
}

HDReply_HotelStaticData_RoomTypeStaticData_RoomInfo* HDReply_HotelStaticData_RoomTypeStaticData_RoomInfo::New(::google::protobuf::Arena* arena) const {
  HDReply_HotelStaticData_RoomTypeStaticData_RoomInfo* n = new HDReply_HotelStaticData_RoomTypeStaticData_RoomInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HDReply_HotelStaticData_RoomTypeStaticData_RoomInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.RoomInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&maxoccupancy_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&children_) -
      reinterpret_cast<char*>(&maxoccupancy_)) + sizeof(children_));
  _internal_metadata_.Clear();
}

bool HDReply_HotelStaticData_RoomTypeStaticData_RoomInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.RoomInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 maxOccupancy = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maxoccupancy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 maxAdultWithChildren = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maxadultwithchildren_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 minChildAge = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &minchildage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 maxChildAge = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maxchildage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 maxAdult = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maxadult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool maxExtraBed = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &maxextrabed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 maxChildren = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maxchildren_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 children = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &children_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.RoomInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.RoomInfo)
  return false;
#undef DO_
}

void HDReply_HotelStaticData_RoomTypeStaticData_RoomInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.RoomInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 maxOccupancy = 1;
  if (this->maxoccupancy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->maxoccupancy(), output);
  }

  // int32 maxAdultWithChildren = 2;
  if (this->maxadultwithchildren() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->maxadultwithchildren(), output);
  }

  // int32 minChildAge = 3;
  if (this->minchildage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->minchildage(), output);
  }

  // int32 maxChildAge = 4;
  if (this->maxchildage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->maxchildage(), output);
  }

  // int32 maxAdult = 5;
  if (this->maxadult() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->maxadult(), output);
  }

  // bool maxExtraBed = 6;
  if (this->maxextrabed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->maxextrabed(), output);
  }

  // int32 maxChildren = 7;
  if (this->maxchildren() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->maxchildren(), output);
  }

  // int32 children = 8;
  if (this->children() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->children(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.RoomInfo)
}

::google::protobuf::uint8* HDReply_HotelStaticData_RoomTypeStaticData_RoomInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.RoomInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 maxOccupancy = 1;
  if (this->maxoccupancy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->maxoccupancy(), target);
  }

  // int32 maxAdultWithChildren = 2;
  if (this->maxadultwithchildren() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->maxadultwithchildren(), target);
  }

  // int32 minChildAge = 3;
  if (this->minchildage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->minchildage(), target);
  }

  // int32 maxChildAge = 4;
  if (this->maxchildage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->maxchildage(), target);
  }

  // int32 maxAdult = 5;
  if (this->maxadult() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->maxadult(), target);
  }

  // bool maxExtraBed = 6;
  if (this->maxextrabed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->maxextrabed(), target);
  }

  // int32 maxChildren = 7;
  if (this->maxchildren() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->maxchildren(), target);
  }

  // int32 children = 8;
  if (this->children() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->children(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.RoomInfo)
  return target;
}

size_t HDReply_HotelStaticData_RoomTypeStaticData_RoomInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.RoomInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 maxOccupancy = 1;
  if (this->maxoccupancy() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->maxoccupancy());
  }

  // int32 maxAdultWithChildren = 2;
  if (this->maxadultwithchildren() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->maxadultwithchildren());
  }

  // int32 minChildAge = 3;
  if (this->minchildage() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->minchildage());
  }

  // int32 maxChildAge = 4;
  if (this->maxchildage() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->maxchildage());
  }

  // int32 maxAdult = 5;
  if (this->maxadult() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->maxadult());
  }

  // bool maxExtraBed = 6;
  if (this->maxextrabed() != 0) {
    total_size += 1 + 1;
  }

  // int32 maxChildren = 7;
  if (this->maxchildren() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->maxchildren());
  }

  // int32 children = 8;
  if (this->children() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->children());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HDReply_HotelStaticData_RoomTypeStaticData_RoomInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.RoomInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const HDReply_HotelStaticData_RoomTypeStaticData_RoomInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HDReply_HotelStaticData_RoomTypeStaticData_RoomInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.RoomInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.RoomInfo)
    MergeFrom(*source);
  }
}

void HDReply_HotelStaticData_RoomTypeStaticData_RoomInfo::MergeFrom(const HDReply_HotelStaticData_RoomTypeStaticData_RoomInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.RoomInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.maxoccupancy() != 0) {
    set_maxoccupancy(from.maxoccupancy());
  }
  if (from.maxadultwithchildren() != 0) {
    set_maxadultwithchildren(from.maxadultwithchildren());
  }
  if (from.minchildage() != 0) {
    set_minchildage(from.minchildage());
  }
  if (from.maxchildage() != 0) {
    set_maxchildage(from.maxchildage());
  }
  if (from.maxadult() != 0) {
    set_maxadult(from.maxadult());
  }
  if (from.maxextrabed() != 0) {
    set_maxextrabed(from.maxextrabed());
  }
  if (from.maxchildren() != 0) {
    set_maxchildren(from.maxchildren());
  }
  if (from.children() != 0) {
    set_children(from.children());
  }
}

void HDReply_HotelStaticData_RoomTypeStaticData_RoomInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.RoomInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HDReply_HotelStaticData_RoomTypeStaticData_RoomInfo::CopyFrom(const HDReply_HotelStaticData_RoomTypeStaticData_RoomInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.RoomInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HDReply_HotelStaticData_RoomTypeStaticData_RoomInfo::IsInitialized() const {
  return true;
}

void HDReply_HotelStaticData_RoomTypeStaticData_RoomInfo::Swap(HDReply_HotelStaticData_RoomTypeStaticData_RoomInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HDReply_HotelStaticData_RoomTypeStaticData_RoomInfo::InternalSwap(HDReply_HotelStaticData_RoomTypeStaticData_RoomInfo* other) {
  using std::swap;
  swap(maxoccupancy_, other->maxoccupancy_);
  swap(maxadultwithchildren_, other->maxadultwithchildren_);
  swap(minchildage_, other->minchildage_);
  swap(maxchildage_, other->maxchildage_);
  swap(maxadult_, other->maxadult_);
  swap(maxextrabed_, other->maxextrabed_);
  swap(maxchildren_, other->maxchildren_);
  swap(children_, other->children_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HDReply_HotelStaticData_RoomTypeStaticData_RoomInfo::GetMetadata() const {
  protobuf_genProto_2fDotw_5fProtoBuf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HDReply_HotelStaticData_RoomTypeStaticData_RoomCategory::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HDReply_HotelStaticData_RoomTypeStaticData_RoomCategory::kCodeFieldNumber;
const int HDReply_HotelStaticData_RoomTypeStaticData_RoomCategory::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HDReply_HotelStaticData_RoomTypeStaticData_RoomCategory::HDReply_HotelStaticData_RoomTypeStaticData_RoomCategory()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::InitDefaultsHDReply_HotelStaticData_RoomTypeStaticData_RoomCategory();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.RoomCategory)
}
HDReply_HotelStaticData_RoomTypeStaticData_RoomCategory::HDReply_HotelStaticData_RoomTypeStaticData_RoomCategory(const HDReply_HotelStaticData_RoomTypeStaticData_RoomCategory& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.code().size() > 0) {
    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.RoomCategory)
}

void HDReply_HotelStaticData_RoomTypeStaticData_RoomCategory::SharedCtor() {
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

HDReply_HotelStaticData_RoomTypeStaticData_RoomCategory::~HDReply_HotelStaticData_RoomTypeStaticData_RoomCategory() {
  // @@protoc_insertion_point(destructor:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.RoomCategory)
  SharedDtor();
}

void HDReply_HotelStaticData_RoomTypeStaticData_RoomCategory::SharedDtor() {
  code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HDReply_HotelStaticData_RoomTypeStaticData_RoomCategory::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HDReply_HotelStaticData_RoomTypeStaticData_RoomCategory::descriptor() {
  ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HDReply_HotelStaticData_RoomTypeStaticData_RoomCategory& HDReply_HotelStaticData_RoomTypeStaticData_RoomCategory::default_instance() {
  ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::InitDefaultsHDReply_HotelStaticData_RoomTypeStaticData_RoomCategory();
  return *internal_default_instance();
}

HDReply_HotelStaticData_RoomTypeStaticData_RoomCategory* HDReply_HotelStaticData_RoomTypeStaticData_RoomCategory::New(::google::protobuf::Arena* arena) const {
  HDReply_HotelStaticData_RoomTypeStaticData_RoomCategory* n = new HDReply_HotelStaticData_RoomTypeStaticData_RoomCategory;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HDReply_HotelStaticData_RoomTypeStaticData_RoomCategory::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.RoomCategory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool HDReply_HotelStaticData_RoomTypeStaticData_RoomCategory::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.RoomCategory)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->code().data(), static_cast<int>(this->code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.RoomCategory.code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.RoomCategory.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.RoomCategory)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.RoomCategory)
  return false;
#undef DO_
}

void HDReply_HotelStaticData_RoomTypeStaticData_RoomCategory::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.RoomCategory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string code = 1;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.RoomCategory.code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->code(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.RoomCategory.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.RoomCategory)
}

::google::protobuf::uint8* HDReply_HotelStaticData_RoomTypeStaticData_RoomCategory::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.RoomCategory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string code = 1;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.RoomCategory.code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->code(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.RoomCategory.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.RoomCategory)
  return target;
}

size_t HDReply_HotelStaticData_RoomTypeStaticData_RoomCategory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.RoomCategory)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string code = 1;
  if (this->code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->code());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HDReply_HotelStaticData_RoomTypeStaticData_RoomCategory::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.RoomCategory)
  GOOGLE_DCHECK_NE(&from, this);
  const HDReply_HotelStaticData_RoomTypeStaticData_RoomCategory* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HDReply_HotelStaticData_RoomTypeStaticData_RoomCategory>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.RoomCategory)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.RoomCategory)
    MergeFrom(*source);
  }
}

void HDReply_HotelStaticData_RoomTypeStaticData_RoomCategory::MergeFrom(const HDReply_HotelStaticData_RoomTypeStaticData_RoomCategory& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.RoomCategory)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code().size() > 0) {

    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void HDReply_HotelStaticData_RoomTypeStaticData_RoomCategory::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.RoomCategory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HDReply_HotelStaticData_RoomTypeStaticData_RoomCategory::CopyFrom(const HDReply_HotelStaticData_RoomTypeStaticData_RoomCategory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.RoomCategory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HDReply_HotelStaticData_RoomTypeStaticData_RoomCategory::IsInitialized() const {
  return true;
}

void HDReply_HotelStaticData_RoomTypeStaticData_RoomCategory::Swap(HDReply_HotelStaticData_RoomTypeStaticData_RoomCategory* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HDReply_HotelStaticData_RoomTypeStaticData_RoomCategory::InternalSwap(HDReply_HotelStaticData_RoomTypeStaticData_RoomCategory* other) {
  using std::swap;
  code_.Swap(&other->code_);
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HDReply_HotelStaticData_RoomTypeStaticData_RoomCategory::GetMetadata() const {
  protobuf_genProto_2fDotw_5fProtoBuf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HDReply_HotelStaticData_RoomTypeStaticData::InitAsDefaultInstance() {
  ::protobuffer::dotwproto::_HDReply_HotelStaticData_RoomTypeStaticData_default_instance_._instance.get_mutable()->roomcategory_ = const_cast< ::protobuffer::dotwproto::HDReply_HotelStaticData_RoomTypeStaticData_RoomCategory*>(
      ::protobuffer::dotwproto::HDReply_HotelStaticData_RoomTypeStaticData_RoomCategory::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HDReply_HotelStaticData_RoomTypeStaticData::kTwinFieldNumber;
const int HDReply_HotelStaticData_RoomTypeStaticData::kRoomAmenitiesFieldNumber;
const int HDReply_HotelStaticData_RoomTypeStaticData::kNameFieldNumber;
const int HDReply_HotelStaticData_RoomTypeStaticData::kSupplierRoomNameFieldNumber;
const int HDReply_HotelStaticData_RoomTypeStaticData::kRoomInfoFieldNumber;
const int HDReply_HotelStaticData_RoomTypeStaticData::kRoomCategoryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HDReply_HotelStaticData_RoomTypeStaticData::HDReply_HotelStaticData_RoomTypeStaticData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::InitDefaultsHDReply_HotelStaticData_RoomTypeStaticData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData)
}
HDReply_HotelStaticData_RoomTypeStaticData::HDReply_HotelStaticData_RoomTypeStaticData(const HDReply_HotelStaticData_RoomTypeStaticData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      roomamenities_(from.roomamenities_),
      supplierroomname_(from.supplierroomname_),
      roominfo_(from.roominfo_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_roomcategory()) {
    roomcategory_ = new ::protobuffer::dotwproto::HDReply_HotelStaticData_RoomTypeStaticData_RoomCategory(*from.roomcategory_);
  } else {
    roomcategory_ = NULL;
  }
  twin_ = from.twin_;
  // @@protoc_insertion_point(copy_constructor:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData)
}

void HDReply_HotelStaticData_RoomTypeStaticData::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&roomcategory_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&twin_) -
      reinterpret_cast<char*>(&roomcategory_)) + sizeof(twin_));
  _cached_size_ = 0;
}

HDReply_HotelStaticData_RoomTypeStaticData::~HDReply_HotelStaticData_RoomTypeStaticData() {
  // @@protoc_insertion_point(destructor:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData)
  SharedDtor();
}

void HDReply_HotelStaticData_RoomTypeStaticData::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete roomcategory_;
}

void HDReply_HotelStaticData_RoomTypeStaticData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HDReply_HotelStaticData_RoomTypeStaticData::descriptor() {
  ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HDReply_HotelStaticData_RoomTypeStaticData& HDReply_HotelStaticData_RoomTypeStaticData::default_instance() {
  ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::InitDefaultsHDReply_HotelStaticData_RoomTypeStaticData();
  return *internal_default_instance();
}

HDReply_HotelStaticData_RoomTypeStaticData* HDReply_HotelStaticData_RoomTypeStaticData::New(::google::protobuf::Arena* arena) const {
  HDReply_HotelStaticData_RoomTypeStaticData* n = new HDReply_HotelStaticData_RoomTypeStaticData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HDReply_HotelStaticData_RoomTypeStaticData::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roomamenities_.Clear();
  supplierroomname_.Clear();
  roominfo_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && roomcategory_ != NULL) {
    delete roomcategory_;
  }
  roomcategory_ = NULL;
  twin_ = false;
  _internal_metadata_.Clear();
}

bool HDReply_HotelStaticData_RoomTypeStaticData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool twin = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &twin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string roomAmenities = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_roomamenities()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->roomamenities(this->roomamenities_size() - 1).data(),
            static_cast<int>(this->roomamenities(this->roomamenities_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.roomAmenities"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.SupplierRoomName supplierRoomName = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_supplierroomname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.RoomInfo roomInfo = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_roominfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.RoomCategory roomCategory = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_roomcategory()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData)
  return false;
#undef DO_
}

void HDReply_HotelStaticData_RoomTypeStaticData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool twin = 1;
  if (this->twin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->twin(), output);
  }

  // repeated string roomAmenities = 2;
  for (int i = 0, n = this->roomamenities_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->roomamenities(i).data(), static_cast<int>(this->roomamenities(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.roomAmenities");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->roomamenities(i), output);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // repeated .protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.SupplierRoomName supplierRoomName = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->supplierroomname_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->supplierroomname(static_cast<int>(i)), output);
  }

  // repeated .protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.RoomInfo roomInfo = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->roominfo_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->roominfo(static_cast<int>(i)), output);
  }

  // .protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.RoomCategory roomCategory = 6;
  if (this->has_roomcategory()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->roomcategory_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData)
}

::google::protobuf::uint8* HDReply_HotelStaticData_RoomTypeStaticData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool twin = 1;
  if (this->twin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->twin(), target);
  }

  // repeated string roomAmenities = 2;
  for (int i = 0, n = this->roomamenities_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->roomamenities(i).data(), static_cast<int>(this->roomamenities(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.roomAmenities");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->roomamenities(i), target);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // repeated .protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.SupplierRoomName supplierRoomName = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->supplierroomname_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->supplierroomname(static_cast<int>(i)), deterministic, target);
  }

  // repeated .protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.RoomInfo roomInfo = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->roominfo_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->roominfo(static_cast<int>(i)), deterministic, target);
  }

  // .protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.RoomCategory roomCategory = 6;
  if (this->has_roomcategory()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *this->roomcategory_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData)
  return target;
}

size_t HDReply_HotelStaticData_RoomTypeStaticData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string roomAmenities = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->roomamenities_size());
  for (int i = 0, n = this->roomamenities_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->roomamenities(i));
  }

  // repeated .protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.SupplierRoomName supplierRoomName = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->supplierroomname_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->supplierroomname(static_cast<int>(i)));
    }
  }

  // repeated .protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.RoomInfo roomInfo = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->roominfo_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->roominfo(static_cast<int>(i)));
    }
  }

  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData.RoomCategory roomCategory = 6;
  if (this->has_roomcategory()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->roomcategory_);
  }

  // bool twin = 1;
  if (this->twin() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HDReply_HotelStaticData_RoomTypeStaticData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData)
  GOOGLE_DCHECK_NE(&from, this);
  const HDReply_HotelStaticData_RoomTypeStaticData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HDReply_HotelStaticData_RoomTypeStaticData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData)
    MergeFrom(*source);
  }
}

void HDReply_HotelStaticData_RoomTypeStaticData::MergeFrom(const HDReply_HotelStaticData_RoomTypeStaticData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  roomamenities_.MergeFrom(from.roomamenities_);
  supplierroomname_.MergeFrom(from.supplierroomname_);
  roominfo_.MergeFrom(from.roominfo_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_roomcategory()) {
    mutable_roomcategory()->::protobuffer::dotwproto::HDReply_HotelStaticData_RoomTypeStaticData_RoomCategory::MergeFrom(from.roomcategory());
  }
  if (from.twin() != 0) {
    set_twin(from.twin());
  }
}

void HDReply_HotelStaticData_RoomTypeStaticData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HDReply_HotelStaticData_RoomTypeStaticData::CopyFrom(const HDReply_HotelStaticData_RoomTypeStaticData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HDReply_HotelStaticData_RoomTypeStaticData::IsInitialized() const {
  return true;
}

void HDReply_HotelStaticData_RoomTypeStaticData::Swap(HDReply_HotelStaticData_RoomTypeStaticData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HDReply_HotelStaticData_RoomTypeStaticData::InternalSwap(HDReply_HotelStaticData_RoomTypeStaticData* other) {
  using std::swap;
  roomamenities_.InternalSwap(&other->roomamenities_);
  supplierroomname_.InternalSwap(&other->supplierroomname_);
  roominfo_.InternalSwap(&other->roominfo_);
  name_.Swap(&other->name_);
  swap(roomcategory_, other->roomcategory_);
  swap(twin_, other->twin_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HDReply_HotelStaticData_RoomTypeStaticData::GetMetadata() const {
  protobuf_genProto_2fDotw_5fProtoBuf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HDReply_HotelStaticData_ImagesData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HDReply_HotelStaticData_ImagesData::kThumbFieldNumber;
const int HDReply_HotelStaticData_ImagesData::kAltFieldNumber;
const int HDReply_HotelStaticData_ImagesData::kCategoryFieldNumber;
const int HDReply_HotelStaticData_ImagesData::kUrlFieldNumber;
const int HDReply_HotelStaticData_ImagesData::kRoomTypeIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HDReply_HotelStaticData_ImagesData::HDReply_HotelStaticData_ImagesData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::InitDefaultsHDReply_HotelStaticData_ImagesData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuffer.dotwproto.HDReply.HotelStaticData.ImagesData)
}
HDReply_HotelStaticData_ImagesData::HDReply_HotelStaticData_ImagesData(const HDReply_HotelStaticData_ImagesData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  thumb_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.thumb().size() > 0) {
    thumb_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.thumb_);
  }
  alt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.alt().size() > 0) {
    alt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alt_);
  }
  category_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.category().size() > 0) {
    category_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.category_);
  }
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.url().size() > 0) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  roomtypeid_ = from.roomtypeid_;
  // @@protoc_insertion_point(copy_constructor:protobuffer.dotwproto.HDReply.HotelStaticData.ImagesData)
}

void HDReply_HotelStaticData_ImagesData::SharedCtor() {
  thumb_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  category_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  roomtypeid_ = 0;
  _cached_size_ = 0;
}

HDReply_HotelStaticData_ImagesData::~HDReply_HotelStaticData_ImagesData() {
  // @@protoc_insertion_point(destructor:protobuffer.dotwproto.HDReply.HotelStaticData.ImagesData)
  SharedDtor();
}

void HDReply_HotelStaticData_ImagesData::SharedDtor() {
  thumb_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  category_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HDReply_HotelStaticData_ImagesData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HDReply_HotelStaticData_ImagesData::descriptor() {
  ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HDReply_HotelStaticData_ImagesData& HDReply_HotelStaticData_ImagesData::default_instance() {
  ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::InitDefaultsHDReply_HotelStaticData_ImagesData();
  return *internal_default_instance();
}

HDReply_HotelStaticData_ImagesData* HDReply_HotelStaticData_ImagesData::New(::google::protobuf::Arena* arena) const {
  HDReply_HotelStaticData_ImagesData* n = new HDReply_HotelStaticData_ImagesData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HDReply_HotelStaticData_ImagesData::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuffer.dotwproto.HDReply.HotelStaticData.ImagesData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  thumb_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  category_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  roomtypeid_ = 0;
  _internal_metadata_.Clear();
}

bool HDReply_HotelStaticData_ImagesData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuffer.dotwproto.HDReply.HotelStaticData.ImagesData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string thumb = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_thumb()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->thumb().data(), static_cast<int>(this->thumb().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuffer.dotwproto.HDReply.HotelStaticData.ImagesData.thumb"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string alt = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_alt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->alt().data(), static_cast<int>(this->alt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuffer.dotwproto.HDReply.HotelStaticData.ImagesData.alt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string category = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_category()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->category().data(), static_cast<int>(this->category().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuffer.dotwproto.HDReply.HotelStaticData.ImagesData.category"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string url = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuffer.dotwproto.HDReply.HotelStaticData.ImagesData.url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 roomTypeId = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roomtypeid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuffer.dotwproto.HDReply.HotelStaticData.ImagesData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuffer.dotwproto.HDReply.HotelStaticData.ImagesData)
  return false;
#undef DO_
}

void HDReply_HotelStaticData_ImagesData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuffer.dotwproto.HDReply.HotelStaticData.ImagesData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string thumb = 1;
  if (this->thumb().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->thumb().data(), static_cast<int>(this->thumb().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.ImagesData.thumb");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->thumb(), output);
  }

  // string alt = 2;
  if (this->alt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->alt().data(), static_cast<int>(this->alt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.ImagesData.alt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->alt(), output);
  }

  // string category = 3;
  if (this->category().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->category().data(), static_cast<int>(this->category().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.ImagesData.category");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->category(), output);
  }

  // string url = 4;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.ImagesData.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->url(), output);
  }

  // int32 roomTypeId = 5;
  if (this->roomtypeid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->roomtypeid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuffer.dotwproto.HDReply.HotelStaticData.ImagesData)
}

::google::protobuf::uint8* HDReply_HotelStaticData_ImagesData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuffer.dotwproto.HDReply.HotelStaticData.ImagesData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string thumb = 1;
  if (this->thumb().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->thumb().data(), static_cast<int>(this->thumb().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.ImagesData.thumb");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->thumb(), target);
  }

  // string alt = 2;
  if (this->alt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->alt().data(), static_cast<int>(this->alt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.ImagesData.alt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->alt(), target);
  }

  // string category = 3;
  if (this->category().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->category().data(), static_cast<int>(this->category().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.ImagesData.category");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->category(), target);
  }

  // string url = 4;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.ImagesData.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->url(), target);
  }

  // int32 roomTypeId = 5;
  if (this->roomtypeid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->roomtypeid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuffer.dotwproto.HDReply.HotelStaticData.ImagesData)
  return target;
}

size_t HDReply_HotelStaticData_ImagesData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuffer.dotwproto.HDReply.HotelStaticData.ImagesData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string thumb = 1;
  if (this->thumb().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->thumb());
  }

  // string alt = 2;
  if (this->alt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->alt());
  }

  // string category = 3;
  if (this->category().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->category());
  }

  // string url = 4;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());
  }

  // int32 roomTypeId = 5;
  if (this->roomtypeid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->roomtypeid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HDReply_HotelStaticData_ImagesData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuffer.dotwproto.HDReply.HotelStaticData.ImagesData)
  GOOGLE_DCHECK_NE(&from, this);
  const HDReply_HotelStaticData_ImagesData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HDReply_HotelStaticData_ImagesData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuffer.dotwproto.HDReply.HotelStaticData.ImagesData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuffer.dotwproto.HDReply.HotelStaticData.ImagesData)
    MergeFrom(*source);
  }
}

void HDReply_HotelStaticData_ImagesData::MergeFrom(const HDReply_HotelStaticData_ImagesData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuffer.dotwproto.HDReply.HotelStaticData.ImagesData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.thumb().size() > 0) {

    thumb_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.thumb_);
  }
  if (from.alt().size() > 0) {

    alt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alt_);
  }
  if (from.category().size() > 0) {

    category_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.category_);
  }
  if (from.url().size() > 0) {

    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  if (from.roomtypeid() != 0) {
    set_roomtypeid(from.roomtypeid());
  }
}

void HDReply_HotelStaticData_ImagesData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuffer.dotwproto.HDReply.HotelStaticData.ImagesData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HDReply_HotelStaticData_ImagesData::CopyFrom(const HDReply_HotelStaticData_ImagesData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuffer.dotwproto.HDReply.HotelStaticData.ImagesData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HDReply_HotelStaticData_ImagesData::IsInitialized() const {
  return true;
}

void HDReply_HotelStaticData_ImagesData::Swap(HDReply_HotelStaticData_ImagesData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HDReply_HotelStaticData_ImagesData::InternalSwap(HDReply_HotelStaticData_ImagesData* other) {
  using std::swap;
  thumb_.Swap(&other->thumb_);
  alt_.Swap(&other->alt_);
  category_.Swap(&other->category_);
  url_.Swap(&other->url_);
  swap(roomtypeid_, other->roomtypeid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HDReply_HotelStaticData_ImagesData::GetMetadata() const {
  protobuf_genProto_2fDotw_5fProtoBuf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HDReply_HotelStaticData_TransportationData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HDReply_HotelStaticData_TransportationData::kTypeFieldNumber;
const int HDReply_HotelStaticData_TransportationData::kNameFieldNumber;
const int HDReply_HotelStaticData_TransportationData::kDistFieldNumber;
const int HDReply_HotelStaticData_TransportationData::kDistanceUnitFieldNumber;
const int HDReply_HotelStaticData_TransportationData::kDistTimeFieldNumber;
const int HDReply_HotelStaticData_TransportationData::kDirectionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HDReply_HotelStaticData_TransportationData::HDReply_HotelStaticData_TransportationData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::InitDefaultsHDReply_HotelStaticData_TransportationData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuffer.dotwproto.HDReply.HotelStaticData.TransportationData)
}
HDReply_HotelStaticData_TransportationData::HDReply_HotelStaticData_TransportationData(const HDReply_HotelStaticData_TransportationData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  dist_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.dist().size() > 0) {
    dist_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dist_);
  }
  distanceunit_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.distanceunit().size() > 0) {
    distanceunit_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.distanceunit_);
  }
  disttime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.disttime().size() > 0) {
    disttime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.disttime_);
  }
  directions_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.directions().size() > 0) {
    directions_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.directions_);
  }
  // @@protoc_insertion_point(copy_constructor:protobuffer.dotwproto.HDReply.HotelStaticData.TransportationData)
}

void HDReply_HotelStaticData_TransportationData::SharedCtor() {
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dist_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  distanceunit_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  disttime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  directions_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

HDReply_HotelStaticData_TransportationData::~HDReply_HotelStaticData_TransportationData() {
  // @@protoc_insertion_point(destructor:protobuffer.dotwproto.HDReply.HotelStaticData.TransportationData)
  SharedDtor();
}

void HDReply_HotelStaticData_TransportationData::SharedDtor() {
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dist_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  distanceunit_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  disttime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  directions_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HDReply_HotelStaticData_TransportationData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HDReply_HotelStaticData_TransportationData::descriptor() {
  ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HDReply_HotelStaticData_TransportationData& HDReply_HotelStaticData_TransportationData::default_instance() {
  ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::InitDefaultsHDReply_HotelStaticData_TransportationData();
  return *internal_default_instance();
}

HDReply_HotelStaticData_TransportationData* HDReply_HotelStaticData_TransportationData::New(::google::protobuf::Arena* arena) const {
  HDReply_HotelStaticData_TransportationData* n = new HDReply_HotelStaticData_TransportationData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HDReply_HotelStaticData_TransportationData::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuffer.dotwproto.HDReply.HotelStaticData.TransportationData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dist_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  distanceunit_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  disttime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  directions_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool HDReply_HotelStaticData_TransportationData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuffer.dotwproto.HDReply.HotelStaticData.TransportationData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuffer.dotwproto.HDReply.HotelStaticData.TransportationData.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuffer.dotwproto.HDReply.HotelStaticData.TransportationData.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string dist = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dist()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->dist().data(), static_cast<int>(this->dist().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuffer.dotwproto.HDReply.HotelStaticData.TransportationData.dist"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string distanceUnit = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_distanceunit()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->distanceunit().data(), static_cast<int>(this->distanceunit().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuffer.dotwproto.HDReply.HotelStaticData.TransportationData.distanceUnit"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string distTime = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_disttime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->disttime().data(), static_cast<int>(this->disttime().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuffer.dotwproto.HDReply.HotelStaticData.TransportationData.distTime"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string directions = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_directions()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->directions().data(), static_cast<int>(this->directions().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuffer.dotwproto.HDReply.HotelStaticData.TransportationData.directions"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuffer.dotwproto.HDReply.HotelStaticData.TransportationData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuffer.dotwproto.HDReply.HotelStaticData.TransportationData)
  return false;
#undef DO_
}

void HDReply_HotelStaticData_TransportationData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuffer.dotwproto.HDReply.HotelStaticData.TransportationData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type = 1;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.TransportationData.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.TransportationData.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // string dist = 3;
  if (this->dist().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dist().data(), static_cast<int>(this->dist().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.TransportationData.dist");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->dist(), output);
  }

  // string distanceUnit = 4;
  if (this->distanceunit().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->distanceunit().data(), static_cast<int>(this->distanceunit().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.TransportationData.distanceUnit");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->distanceunit(), output);
  }

  // string distTime = 5;
  if (this->disttime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->disttime().data(), static_cast<int>(this->disttime().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.TransportationData.distTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->disttime(), output);
  }

  // string directions = 6;
  if (this->directions().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->directions().data(), static_cast<int>(this->directions().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.TransportationData.directions");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->directions(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuffer.dotwproto.HDReply.HotelStaticData.TransportationData)
}

::google::protobuf::uint8* HDReply_HotelStaticData_TransportationData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuffer.dotwproto.HDReply.HotelStaticData.TransportationData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type = 1;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.TransportationData.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->type(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.TransportationData.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // string dist = 3;
  if (this->dist().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dist().data(), static_cast<int>(this->dist().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.TransportationData.dist");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->dist(), target);
  }

  // string distanceUnit = 4;
  if (this->distanceunit().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->distanceunit().data(), static_cast<int>(this->distanceunit().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.TransportationData.distanceUnit");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->distanceunit(), target);
  }

  // string distTime = 5;
  if (this->disttime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->disttime().data(), static_cast<int>(this->disttime().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.TransportationData.distTime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->disttime(), target);
  }

  // string directions = 6;
  if (this->directions().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->directions().data(), static_cast<int>(this->directions().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.TransportationData.directions");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->directions(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuffer.dotwproto.HDReply.HotelStaticData.TransportationData)
  return target;
}

size_t HDReply_HotelStaticData_TransportationData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuffer.dotwproto.HDReply.HotelStaticData.TransportationData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string type = 1;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string dist = 3;
  if (this->dist().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dist());
  }

  // string distanceUnit = 4;
  if (this->distanceunit().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->distanceunit());
  }

  // string distTime = 5;
  if (this->disttime().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->disttime());
  }

  // string directions = 6;
  if (this->directions().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->directions());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HDReply_HotelStaticData_TransportationData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuffer.dotwproto.HDReply.HotelStaticData.TransportationData)
  GOOGLE_DCHECK_NE(&from, this);
  const HDReply_HotelStaticData_TransportationData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HDReply_HotelStaticData_TransportationData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuffer.dotwproto.HDReply.HotelStaticData.TransportationData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuffer.dotwproto.HDReply.HotelStaticData.TransportationData)
    MergeFrom(*source);
  }
}

void HDReply_HotelStaticData_TransportationData::MergeFrom(const HDReply_HotelStaticData_TransportationData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuffer.dotwproto.HDReply.HotelStaticData.TransportationData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.dist().size() > 0) {

    dist_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dist_);
  }
  if (from.distanceunit().size() > 0) {

    distanceunit_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.distanceunit_);
  }
  if (from.disttime().size() > 0) {

    disttime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.disttime_);
  }
  if (from.directions().size() > 0) {

    directions_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.directions_);
  }
}

void HDReply_HotelStaticData_TransportationData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuffer.dotwproto.HDReply.HotelStaticData.TransportationData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HDReply_HotelStaticData_TransportationData::CopyFrom(const HDReply_HotelStaticData_TransportationData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuffer.dotwproto.HDReply.HotelStaticData.TransportationData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HDReply_HotelStaticData_TransportationData::IsInitialized() const {
  return true;
}

void HDReply_HotelStaticData_TransportationData::Swap(HDReply_HotelStaticData_TransportationData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HDReply_HotelStaticData_TransportationData::InternalSwap(HDReply_HotelStaticData_TransportationData* other) {
  using std::swap;
  type_.Swap(&other->type_);
  name_.Swap(&other->name_);
  dist_.Swap(&other->dist_);
  distanceunit_.Swap(&other->distanceunit_);
  disttime_.Swap(&other->disttime_);
  directions_.Swap(&other->directions_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HDReply_HotelStaticData_TransportationData::GetMetadata() const {
  protobuf_genProto_2fDotw_5fProtoBuf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HDReply_HotelStaticData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HDReply_HotelStaticData::kRoomTypeStaticDataListFieldNumber;
const int HDReply_HotelStaticData::kDescription1FieldNumber;
const int HDReply_HotelStaticData::kDescription2FieldNumber;
const int HDReply_HotelStaticData::kGeoPointFieldNumber;
const int HDReply_HotelStaticData::kRatingDescriptionFieldNumber;
const int HDReply_HotelStaticData::kImagesFieldNumber;
const int HDReply_HotelStaticData::kDirectFieldNumber;
const int HDReply_HotelStaticData::kHotelPreferenceFieldNumber;
const int HDReply_HotelStaticData::kPreferredFieldNumber;
const int HDReply_HotelStaticData::kBuiltYearFieldNumber;
const int HDReply_HotelStaticData::kRenovationYearFieldNumber;
const int HDReply_HotelStaticData::kFloorsFieldNumber;
const int HDReply_HotelStaticData::kNoOfRoomsFieldNumber;
const int HDReply_HotelStaticData::kLuxuryFieldNumber;
const int HDReply_HotelStaticData::kHotelNameFieldNumber;
const int HDReply_HotelStaticData::kAddressFieldNumber;
const int HDReply_HotelStaticData::kZipCodeFieldNumber;
const int HDReply_HotelStaticData::kLocationFieldNumber;
const int HDReply_HotelStaticData::kLocationIdFieldNumber;
const int HDReply_HotelStaticData::kLocation1FieldNumber;
const int HDReply_HotelStaticData::kLocation2FieldNumber;
const int HDReply_HotelStaticData::kLocation3FieldNumber;
const int HDReply_HotelStaticData::kCityNameFieldNumber;
const int HDReply_HotelStaticData::kCityCodeFieldNumber;
const int HDReply_HotelStaticData::kStateNameFieldNumber;
const int HDReply_HotelStaticData::kStateCodeFieldNumber;
const int HDReply_HotelStaticData::kCountryNameFieldNumber;
const int HDReply_HotelStaticData::kCountryCodeFieldNumber;
const int HDReply_HotelStaticData::kRegionNameFieldNumber;
const int HDReply_HotelStaticData::kRegionCodeFieldNumber;
const int HDReply_HotelStaticData::kAmenitieFieldNumber;
const int HDReply_HotelStaticData::kLeisureFieldNumber;
const int HDReply_HotelStaticData::kBusinessFieldNumber;
const int HDReply_HotelStaticData::kTransportationFieldNumber;
const int HDReply_HotelStaticData::kHotelPhoneFieldNumber;
const int HDReply_HotelStaticData::kHotelCheckInFieldNumber;
const int HDReply_HotelStaticData::kHotelCheckOutFieldNumber;
const int HDReply_HotelStaticData::kMinAgeFieldNumber;
const int HDReply_HotelStaticData::kRatingFieldNumber;
const int HDReply_HotelStaticData::kFireSafetyFieldNumber;
const int HDReply_HotelStaticData::kChainFieldNumber;
const int HDReply_HotelStaticData::kLastUpdatedFieldNumber;
const int HDReply_HotelStaticData::kTransferMandatoryFieldNumber;
const int HDReply_HotelStaticData::kTariffNotesFieldNumber;
const int HDReply_HotelStaticData::kChainNameFieldNumber;
const int HDReply_HotelStaticData::kHotelPropertyFieldNumber;
const int HDReply_HotelStaticData::kFullAddressFieldNumber;
const int HDReply_HotelStaticData::kAttractionFieldNumber;
const int HDReply_HotelStaticData::kExclusiveFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HDReply_HotelStaticData::HDReply_HotelStaticData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::InitDefaultsHDReply_HotelStaticData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuffer.dotwproto.HDReply.HotelStaticData)
}
HDReply_HotelStaticData::HDReply_HotelStaticData(const HDReply_HotelStaticData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      roomtypestaticdatalist_(from.roomtypestaticdatalist_),
      geopoint_(from.geopoint_),
      images_(from.images_),
      hotelpreference_(from.hotelpreference_),
      amenitie_(from.amenitie_),
      leisure_(from.leisure_),
      business_(from.business_),
      transportation_(from.transportation_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  description1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description1().size() > 0) {
    description1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description1_);
  }
  description2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description2().size() > 0) {
    description2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description2_);
  }
  ratingdescription_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ratingdescription().size() > 0) {
    ratingdescription_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ratingdescription_);
  }
  hotelname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hotelname().size() > 0) {
    hotelname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hotelname_);
  }
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.address().size() > 0) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  zipcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zipcode().size() > 0) {
    zipcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zipcode_);
  }
  location_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.location().size() > 0) {
    location_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_);
  }
  location1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.location1().size() > 0) {
    location1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location1_);
  }
  location2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.location2().size() > 0) {
    location2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location2_);
  }
  location3_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.location3().size() > 0) {
    location3_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location3_);
  }
  cityname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cityname().size() > 0) {
    cityname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cityname_);
  }
  statename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.statename().size() > 0) {
    statename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.statename_);
  }
  countryname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.countryname().size() > 0) {
    countryname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.countryname_);
  }
  regionname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.regionname().size() > 0) {
    regionname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.regionname_);
  }
  hotelphone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hotelphone().size() > 0) {
    hotelphone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hotelphone_);
  }
  lastupdated_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.lastupdated().size() > 0) {
    lastupdated_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lastupdated_);
  }
  tariffnotes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.tariffnotes().size() > 0) {
    tariffnotes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tariffnotes_);
  }
  chainname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.chainname().size() > 0) {
    chainname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chainname_);
  }
  fulladdress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.fulladdress().size() > 0) {
    fulladdress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fulladdress_);
  }
  attraction_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.attraction().size() > 0) {
    attraction_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attraction_);
  }
  ::memcpy(&builtyear_, &from.builtyear_,
    static_cast<size_t>(reinterpret_cast<char*>(&exclusive_) -
    reinterpret_cast<char*>(&builtyear_)) + sizeof(exclusive_));
  // @@protoc_insertion_point(copy_constructor:protobuffer.dotwproto.HDReply.HotelStaticData)
}

void HDReply_HotelStaticData::SharedCtor() {
  description1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ratingdescription_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hotelname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zipcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location3_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cityname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  statename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  countryname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  regionname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hotelphone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lastupdated_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tariffnotes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chainname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fulladdress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attraction_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&builtyear_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&exclusive_) -
      reinterpret_cast<char*>(&builtyear_)) + sizeof(exclusive_));
  _cached_size_ = 0;
}

HDReply_HotelStaticData::~HDReply_HotelStaticData() {
  // @@protoc_insertion_point(destructor:protobuffer.dotwproto.HDReply.HotelStaticData)
  SharedDtor();
}

void HDReply_HotelStaticData::SharedDtor() {
  description1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ratingdescription_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hotelname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zipcode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location3_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cityname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  statename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  countryname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  regionname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hotelphone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lastupdated_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tariffnotes_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chainname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fulladdress_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attraction_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HDReply_HotelStaticData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HDReply_HotelStaticData::descriptor() {
  ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HDReply_HotelStaticData& HDReply_HotelStaticData::default_instance() {
  ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::InitDefaultsHDReply_HotelStaticData();
  return *internal_default_instance();
}

HDReply_HotelStaticData* HDReply_HotelStaticData::New(::google::protobuf::Arena* arena) const {
  HDReply_HotelStaticData* n = new HDReply_HotelStaticData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HDReply_HotelStaticData::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuffer.dotwproto.HDReply.HotelStaticData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roomtypestaticdatalist_.Clear();
  geopoint_.Clear();
  images_.Clear();
  hotelpreference_.Clear();
  amenitie_.Clear();
  leisure_.Clear();
  business_.Clear();
  transportation_.Clear();
  description1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ratingdescription_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hotelname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zipcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location3_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cityname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  statename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  countryname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  regionname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hotelphone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lastupdated_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tariffnotes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chainname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fulladdress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attraction_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&builtyear_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&exclusive_) -
      reinterpret_cast<char*>(&builtyear_)) + sizeof(exclusive_));
  _internal_metadata_.Clear();
}

bool HDReply_HotelStaticData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuffer.dotwproto.HDReply.HotelStaticData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData roomTypeStaticDataList = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_roomtypestaticdatalist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description1 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description1()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description1().data(), static_cast<int>(this->description1().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuffer.dotwproto.HDReply.HotelStaticData.description1"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description2 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description2()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description2().data(), static_cast<int>(this->description2().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuffer.dotwproto.HDReply.HotelStaticData.description2"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string geoPoint = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_geopoint()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->geopoint(this->geopoint_size() - 1).data(),
            static_cast<int>(this->geopoint(this->geopoint_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuffer.dotwproto.HDReply.HotelStaticData.geoPoint"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ratingDescription = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ratingdescription()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ratingdescription().data(), static_cast<int>(this->ratingdescription().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuffer.dotwproto.HDReply.HotelStaticData.ratingDescription"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .protobuffer.dotwproto.HDReply.HotelStaticData.ImagesData images = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_images()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool direct = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &direct_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 hotelPreference = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_hotelpreference())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 66u, input, this->mutable_hotelpreference())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool preferred = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &preferred_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 builtYear = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &builtyear_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 renovationYear = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &renovationyear_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 floors = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &floors_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 noOfRooms = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &noofrooms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool luxury = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &luxury_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string hotelName = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hotelname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->hotelname().data(), static_cast<int>(this->hotelname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuffer.dotwproto.HDReply.HotelStaticData.hotelName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string address = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->address().data(), static_cast<int>(this->address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuffer.dotwproto.HDReply.HotelStaticData.address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zipCode = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zipcode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zipcode().data(), static_cast<int>(this->zipcode().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuffer.dotwproto.HDReply.HotelStaticData.zipCode"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string location = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_location()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->location().data(), static_cast<int>(this->location().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuffer.dotwproto.HDReply.HotelStaticData.location"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 locationId = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &locationid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string location1 = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_location1()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->location1().data(), static_cast<int>(this->location1().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuffer.dotwproto.HDReply.HotelStaticData.location1"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string location2 = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_location2()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->location2().data(), static_cast<int>(this->location2().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuffer.dotwproto.HDReply.HotelStaticData.location2"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string location3 = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_location3()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->location3().data(), static_cast<int>(this->location3().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuffer.dotwproto.HDReply.HotelStaticData.location3"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cityName = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cityname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cityname().data(), static_cast<int>(this->cityname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuffer.dotwproto.HDReply.HotelStaticData.cityName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 cityCode = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 192 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &citycode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string stateName = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 202 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_statename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->statename().data(), static_cast<int>(this->statename().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuffer.dotwproto.HDReply.HotelStaticData.stateName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 stateCode = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(208u /* 208 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &statecode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string countryName = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 218 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_countryname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->countryname().data(), static_cast<int>(this->countryname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuffer.dotwproto.HDReply.HotelStaticData.countryName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 countryCode = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(224u /* 224 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &countrycode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string regionName = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 234 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_regionname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->regionname().data(), static_cast<int>(this->regionname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuffer.dotwproto.HDReply.HotelStaticData.regionName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 regionCode = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 240 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &regioncode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string amenitie = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 250 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_amenitie()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->amenitie(this->amenitie_size() - 1).data(),
            static_cast<int>(this->amenitie(this->amenitie_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuffer.dotwproto.HDReply.HotelStaticData.amenitie"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string leisure = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 258 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_leisure()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->leisure(this->leisure_size() - 1).data(),
            static_cast<int>(this->leisure(this->leisure_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuffer.dotwproto.HDReply.HotelStaticData.leisure"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string business = 33;
      case 33: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 266 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_business()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->business(this->business_size() - 1).data(),
            static_cast<int>(this->business(this->business_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuffer.dotwproto.HDReply.HotelStaticData.business"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .protobuffer.dotwproto.HDReply.HotelStaticData.TransportationData transportation = 34;
      case 34: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 274 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_transportation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string hotelPhone = 35;
      case 35: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 282 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hotelphone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->hotelphone().data(), static_cast<int>(this->hotelphone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuffer.dotwproto.HDReply.HotelStaticData.hotelPhone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 hotelCheckIn = 36;
      case 36: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 288 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hotelcheckin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 hotelCheckOut = 37;
      case 37: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 296 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hotelcheckout_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 minAge = 38;
      case 38: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 304 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &minage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 rating = 39;
      case 39: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 312 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rating_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool fireSafety = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 320 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &firesafety_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 chain = 41;
      case 41: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 328 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chain_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string lastUpdated = 42;
      case 42: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 338 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lastupdated()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->lastupdated().data(), static_cast<int>(this->lastupdated().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuffer.dotwproto.HDReply.HotelStaticData.lastUpdated"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 transferMandatory = 43;
      case 43: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 344 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &transfermandatory_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string tariffNotes = 44;
      case 44: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 354 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tariffnotes()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tariffnotes().data(), static_cast<int>(this->tariffnotes().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuffer.dotwproto.HDReply.HotelStaticData.tariffNotes"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string chainName = 45;
      case 45: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 362 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_chainname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->chainname().data(), static_cast<int>(this->chainname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuffer.dotwproto.HDReply.HotelStaticData.chainName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 hotelProperty = 46;
      case 46: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 368 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hotelproperty_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string fullAddress = 47;
      case 47: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 378 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fulladdress()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fulladdress().data(), static_cast<int>(this->fulladdress().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuffer.dotwproto.HDReply.HotelStaticData.fullAddress"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string attraction = 48;
      case 48: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_attraction()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->attraction().data(), static_cast<int>(this->attraction().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuffer.dotwproto.HDReply.HotelStaticData.attraction"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool exclusive = 49;
      case 49: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 392 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &exclusive_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuffer.dotwproto.HDReply.HotelStaticData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuffer.dotwproto.HDReply.HotelStaticData)
  return false;
#undef DO_
}

void HDReply_HotelStaticData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuffer.dotwproto.HDReply.HotelStaticData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData roomTypeStaticDataList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->roomtypestaticdatalist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->roomtypestaticdatalist(static_cast<int>(i)), output);
  }

  // string description1 = 2;
  if (this->description1().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description1().data(), static_cast<int>(this->description1().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.description1");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->description1(), output);
  }

  // string description2 = 3;
  if (this->description2().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description2().data(), static_cast<int>(this->description2().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.description2");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->description2(), output);
  }

  // repeated string geoPoint = 4;
  for (int i = 0, n = this->geopoint_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->geopoint(i).data(), static_cast<int>(this->geopoint(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.geoPoint");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->geopoint(i), output);
  }

  // string ratingDescription = 5;
  if (this->ratingdescription().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ratingdescription().data(), static_cast<int>(this->ratingdescription().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.ratingDescription");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->ratingdescription(), output);
  }

  // repeated .protobuffer.dotwproto.HDReply.HotelStaticData.ImagesData images = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->images_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->images(static_cast<int>(i)), output);
  }

  // bool direct = 7;
  if (this->direct() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->direct(), output);
  }

  // repeated int32 hotelPreference = 8;
  if (this->hotelpreference_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _hotelpreference_cached_byte_size_));
  }
  for (int i = 0, n = this->hotelpreference_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->hotelpreference(i), output);
  }

  // bool preferred = 9;
  if (this->preferred() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->preferred(), output);
  }

  // int32 builtYear = 10;
  if (this->builtyear() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->builtyear(), output);
  }

  // int32 renovationYear = 11;
  if (this->renovationyear() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->renovationyear(), output);
  }

  // int32 floors = 12;
  if (this->floors() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->floors(), output);
  }

  // int32 noOfRooms = 13;
  if (this->noofrooms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->noofrooms(), output);
  }

  // bool luxury = 14;
  if (this->luxury() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(14, this->luxury(), output);
  }

  // string hotelName = 15;
  if (this->hotelname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hotelname().data(), static_cast<int>(this->hotelname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.hotelName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->hotelname(), output);
  }

  // string address = 16;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->address(), output);
  }

  // string zipCode = 17;
  if (this->zipcode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zipcode().data(), static_cast<int>(this->zipcode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.zipCode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->zipcode(), output);
  }

  // string location = 18;
  if (this->location().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location().data(), static_cast<int>(this->location().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.location");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->location(), output);
  }

  // int32 locationId = 19;
  if (this->locationid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(19, this->locationid(), output);
  }

  // string location1 = 20;
  if (this->location1().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location1().data(), static_cast<int>(this->location1().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.location1");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->location1(), output);
  }

  // string location2 = 21;
  if (this->location2().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location2().data(), static_cast<int>(this->location2().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.location2");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      21, this->location2(), output);
  }

  // string location3 = 22;
  if (this->location3().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location3().data(), static_cast<int>(this->location3().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.location3");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      22, this->location3(), output);
  }

  // string cityName = 23;
  if (this->cityname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cityname().data(), static_cast<int>(this->cityname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.cityName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      23, this->cityname(), output);
  }

  // int32 cityCode = 24;
  if (this->citycode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(24, this->citycode(), output);
  }

  // string stateName = 25;
  if (this->statename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->statename().data(), static_cast<int>(this->statename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.stateName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      25, this->statename(), output);
  }

  // int32 stateCode = 26;
  if (this->statecode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(26, this->statecode(), output);
  }

  // string countryName = 27;
  if (this->countryname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->countryname().data(), static_cast<int>(this->countryname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.countryName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      27, this->countryname(), output);
  }

  // int32 countryCode = 28;
  if (this->countrycode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(28, this->countrycode(), output);
  }

  // string regionName = 29;
  if (this->regionname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->regionname().data(), static_cast<int>(this->regionname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.regionName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      29, this->regionname(), output);
  }

  // int32 regionCode = 30;
  if (this->regioncode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(30, this->regioncode(), output);
  }

  // repeated string amenitie = 31;
  for (int i = 0, n = this->amenitie_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->amenitie(i).data(), static_cast<int>(this->amenitie(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.amenitie");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      31, this->amenitie(i), output);
  }

  // repeated string leisure = 32;
  for (int i = 0, n = this->leisure_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->leisure(i).data(), static_cast<int>(this->leisure(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.leisure");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      32, this->leisure(i), output);
  }

  // repeated string business = 33;
  for (int i = 0, n = this->business_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->business(i).data(), static_cast<int>(this->business(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.business");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      33, this->business(i), output);
  }

  // repeated .protobuffer.dotwproto.HDReply.HotelStaticData.TransportationData transportation = 34;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->transportation_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      34, this->transportation(static_cast<int>(i)), output);
  }

  // string hotelPhone = 35;
  if (this->hotelphone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hotelphone().data(), static_cast<int>(this->hotelphone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.hotelPhone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      35, this->hotelphone(), output);
  }

  // int32 hotelCheckIn = 36;
  if (this->hotelcheckin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(36, this->hotelcheckin(), output);
  }

  // int32 hotelCheckOut = 37;
  if (this->hotelcheckout() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(37, this->hotelcheckout(), output);
  }

  // int32 minAge = 38;
  if (this->minage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(38, this->minage(), output);
  }

  // int32 rating = 39;
  if (this->rating() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(39, this->rating(), output);
  }

  // bool fireSafety = 40;
  if (this->firesafety() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(40, this->firesafety(), output);
  }

  // int32 chain = 41;
  if (this->chain() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(41, this->chain(), output);
  }

  // string lastUpdated = 42;
  if (this->lastupdated().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->lastupdated().data(), static_cast<int>(this->lastupdated().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.lastUpdated");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      42, this->lastupdated(), output);
  }

  // int32 transferMandatory = 43;
  if (this->transfermandatory() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(43, this->transfermandatory(), output);
  }

  // string tariffNotes = 44;
  if (this->tariffnotes().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tariffnotes().data(), static_cast<int>(this->tariffnotes().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.tariffNotes");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      44, this->tariffnotes(), output);
  }

  // string chainName = 45;
  if (this->chainname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->chainname().data(), static_cast<int>(this->chainname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.chainName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      45, this->chainname(), output);
  }

  // int32 hotelProperty = 46;
  if (this->hotelproperty() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(46, this->hotelproperty(), output);
  }

  // string fullAddress = 47;
  if (this->fulladdress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fulladdress().data(), static_cast<int>(this->fulladdress().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.fullAddress");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      47, this->fulladdress(), output);
  }

  // string attraction = 48;
  if (this->attraction().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->attraction().data(), static_cast<int>(this->attraction().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.attraction");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      48, this->attraction(), output);
  }

  // bool exclusive = 49;
  if (this->exclusive() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(49, this->exclusive(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuffer.dotwproto.HDReply.HotelStaticData)
}

::google::protobuf::uint8* HDReply_HotelStaticData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuffer.dotwproto.HDReply.HotelStaticData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData roomTypeStaticDataList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->roomtypestaticdatalist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->roomtypestaticdatalist(static_cast<int>(i)), deterministic, target);
  }

  // string description1 = 2;
  if (this->description1().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description1().data(), static_cast<int>(this->description1().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.description1");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->description1(), target);
  }

  // string description2 = 3;
  if (this->description2().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description2().data(), static_cast<int>(this->description2().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.description2");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->description2(), target);
  }

  // repeated string geoPoint = 4;
  for (int i = 0, n = this->geopoint_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->geopoint(i).data(), static_cast<int>(this->geopoint(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.geoPoint");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->geopoint(i), target);
  }

  // string ratingDescription = 5;
  if (this->ratingdescription().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ratingdescription().data(), static_cast<int>(this->ratingdescription().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.ratingDescription");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->ratingdescription(), target);
  }

  // repeated .protobuffer.dotwproto.HDReply.HotelStaticData.ImagesData images = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->images_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->images(static_cast<int>(i)), deterministic, target);
  }

  // bool direct = 7;
  if (this->direct() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->direct(), target);
  }

  // repeated int32 hotelPreference = 8;
  if (this->hotelpreference_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _hotelpreference_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->hotelpreference_, target);
  }

  // bool preferred = 9;
  if (this->preferred() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->preferred(), target);
  }

  // int32 builtYear = 10;
  if (this->builtyear() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->builtyear(), target);
  }

  // int32 renovationYear = 11;
  if (this->renovationyear() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->renovationyear(), target);
  }

  // int32 floors = 12;
  if (this->floors() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->floors(), target);
  }

  // int32 noOfRooms = 13;
  if (this->noofrooms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->noofrooms(), target);
  }

  // bool luxury = 14;
  if (this->luxury() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(14, this->luxury(), target);
  }

  // string hotelName = 15;
  if (this->hotelname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hotelname().data(), static_cast<int>(this->hotelname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.hotelName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->hotelname(), target);
  }

  // string address = 16;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->address(), target);
  }

  // string zipCode = 17;
  if (this->zipcode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zipcode().data(), static_cast<int>(this->zipcode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.zipCode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->zipcode(), target);
  }

  // string location = 18;
  if (this->location().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location().data(), static_cast<int>(this->location().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.location");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->location(), target);
  }

  // int32 locationId = 19;
  if (this->locationid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(19, this->locationid(), target);
  }

  // string location1 = 20;
  if (this->location1().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location1().data(), static_cast<int>(this->location1().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.location1");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->location1(), target);
  }

  // string location2 = 21;
  if (this->location2().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location2().data(), static_cast<int>(this->location2().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.location2");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->location2(), target);
  }

  // string location3 = 22;
  if (this->location3().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location3().data(), static_cast<int>(this->location3().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.location3");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        22, this->location3(), target);
  }

  // string cityName = 23;
  if (this->cityname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cityname().data(), static_cast<int>(this->cityname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.cityName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        23, this->cityname(), target);
  }

  // int32 cityCode = 24;
  if (this->citycode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(24, this->citycode(), target);
  }

  // string stateName = 25;
  if (this->statename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->statename().data(), static_cast<int>(this->statename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.stateName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        25, this->statename(), target);
  }

  // int32 stateCode = 26;
  if (this->statecode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(26, this->statecode(), target);
  }

  // string countryName = 27;
  if (this->countryname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->countryname().data(), static_cast<int>(this->countryname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.countryName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        27, this->countryname(), target);
  }

  // int32 countryCode = 28;
  if (this->countrycode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(28, this->countrycode(), target);
  }

  // string regionName = 29;
  if (this->regionname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->regionname().data(), static_cast<int>(this->regionname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.regionName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        29, this->regionname(), target);
  }

  // int32 regionCode = 30;
  if (this->regioncode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(30, this->regioncode(), target);
  }

  // repeated string amenitie = 31;
  for (int i = 0, n = this->amenitie_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->amenitie(i).data(), static_cast<int>(this->amenitie(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.amenitie");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(31, this->amenitie(i), target);
  }

  // repeated string leisure = 32;
  for (int i = 0, n = this->leisure_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->leisure(i).data(), static_cast<int>(this->leisure(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.leisure");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(32, this->leisure(i), target);
  }

  // repeated string business = 33;
  for (int i = 0, n = this->business_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->business(i).data(), static_cast<int>(this->business(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.business");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(33, this->business(i), target);
  }

  // repeated .protobuffer.dotwproto.HDReply.HotelStaticData.TransportationData transportation = 34;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->transportation_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        34, this->transportation(static_cast<int>(i)), deterministic, target);
  }

  // string hotelPhone = 35;
  if (this->hotelphone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hotelphone().data(), static_cast<int>(this->hotelphone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.hotelPhone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        35, this->hotelphone(), target);
  }

  // int32 hotelCheckIn = 36;
  if (this->hotelcheckin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(36, this->hotelcheckin(), target);
  }

  // int32 hotelCheckOut = 37;
  if (this->hotelcheckout() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(37, this->hotelcheckout(), target);
  }

  // int32 minAge = 38;
  if (this->minage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(38, this->minage(), target);
  }

  // int32 rating = 39;
  if (this->rating() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(39, this->rating(), target);
  }

  // bool fireSafety = 40;
  if (this->firesafety() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(40, this->firesafety(), target);
  }

  // int32 chain = 41;
  if (this->chain() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(41, this->chain(), target);
  }

  // string lastUpdated = 42;
  if (this->lastupdated().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->lastupdated().data(), static_cast<int>(this->lastupdated().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.lastUpdated");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        42, this->lastupdated(), target);
  }

  // int32 transferMandatory = 43;
  if (this->transfermandatory() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(43, this->transfermandatory(), target);
  }

  // string tariffNotes = 44;
  if (this->tariffnotes().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tariffnotes().data(), static_cast<int>(this->tariffnotes().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.tariffNotes");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        44, this->tariffnotes(), target);
  }

  // string chainName = 45;
  if (this->chainname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->chainname().data(), static_cast<int>(this->chainname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.chainName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        45, this->chainname(), target);
  }

  // int32 hotelProperty = 46;
  if (this->hotelproperty() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(46, this->hotelproperty(), target);
  }

  // string fullAddress = 47;
  if (this->fulladdress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fulladdress().data(), static_cast<int>(this->fulladdress().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.fullAddress");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        47, this->fulladdress(), target);
  }

  // string attraction = 48;
  if (this->attraction().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->attraction().data(), static_cast<int>(this->attraction().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.HotelStaticData.attraction");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        48, this->attraction(), target);
  }

  // bool exclusive = 49;
  if (this->exclusive() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(49, this->exclusive(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuffer.dotwproto.HDReply.HotelStaticData)
  return target;
}

size_t HDReply_HotelStaticData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuffer.dotwproto.HDReply.HotelStaticData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .protobuffer.dotwproto.HDReply.HotelStaticData.RoomTypeStaticData roomTypeStaticDataList = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->roomtypestaticdatalist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->roomtypestaticdatalist(static_cast<int>(i)));
    }
  }

  // repeated string geoPoint = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->geopoint_size());
  for (int i = 0, n = this->geopoint_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->geopoint(i));
  }

  // repeated .protobuffer.dotwproto.HDReply.HotelStaticData.ImagesData images = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->images_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->images(static_cast<int>(i)));
    }
  }

  // repeated int32 hotelPreference = 8;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->hotelpreference_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _hotelpreference_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated string amenitie = 31;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->amenitie_size());
  for (int i = 0, n = this->amenitie_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->amenitie(i));
  }

  // repeated string leisure = 32;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->leisure_size());
  for (int i = 0, n = this->leisure_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->leisure(i));
  }

  // repeated string business = 33;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->business_size());
  for (int i = 0, n = this->business_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->business(i));
  }

  // repeated .protobuffer.dotwproto.HDReply.HotelStaticData.TransportationData transportation = 34;
  {
    unsigned int count = static_cast<unsigned int>(this->transportation_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->transportation(static_cast<int>(i)));
    }
  }

  // string description1 = 2;
  if (this->description1().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description1());
  }

  // string description2 = 3;
  if (this->description2().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description2());
  }

  // string ratingDescription = 5;
  if (this->ratingdescription().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ratingdescription());
  }

  // string hotelName = 15;
  if (this->hotelname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hotelname());
  }

  // string address = 16;
  if (this->address().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());
  }

  // string zipCode = 17;
  if (this->zipcode().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zipcode());
  }

  // string location = 18;
  if (this->location().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->location());
  }

  // string location1 = 20;
  if (this->location1().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->location1());
  }

  // string location2 = 21;
  if (this->location2().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->location2());
  }

  // string location3 = 22;
  if (this->location3().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->location3());
  }

  // string cityName = 23;
  if (this->cityname().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cityname());
  }

  // string stateName = 25;
  if (this->statename().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->statename());
  }

  // string countryName = 27;
  if (this->countryname().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->countryname());
  }

  // string regionName = 29;
  if (this->regionname().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->regionname());
  }

  // string hotelPhone = 35;
  if (this->hotelphone().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hotelphone());
  }

  // string lastUpdated = 42;
  if (this->lastupdated().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->lastupdated());
  }

  // string tariffNotes = 44;
  if (this->tariffnotes().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tariffnotes());
  }

  // string chainName = 45;
  if (this->chainname().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->chainname());
  }

  // string fullAddress = 47;
  if (this->fulladdress().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fulladdress());
  }

  // string attraction = 48;
  if (this->attraction().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->attraction());
  }

  // int32 builtYear = 10;
  if (this->builtyear() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->builtyear());
  }

  // int32 renovationYear = 11;
  if (this->renovationyear() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->renovationyear());
  }

  // int32 floors = 12;
  if (this->floors() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->floors());
  }

  // int32 noOfRooms = 13;
  if (this->noofrooms() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->noofrooms());
  }

  // bool direct = 7;
  if (this->direct() != 0) {
    total_size += 1 + 1;
  }

  // bool preferred = 9;
  if (this->preferred() != 0) {
    total_size += 1 + 1;
  }

  // bool luxury = 14;
  if (this->luxury() != 0) {
    total_size += 1 + 1;
  }

  // bool fireSafety = 40;
  if (this->firesafety() != 0) {
    total_size += 2 + 1;
  }

  // int32 locationId = 19;
  if (this->locationid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->locationid());
  }

  // int32 cityCode = 24;
  if (this->citycode() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->citycode());
  }

  // int32 stateCode = 26;
  if (this->statecode() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->statecode());
  }

  // int32 countryCode = 28;
  if (this->countrycode() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->countrycode());
  }

  // int32 regionCode = 30;
  if (this->regioncode() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->regioncode());
  }

  // int32 hotelCheckIn = 36;
  if (this->hotelcheckin() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->hotelcheckin());
  }

  // int32 hotelCheckOut = 37;
  if (this->hotelcheckout() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->hotelcheckout());
  }

  // int32 minAge = 38;
  if (this->minage() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->minage());
  }

  // int32 rating = 39;
  if (this->rating() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rating());
  }

  // int32 chain = 41;
  if (this->chain() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->chain());
  }

  // int32 transferMandatory = 43;
  if (this->transfermandatory() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->transfermandatory());
  }

  // int32 hotelProperty = 46;
  if (this->hotelproperty() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->hotelproperty());
  }

  // bool exclusive = 49;
  if (this->exclusive() != 0) {
    total_size += 2 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HDReply_HotelStaticData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuffer.dotwproto.HDReply.HotelStaticData)
  GOOGLE_DCHECK_NE(&from, this);
  const HDReply_HotelStaticData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HDReply_HotelStaticData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuffer.dotwproto.HDReply.HotelStaticData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuffer.dotwproto.HDReply.HotelStaticData)
    MergeFrom(*source);
  }
}

void HDReply_HotelStaticData::MergeFrom(const HDReply_HotelStaticData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuffer.dotwproto.HDReply.HotelStaticData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  roomtypestaticdatalist_.MergeFrom(from.roomtypestaticdatalist_);
  geopoint_.MergeFrom(from.geopoint_);
  images_.MergeFrom(from.images_);
  hotelpreference_.MergeFrom(from.hotelpreference_);
  amenitie_.MergeFrom(from.amenitie_);
  leisure_.MergeFrom(from.leisure_);
  business_.MergeFrom(from.business_);
  transportation_.MergeFrom(from.transportation_);
  if (from.description1().size() > 0) {

    description1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description1_);
  }
  if (from.description2().size() > 0) {

    description2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description2_);
  }
  if (from.ratingdescription().size() > 0) {

    ratingdescription_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ratingdescription_);
  }
  if (from.hotelname().size() > 0) {

    hotelname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hotelname_);
  }
  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  if (from.zipcode().size() > 0) {

    zipcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zipcode_);
  }
  if (from.location().size() > 0) {

    location_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_);
  }
  if (from.location1().size() > 0) {

    location1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location1_);
  }
  if (from.location2().size() > 0) {

    location2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location2_);
  }
  if (from.location3().size() > 0) {

    location3_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location3_);
  }
  if (from.cityname().size() > 0) {

    cityname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cityname_);
  }
  if (from.statename().size() > 0) {

    statename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.statename_);
  }
  if (from.countryname().size() > 0) {

    countryname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.countryname_);
  }
  if (from.regionname().size() > 0) {

    regionname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.regionname_);
  }
  if (from.hotelphone().size() > 0) {

    hotelphone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hotelphone_);
  }
  if (from.lastupdated().size() > 0) {

    lastupdated_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lastupdated_);
  }
  if (from.tariffnotes().size() > 0) {

    tariffnotes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tariffnotes_);
  }
  if (from.chainname().size() > 0) {

    chainname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chainname_);
  }
  if (from.fulladdress().size() > 0) {

    fulladdress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fulladdress_);
  }
  if (from.attraction().size() > 0) {

    attraction_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attraction_);
  }
  if (from.builtyear() != 0) {
    set_builtyear(from.builtyear());
  }
  if (from.renovationyear() != 0) {
    set_renovationyear(from.renovationyear());
  }
  if (from.floors() != 0) {
    set_floors(from.floors());
  }
  if (from.noofrooms() != 0) {
    set_noofrooms(from.noofrooms());
  }
  if (from.direct() != 0) {
    set_direct(from.direct());
  }
  if (from.preferred() != 0) {
    set_preferred(from.preferred());
  }
  if (from.luxury() != 0) {
    set_luxury(from.luxury());
  }
  if (from.firesafety() != 0) {
    set_firesafety(from.firesafety());
  }
  if (from.locationid() != 0) {
    set_locationid(from.locationid());
  }
  if (from.citycode() != 0) {
    set_citycode(from.citycode());
  }
  if (from.statecode() != 0) {
    set_statecode(from.statecode());
  }
  if (from.countrycode() != 0) {
    set_countrycode(from.countrycode());
  }
  if (from.regioncode() != 0) {
    set_regioncode(from.regioncode());
  }
  if (from.hotelcheckin() != 0) {
    set_hotelcheckin(from.hotelcheckin());
  }
  if (from.hotelcheckout() != 0) {
    set_hotelcheckout(from.hotelcheckout());
  }
  if (from.minage() != 0) {
    set_minage(from.minage());
  }
  if (from.rating() != 0) {
    set_rating(from.rating());
  }
  if (from.chain() != 0) {
    set_chain(from.chain());
  }
  if (from.transfermandatory() != 0) {
    set_transfermandatory(from.transfermandatory());
  }
  if (from.hotelproperty() != 0) {
    set_hotelproperty(from.hotelproperty());
  }
  if (from.exclusive() != 0) {
    set_exclusive(from.exclusive());
  }
}

void HDReply_HotelStaticData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuffer.dotwproto.HDReply.HotelStaticData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HDReply_HotelStaticData::CopyFrom(const HDReply_HotelStaticData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuffer.dotwproto.HDReply.HotelStaticData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HDReply_HotelStaticData::IsInitialized() const {
  return true;
}

void HDReply_HotelStaticData::Swap(HDReply_HotelStaticData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HDReply_HotelStaticData::InternalSwap(HDReply_HotelStaticData* other) {
  using std::swap;
  roomtypestaticdatalist_.InternalSwap(&other->roomtypestaticdatalist_);
  geopoint_.InternalSwap(&other->geopoint_);
  images_.InternalSwap(&other->images_);
  hotelpreference_.InternalSwap(&other->hotelpreference_);
  amenitie_.InternalSwap(&other->amenitie_);
  leisure_.InternalSwap(&other->leisure_);
  business_.InternalSwap(&other->business_);
  transportation_.InternalSwap(&other->transportation_);
  description1_.Swap(&other->description1_);
  description2_.Swap(&other->description2_);
  ratingdescription_.Swap(&other->ratingdescription_);
  hotelname_.Swap(&other->hotelname_);
  address_.Swap(&other->address_);
  zipcode_.Swap(&other->zipcode_);
  location_.Swap(&other->location_);
  location1_.Swap(&other->location1_);
  location2_.Swap(&other->location2_);
  location3_.Swap(&other->location3_);
  cityname_.Swap(&other->cityname_);
  statename_.Swap(&other->statename_);
  countryname_.Swap(&other->countryname_);
  regionname_.Swap(&other->regionname_);
  hotelphone_.Swap(&other->hotelphone_);
  lastupdated_.Swap(&other->lastupdated_);
  tariffnotes_.Swap(&other->tariffnotes_);
  chainname_.Swap(&other->chainname_);
  fulladdress_.Swap(&other->fulladdress_);
  attraction_.Swap(&other->attraction_);
  swap(builtyear_, other->builtyear_);
  swap(renovationyear_, other->renovationyear_);
  swap(floors_, other->floors_);
  swap(noofrooms_, other->noofrooms_);
  swap(direct_, other->direct_);
  swap(preferred_, other->preferred_);
  swap(luxury_, other->luxury_);
  swap(firesafety_, other->firesafety_);
  swap(locationid_, other->locationid_);
  swap(citycode_, other->citycode_);
  swap(statecode_, other->statecode_);
  swap(countrycode_, other->countrycode_);
  swap(regioncode_, other->regioncode_);
  swap(hotelcheckin_, other->hotelcheckin_);
  swap(hotelcheckout_, other->hotelcheckout_);
  swap(minage_, other->minage_);
  swap(rating_, other->rating_);
  swap(chain_, other->chain_);
  swap(transfermandatory_, other->transfermandatory_);
  swap(hotelproperty_, other->hotelproperty_);
  swap(exclusive_, other->exclusive_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HDReply_HotelStaticData::GetMetadata() const {
  protobuf_genProto_2fDotw_5fProtoBuf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HDReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HDReply::kHotelStaticDataListFieldNumber;
const int HDReply::kErrorFieldNumber;
const int HDReply::kErrorCodeFieldNumber;
const int HDReply::kReplystringFieldNumber;
const int HDReply::kReplystringIntFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HDReply::HDReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::InitDefaultsHDReply();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuffer.dotwproto.HDReply)
}
HDReply::HDReply(const HDReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      hotelstaticdatalist_(from.hotelstaticdatalist_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error().size() > 0) {
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  errorcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.errorcode().size() > 0) {
    errorcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errorcode_);
  }
  replystring_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.replystring().size() > 0) {
    replystring_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.replystring_);
  }
  replystringint_ = from.replystringint_;
  // @@protoc_insertion_point(copy_constructor:protobuffer.dotwproto.HDReply)
}

void HDReply::SharedCtor() {
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errorcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  replystring_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  replystringint_ = 0;
  _cached_size_ = 0;
}

HDReply::~HDReply() {
  // @@protoc_insertion_point(destructor:protobuffer.dotwproto.HDReply)
  SharedDtor();
}

void HDReply::SharedDtor() {
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errorcode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  replystring_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HDReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HDReply::descriptor() {
  ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HDReply& HDReply::default_instance() {
  ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::InitDefaultsHDReply();
  return *internal_default_instance();
}

HDReply* HDReply::New(::google::protobuf::Arena* arena) const {
  HDReply* n = new HDReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HDReply::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuffer.dotwproto.HDReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hotelstaticdatalist_.Clear();
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errorcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  replystring_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  replystringint_ = 0;
  _internal_metadata_.Clear();
}

bool HDReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuffer.dotwproto.HDReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .protobuffer.dotwproto.HDReply.HotelStaticData hotelStaticDataList = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_hotelstaticdatalist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error().data(), static_cast<int>(this->error().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuffer.dotwproto.HDReply.error"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string errorCode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errorcode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->errorcode().data(), static_cast<int>(this->errorcode().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuffer.dotwproto.HDReply.errorCode"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string replystring = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_replystring()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->replystring().data(), static_cast<int>(this->replystring().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuffer.dotwproto.HDReply.replystring"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 replystringInt = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &replystringint_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuffer.dotwproto.HDReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuffer.dotwproto.HDReply)
  return false;
#undef DO_
}

void HDReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuffer.dotwproto.HDReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .protobuffer.dotwproto.HDReply.HotelStaticData hotelStaticDataList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->hotelstaticdatalist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->hotelstaticdatalist(static_cast<int>(i)), output);
  }

  // string error = 2;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error(), output);
  }

  // string errorCode = 3;
  if (this->errorcode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errorcode().data(), static_cast<int>(this->errorcode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.errorCode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->errorcode(), output);
  }

  // string replystring = 4;
  if (this->replystring().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->replystring().data(), static_cast<int>(this->replystring().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.replystring");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->replystring(), output);
  }

  // int32 replystringInt = 5;
  if (this->replystringint() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->replystringint(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuffer.dotwproto.HDReply)
}

::google::protobuf::uint8* HDReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuffer.dotwproto.HDReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .protobuffer.dotwproto.HDReply.HotelStaticData hotelStaticDataList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->hotelstaticdatalist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->hotelstaticdatalist(static_cast<int>(i)), deterministic, target);
  }

  // string error = 2;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error(), target);
  }

  // string errorCode = 3;
  if (this->errorcode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errorcode().data(), static_cast<int>(this->errorcode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.errorCode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->errorcode(), target);
  }

  // string replystring = 4;
  if (this->replystring().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->replystring().data(), static_cast<int>(this->replystring().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuffer.dotwproto.HDReply.replystring");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->replystring(), target);
  }

  // int32 replystringInt = 5;
  if (this->replystringint() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->replystringint(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuffer.dotwproto.HDReply)
  return target;
}

size_t HDReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuffer.dotwproto.HDReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .protobuffer.dotwproto.HDReply.HotelStaticData hotelStaticDataList = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->hotelstaticdatalist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->hotelstaticdatalist(static_cast<int>(i)));
    }
  }

  // string error = 2;
  if (this->error().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error());
  }

  // string errorCode = 3;
  if (this->errorcode().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errorcode());
  }

  // string replystring = 4;
  if (this->replystring().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->replystring());
  }

  // int32 replystringInt = 5;
  if (this->replystringint() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->replystringint());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HDReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuffer.dotwproto.HDReply)
  GOOGLE_DCHECK_NE(&from, this);
  const HDReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HDReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuffer.dotwproto.HDReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuffer.dotwproto.HDReply)
    MergeFrom(*source);
  }
}

void HDReply::MergeFrom(const HDReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuffer.dotwproto.HDReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  hotelstaticdatalist_.MergeFrom(from.hotelstaticdatalist_);
  if (from.error().size() > 0) {

    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  if (from.errorcode().size() > 0) {

    errorcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errorcode_);
  }
  if (from.replystring().size() > 0) {

    replystring_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.replystring_);
  }
  if (from.replystringint() != 0) {
    set_replystringint(from.replystringint());
  }
}

void HDReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuffer.dotwproto.HDReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HDReply::CopyFrom(const HDReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuffer.dotwproto.HDReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HDReply::IsInitialized() const {
  return true;
}

void HDReply::Swap(HDReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HDReply::InternalSwap(HDReply* other) {
  using std::swap;
  hotelstaticdatalist_.InternalSwap(&other->hotelstaticdatalist_);
  error_.Swap(&other->error_);
  errorcode_.Swap(&other->errorcode_);
  replystring_.Swap(&other->replystring_);
  swap(replystringint_, other->replystringint_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HDReply::GetMetadata() const {
  protobuf_genProto_2fDotw_5fProtoBuf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_genProto_2fDotw_5fProtoBuf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace dotwproto
}  // namespace protobuffer

// @@protoc_insertion_point(global_scope)
